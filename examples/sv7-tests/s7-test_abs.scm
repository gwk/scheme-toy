(num-test (abs -0) 0)
(num-test (abs -0.0) 0.0)
(num-test (abs -0.00000001) 0.00000001)
(num-test (abs -0/1) 0/1)
(num-test (abs -0/10) 0/10)
(num-test (abs -0/1234) 0/1234)
(num-test (abs -0/1234000000) 0/1234000000)
(num-test (abs -0/2) 0/2)
(num-test (abs -0/3) 0/3)
(num-test (abs -0/362880) 0/362880)
(num-test (abs -0/500029) 0/500029)
(num-test (abs -1) 1)
(num-test (abs -1.0) 1.0)
(num-test (abs -1/1) 1/1)
(num-test (abs -1/10) 1/10)
(num-test (abs -1/1234) 1/1234)
(num-test (abs -1/1234000000) 1/1234000000)
(num-test (abs -1/2) 1/2)
(num-test (abs -1/3) 1/3)
(num-test (abs -1/362880) 1/362880)
(num-test (abs -1/500029) 1/500029)
(num-test (abs -1/9223372036854775807) 1/9223372036854775807)
(num-test (abs -10) 10)
(num-test (abs -10/1) 10/1)
(num-test (abs -10/10) 10/10)
(num-test (abs -10/1234) 10/1234)
(num-test (abs -10/1234000000) 10/1234000000)
(num-test (abs -10/2) 10/2)
(num-test (abs -10/3) 10/3)
(num-test (abs -10/362880) 10/362880)
(num-test (abs -10/500029) 10/500029)
(num-test (abs -1234) 1234)
(num-test (abs -1234.0) 1234.0)
(num-test (abs -1234/1) 1234/1)
(num-test (abs -1234/10) 1234/10)
(num-test (abs -1234/1234) 1234/1234)
(num-test (abs -1234/1234000000) 1234/1234000000)
(num-test (abs -1234/2) 1234/2)
(num-test (abs -1234/3) 1234/3)
(num-test (abs -1234/362880) 1234/362880)
(num-test (abs -1234/500029) 1234/500029)
(num-test (abs -1234000000) 1234000000)
(num-test (abs -1234000000.0) 1234000000.0)
(num-test (abs -1234000000/1) 1234000000/1)
(num-test (abs -1234000000/10) 1234000000/10)
(num-test (abs -1234000000/1234) 1234000000/1234)
(num-test (abs -1234000000/1234000000) 1234000000/1234000000)
(num-test (abs -1234000000/2) 1234000000/2)
(num-test (abs -1234000000/3) 1234000000/3)
(num-test (abs -1234000000/362880) 1234000000/362880)
(num-test (abs -1234000000/500029) 1234000000/500029)
(num-test (abs -123456789) 123456789)
(num-test (abs -1234567890) 1234567890)
(num-test (abs -2) 2)
(num-test (abs -2.71828182845905) 2.71828182845905)
(num-test (abs -2/1) 2/1)
(num-test (abs -2/10) 2/10)
(num-test (abs -2/1234) 2/1234)
(num-test (abs -2/1234000000) 2/1234000000)
(num-test (abs -2/2) 2/2)
(num-test (abs -2/3) 2/3)
(num-test (abs -2/362880) 2/362880)
(num-test (abs -2/500029) 2/500029)
(num-test (abs -3) 3)
(num-test (abs -3.14159265358979) pi)
(num-test (abs -3/1) 3/1)
(num-test (abs -3/10) 3/10)
(num-test (abs -3/1234) 3/1234)
(num-test (abs -3/1234000000) 3/1234000000)
(num-test (abs -3/2) 3/2)
(num-test (abs -3/3) 3/3)
(num-test (abs -3/362880) 3/362880)
(num-test (abs -3/500029) 3/500029)
(num-test (abs -362880) 362880)
(num-test (abs -362880/1) 362880/1)
(num-test (abs -362880/10) 362880/10)
(num-test (abs -362880/1234) 362880/1234)
(num-test (abs -362880/1234000000) 362880/1234000000)
(num-test (abs -362880/2) 362880/2)
(num-test (abs -362880/3) 362880/3)
(num-test (abs -362880/362880) 362880/362880)
(num-test (abs -362880/500029) 362880/500029)
(num-test (abs -500029) 500029)
(num-test (abs -500029/1) 500029/1)
(num-test (abs -500029/10) 500029/10)
(num-test (abs -500029/1234) 500029/1234)
(num-test (abs -500029/1234000000) 500029/1234000000)
(num-test (abs -500029/2) 500029/2)
(num-test (abs -500029/3) 500029/3)
(num-test (abs -500029/362880) 500029/362880)
(num-test (abs -500029/500029) 500029/500029)
(num-test (abs -6) 6)
(num-test (abs -7) 7)
(num-test (abs 0) 0)
(num-test (abs 0.0) 0.0)
(num-test (abs 0.00000001) 0.00000001)
(num-test (abs 0/1) 0/1)
(num-test (abs 0/10) 0/10)
(num-test (abs 0/1234) 0/1234)
(num-test (abs 0/1234000000) 0/1234000000)
(num-test (abs 0/2) 0/2)
(num-test (abs 0/3) 0/3)
(num-test (abs 0/362880) 0/362880)
(num-test (abs 0/500029) 0/500029)
(num-test (abs 1) 1)
(num-test (abs 1.0) 1.0)
(num-test (abs 1/1) 1/1)
(num-test (abs 1/10) 1/10)
(num-test (abs 1/1234) 1/1234)
(num-test (abs 1/1234000000) 1/1234000000)
(num-test (abs 1/2) 1/2)
(num-test (abs 1/3) 1/3)
(num-test (abs 1/362880) 1/362880)
(num-test (abs 1/500029) 1/500029)
(num-test (abs 10) 10)
(num-test (abs 10/1) 10/1)
(num-test (abs 10/10) 10/10)
(num-test (abs 10/1234) 10/1234)
(num-test (abs 10/1234000000) 10/1234000000)
(num-test (abs 10/2) 10/2)
(num-test (abs 10/3) 10/3)
(num-test (abs 10/362880) 10/362880)
(num-test (abs 10/500029) 10/500029)
(num-test (abs 1234) 1234)
(num-test (abs 1234.0) 1234.0)
(num-test (abs 1234/1) 1234/1)
(num-test (abs 1234/10) 1234/10)
(num-test (abs 1234/1234) 1234/1234)
(num-test (abs 1234/1234000000) 1234/1234000000)
(num-test (abs 1234/2) 1234/2)
(num-test (abs 1234/3) 1234/3)
(num-test (abs 1234/362880) 1234/362880)
(num-test (abs 1234/500029) 1234/500029)
(num-test (abs 1234000000) 1234000000)
(num-test (abs 1234000000.0) 1234000000.0)
(num-test (abs 1234000000/1) 1234000000/1)
(num-test (abs 1234000000/10) 1234000000/10)
(num-test (abs 1234000000/1234) 1234000000/1234)
(num-test (abs 1234000000/1234000000) 1234000000/1234000000)
(num-test (abs 1234000000/2) 1234000000/2)
(num-test (abs 1234000000/3) 1234000000/3)
(num-test (abs 1234000000/362880) 1234000000/362880)
(num-test (abs 1234000000/500029) 1234000000/500029)
(num-test (abs 2) 2)
(num-test (abs 2.71828182845905) 2.71828182845905)
(num-test (abs 2/1) 2/1)
(num-test (abs 2/10) 2/10)
(num-test (abs 2/1234) 2/1234)
(num-test (abs 2/1234000000) 2/1234000000)
(num-test (abs 2/2) 2/2)
(num-test (abs 2/3) 2/3)
(num-test (abs 2/362880) 2/362880)
(num-test (abs 2/500029) 2/500029)
(num-test (abs 3) 3)
(num-test (abs 3/1) 3/1)
(num-test (abs 3/10) 3/10)
(num-test (abs 3/1234) 3/1234)
(num-test (abs 3/1234000000) 3/1234000000)
(num-test (abs 3/2) 3/2)
(num-test (abs 3/3) 3/3)
(num-test (abs 3/362880) 3/362880)
(num-test (abs 3/500029) 3/500029)
(num-test (abs 362880) 362880)
(num-test (abs 362880/1) 362880/1)
(num-test (abs 362880/10) 362880/10)
(num-test (abs 362880/1234) 362880/1234)
(num-test (abs 362880/1234000000) 362880/1234000000)
(num-test (abs 362880/2) 362880/2)
(num-test (abs 362880/3) 362880/3)
(num-test (abs 362880/362880) 362880/362880)
(num-test (abs 362880/500029) 362880/500029)
(num-test (abs 500029) 500029)
(num-test (abs 500029/1) 500029/1)
(num-test (abs 500029/10) 500029/10)
(num-test (abs 500029/1234) 500029/1234)
(num-test (abs 500029/1234000000) 500029/1234000000)
(num-test (abs 500029/2) 500029/2)
(num-test (abs 500029/3) 500029/3)
(num-test (abs 500029/362880) 500029/362880)
(num-test (abs 500029/500029) 500029/500029)
(num-test (abs 6) 6)
(num-test (abs 7) 7)
(num-test (abs pi) pi)

(num-test (abs -2.225073858507201399999999999999999999996E-308) 2.225073858507201399999999999999999999996E-308)
(num-test (abs -9223372036854775808) 9223372036854775808)
(num-test (abs 1.110223024625156799999999999999999999997E-16) 1.110223024625156799999999999999999999997E-16)
(num-test (abs 9223372036854775807) 9223372036854775807)
(test (= (abs (+ most-negative-fixnum 1)) most-positive-fixnum) #t)
(test (abs most-positive-fixnum) most-positive-fixnum)
(num-test (abs -922337203685477580) 922337203685477580)

(for-each
 (lambda (num-and-val)
   (let ((num (car num-and-val)) (val (cadr num-and-val))) (num-test-1 'abs num (abs num) val)))
 (vector (list 0 0) (list 1 1) (list 2 2) (list 3 3) (list -1 1) (list -2 2) (list -3 3) (list 9223372036854775807 9223372036854775807) 
	 (list 1/2 1/2) (list 1/3 1/3) (list -1/2 1/2) 
	 (list -1/3 1/3) (list 1/9223372036854775807 1/9223372036854775807) (list 0.0 0.0) 
	 (list 1.0 1.0) (list 2.0 2.0) (list -2.0 2.0) (list 1.000000000000000000000000000000000000002E-309 1.000000000000000000000000000000000000002E-309) 
	 (list 1e+16 1e+16) ))
  
(if with-bignums
    (begin
      (num-test (abs -1e310) 1e310)
      (num-test (abs -.1e310) 1e309)
      (num-test (abs -.00001e309) 1e304)
      (num-test (abs most-negative-fixnum) 9223372036854775808)
      (num-test (abs -.1e-400) 1.000000000000000000000000000000000000001E-401)
      (num-test (abs -1.797693134862315699999999999999999999998E308) 1.797693134862315699999999999999999999998E308)
      (num-test (abs -12345678901234567890) 12345678901234567890)
      (num-test (abs 12345678901234567890) 12345678901234567890)
      (num-test (abs 9223372036854775808.0) 9223372036854775808.0)
      (num-test (abs -9223372036854775808.0) 9223372036854775808.0)
      (num-test (abs 9223372036854775808/3) 9223372036854775808/3)
      (num-test (abs -9223372036854775808/3) 9223372036854775808/3)
      (num-test (abs 9223372036854775808) 9223372036854775808)
      (num-test (abs -9223372036854775808) 9223372036854775808)
      (num-test (abs 1231234567891234567895/4924938271564938271564) 1231234567891234567895/4924938271564938271564)
      (num-test (abs -1231234567891234567895/4924938271564938271564) 1231234567891234567895/4924938271564938271564)
      (num-test (abs 5/4924938271564938271564) 5/4924938271564938271564)
      (num-test (abs -5/4924938271564938271564) 5/4924938271564938271564)
      (num-test (abs 1231234567891234567895.4924938271564938271564) 1231234567891234567895.4924938271564938271564)
      (num-test (abs -1231234567891234567895.4924938271564938271564) 1231234567891234567895.4924938271564938271564)
      
      (test (< (abs (- 217307123869033896670383722255101771944951615456222473725950809456844385078286527901170732595082536915607499776643486838126400154358628745576030002134993982282420557293291331398770482226850626076965834765751024210059623687394545134173058036837172944503241193618487196846261991269480351798163386073355597133702428176134419602160051931823812274538708325328119629419660293102211559158897247464223430070715316610068188075169995173607390273159413073729599663002285391560133032803005324145809498542320942319/69171005865679080805116192745197553936743146778127491628445014149228719516632195993428601364184241694325570308897501794466504355763015991674090032275753543906386364041957503000266249940077862458146827521257517440768326138892186263673940157476537922438310169667984623997354774657585797547359740040386280140433453254961653602051204994301868729700341678413408419088335979860854285428030584998257285624659397393914631805389952520897186723117920856639645035858695810847480593484518166856238091362466500961 pi)) 1e-30) #t)
      (test (< (abs (- 86506249226122124054607019515040072569389309675677090446756879032293209564976057920114008345082990143050895371432654098617595803586181179031736344131661104245709204440599410618785461104070923873664766537405043170624321277708803595336768044461421851475181966244993926088957647640608814315524675779027527947452743019231877030652479460288601395608061537360792381908211008391170537372395545350366754911899795085297260398105485029514527793853213999006311528934617756311568188335120606938078206683552323219/31823870623143321794788842272907994994917601540780651644441590671647399038540853367332145707942720183928541015066510539504636213034857780420049324239395126123695561521079512763516656025946557452382852551302156382716241918690232497805575429042492016743374932252325803315778289435501557305339709678335435100310171257145989526559485407857600325792028152511795618358674583299689136950642929744615564346477399823659926550178426308547711386364571735861738189405232059295317994009776897697526162381026548407 (exp 1.0))) 1e-10) #t)
      
      (test (< (abs (- 394372834342725903069943709807632345074473102456264/125532772013612015195543173729505082616186012726141 pi)) 1e-100) #t)
      (test (< (abs (- 37263594917349868210957473113622483286895975031882232950275573404793068492510874215659862655765029385/11861370656940517106115970314230542917832783292279765360251185207749769595904108589726721941267812387 pi)) 1e-200) #t)
      (test (< (abs (- 9723120205746844213570925835953968530586731050832362731080980958991370971563630998369876152193644009314571826202389376113741653418445346223192649145551112347805140423409409719828584948506325652698166338315337526327656688617124164275819596889301942895/3094965286042593318538169915190725425595617454610327314732861344227207817775353866654459841280603529756895813991351842180977260125352058245398197717632118060786828996125027995519815695529226138848308047979443033939320415958110104195587441744710374021 pi)) 1e-500) #t)
      (test (< (abs (- 217307123869033896670383722255101771944951615456222473725950809456844385078286527901170732595082536915607499776643486838126400154358628745576030002134993982282420557293291331398770482226850626076965834765751024210059623687394545134173058036837172944503241193618487196846261991269480351798163386073355597133702428176134419602160051931823812274538708325328119629419660293102211559158897247464223430070715316610068188075169995173607390273159413073729599663002285391560133032803005324145809498542320942319/69171005865679080805116192745197553936743146778127491628445014149228719516632195993428601364184241694325570308897501794466504355763015991674090032275753543906386364041957503000266249940077862458146827521257517440768326138892186263673940157476537922438310169667984623997354774657585797547359740040386280140433453254961653602051204994301868729700341678413408419088335979860854285428030584998257285624659397393914631805389952520897186723117920856639645035858695810847480593484518166856238091362466500961 pi)) 1e-1000) #t)
      (test (< (abs (- 86506249226122124054607019515040072569389309675677090446756879032293209564976057920114008345082990143050895371432654098617595803586181179031736344131661104245709204440599410618785461104070923873664766537405043170624321277708803595336768044461421851475181966244993926088957647640608814315524675779027527947452743019231877030652479460288601395608061537360792381908211008391170537372395545350366754911899795085297260398105485029514527793853213999006311528934617756311568188335120606938078206683552323219/31823870623143321794788842272907994994917601540780651644441590671647399038540853367332145707942720183928541015066510539504636213034857780420049324239395126123695561521079512763516656025946557452382852551302156382716241918690232497805575429042492016743374932252325803315778289435501557305339709678335435100310171257145989526559485407857600325792028152511795618358674583299689136950642929744615564346477399823659926550178426308547711386364571735861738189405232059295317994009776897697526162381026548407 (exp (bignum "1.0")))) 1e-1000) #t)
      ))

(test (abs 0+0i) 0.0)
(test (abs 1.23 1.23) 'error)
(test (abs 1.23+1.0i) 'error)
(test (abs) 'error)
(test (nan? (abs 1/0)) #t)
(test (positive? (abs (real-part (log 0.0)))) #t)
(test (abs 1.0+0.1i) 'error)

;; an optimizer bug
(let () (define (t1) (let ((a 1+i) (b 0+i)) (abs (- a b)))) (num-test (t1) 1.0))

(for-each
 (lambda (arg)
   (test (abs arg) 'error))
 (list "hi" '() (integer->char 65) #f #t '(1 2) _ht_ 'a-symbol (cons 1 2) (make-vector 3) abs 
       #<eof> '(1 2 3) #\newline (lambda (a) (+ a 1)) #<unspecified> #<undefined>))
