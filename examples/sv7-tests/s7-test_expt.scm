(num-test (* (/ (expt 2 11) (+ (expt 2 10) 1)) (/ (+ (expt 2 11) 1) (expt 2 10))) 4098/1025)
(num-test (* (/ (expt 2 21) (+ (expt 2 20) 1)) (/ (+ (expt 2 21) 1) (expt 2 20))) 4194306/1048577)
(num-test (* (sqrt 2) (sqrt (- 31 (* 4 (sqrt (sqrt 3)) (sqrt (sqrt 5)))))) (+ (* (expt 3 1/4) (expt 5 3/4)) (- (* 2 (sqrt 5))) (* (expt 3 3/4) (expt 5 1/4)) (* 2 (sqrt 3))))
(num-test (* 1/18014398509481984 1/2) (expt 2 -55))
(num-test (+ (/ (expt 2 11) (+ (expt 2 10) 1)) (/ (+ (expt 2 11) 1) (expt 2 10))) 4197377/1049600)
(num-test (+ (/ (expt 2 21) (+ (expt 2 20) 1)) (/ (+ (expt 2 21) 1) (expt 2 20))) 4398049656833/1099512676352)
(num-test (+ (/ (expt 2 28)) (/ (expt 3 17)) 1/7 1/29) 1247968828249346465/7037157104192323584)
(num-test (+ (/ (expt 2 28)) (/ (expt 3 17)) 1/7 1/31) 1317300430901043787/7522478283791794176)
(num-test (+ (/ (expt 2 29)) (/ (expt 3 18)) 1/31) 207994819909949399/6447838528964395008)
(num-test (+ (/ (expt 2 30)) (/ (expt 3 18)) 1/13) 415989601508942005/5407864572679815168)
(num-test (+ (/ (expt 2 30)) (/ (expt 3 18)) 1/5) 415989589819643501/2079947912569159680)
(num-test (+ (/ (expt 2 30)) (/ (expt 3 20))) 4560526225/3743906242624487424)
(num-test (+ (/ (expt 2 31) (+ (expt 2 20) 1)) (/ (+ (expt 2 31) 1) (expt 2 20))) 4503601775902721/1099512676352)
(num-test (+ (expt (+ 1/2 (/ (sqrt 69) 18)) 1/3) (/ (expt (+ 1/2 (/ (sqrt 69) 18)) -1/3) 3)) (* (/ (* 2 (sqrt 3)) 3) (cos (/ (acos (/ (* 3 (sqrt 3)) 2)) 3))))
(num-test (+ (expt 2 5) (expt 298 5) (expt 351 5) (expt 474 5) (expt 500 5)) (expt 575 5))
(num-test (+ (expt 2230 4) (expt 3196 4) (expt 5620 4) (expt 6995 4)) (expt 7703 4))
(num-test (+ (expt 415280564497/348671682660 3) (expt 676702467503/348671682660 3)) 9)
(num-test (+ (expt 510 3) (expt 580 3)) (+ (expt 300 3) (expt 670 3)))
(num-test (+ 1 (expt 2 54)) 18014398509481985)
(num-test (+ 10000000000000000 1) 10000000000000001)
(num-test (+ 2 (expt 276694819753963/226588 1/158)) pi) ; 23 digits
(num-test (- (/ (expt 2 11) (+ (expt 2 10) 1)) (/ (+ (expt 2 11) 1) (expt 2 10))) -3073/1049600)
(num-test (- (/ (expt 2 21) (+ (expt 2 20) 1)) (/ (+ (expt 2 21) 1) (expt 2 20))) -3145729/1099512676352)
(num-test (- (/ (expt 2 31) (+ (expt 2 20) 1)) (/ (+ (expt 2 31) 1) (expt 2 20))) -2148532225/1099512676352)
(num-test (- (expt 2 54) 18014398509481983) 1)
(num-test (- (expt 2 54) 18014398509481984) 0)
(num-test (- 10000000000000000 9999999999999999) 1)
(num-test (/ (/ (expt 2 11) (+ (expt 2 10) 1)) (/ (+ (expt 2 11) 1) (expt 2 10))) 2097152/2100225)
(num-test (/ (/ (expt 2 21) (+ (expt 2 20) 1)) (/ (+ (expt 2 21) 1) (expt 2 20))) 2199023255552/2199026401281)
(num-test (/ (/ (expt 2 31) (+ (expt 2 20) 1)) (/ (+ (expt 2 31) 1) (expt 2 20))) 2251799813685248/2251801962217473)
(num-test (/ (expt 10 -20) (expt 10 -20)) 1)
(num-test (/ (expt 10 -200) (expt 10 -200)) 1)
(num-test (/ (expt 2 -53) 2) (expt 2 -54))
(num-test (/ (expt 2.3 50) (expt 2.3 49)) 2.3)
(num-test (/ (sqrt (* 7 (- 2 (expt 2 1/7)))) (expt 2 1/14)) (+ -1 (* 2 (expt 2 1/7)) (expt 2 3/7) (expt 2 5/7) (- (expt 2 6/7))))
(num-test (do ((i 1 (+ i 1)) (sum 0.0 (+ sum (expt (sin (/ (* pi i) (* 2 10))) 4)))) ((= i 11) sum)) 4.25)
(num-test (expt #e1 -111) 1)
(num-test (expt (+ (cos (/ (* 2 pi) 20)) (* 0+i (sin (/ (* 2 pi) 20)))) 20) 1.0)
(num-test (expt (+ pi 20) 0+i) -0.99999999924368-3.8892669402222e-05i)
(num-test (expt (- (expt 2 1/3) 1) 1/3) (+ (expt 1/9 1/3) (- (expt 2/9 1/3)) (expt 4/9 1/3)))
(num-test (expt (- (expt 2 1/3) 1) 1/3) (+ (expt 1/9 1/3) (- (expt 2/9 1/3)) (expt 4/9 1/3)))
(num-test (expt (- (expt 3 3/5) (expt 2 1/5)) 1/3) (/ (+ (- (* (expt 2 1/5) (expt 3 3/5))) (* (expt 2 3/5) (expt 3 2/5)) (expt 3 1/5) (expt 2 2/5)) (expt 5 2/3)))
(num-test (expt (/ (+ 1 (sqrt 5)) 2) 5) (/ (+ 11 (* 5 (sqrt 5))) 2))
(num-test (expt (/ (log (+ (expt 640320 3) 744)) pi) 2) 163.0) ; rest is 2.32167e-29
(num-test (expt (expt -1 -1/2) -2) -1)
(num-test (expt (expt -1 1/123) 123) -1)
(num-test (expt (expt -1/2 -1/2) -2) -1/2)
(num-test (expt (expt -1/2 1/2) 2) -1/2)
(num-test (expt (expt -1/3 -1/2) -2) -1/3)
(num-test (expt (expt -1/3 1/2) 2) -1/3)
(num-test (expt (expt -1/3 1/3) 3) -1/3)
(num-test (expt (expt -2 -1/2) -2) -2)
(num-test (expt (expt -2 1/2) 2) -2)
(num-test (expt (expt 0+i -1/2) -2) 0+i)
(num-test (expt (expt 0+i -1/3) -3) 0+i)
(num-test (expt (expt 0+i -1/4) -4) 0+i)
(num-test (expt (expt 0+i 0.5) 2) 0+i)
(num-test (expt (expt 0+i 1/10) 10) 0+i)
(num-test (expt (expt 0+i 1/3) 3) 0+i)
(num-test (expt (expt 0+i 1/4) 4) 0+i)
(num-test (expt (expt 1 -1/2) -2) 1)
(num-test (expt (expt 1 1/123) 123) 1)
(num-test (expt (expt 1+i 1/2) 2) 1+i)
(num-test (expt (expt 1+i 1/3) 3) 1+i)
(num-test (expt (expt 1+i 1/4) 4) 1+i)
(num-test (expt (expt 1-i 1/2) 2) 1-i)
(num-test (expt (expt 1-i 1/3) 3) 1-i)
(num-test (expt (expt 1-i 1/4) 4) 1-i)
(num-test (expt (expt 1/2 -1/2) -2) 1/2)
(num-test (expt (expt 2 0+i) (/ 0+i)) 2)
(num-test (expt (expt 2 1/10) 10) 2)
(num-test (expt (expt 2 1/30) 30) 2)
(num-test (expt (expt 2 30) 1/30) 2)
(num-test (expt (expt 2 50) 1/50) 2)
(num-test (expt (expt 20 10) 1/10) 20)
(num-test (expt (expt 40 10) 1/10) 40)
(num-test (expt -0 -0) 1)
(num-test (expt -0(quasiquote #e0)) 1)
(num-test (expt -0.0 -0.0) 0.0)
(num-test (expt -0.0 0) 0.0)
(num-test (expt -0.0 0-i) 0.0)
(num-test (expt -0.0 0.00000001) 0.0)
(num-test (expt -0.0 1.0) 0.0)
(num-test (expt -0.0 1234.0) 0.0)
(num-test (expt -0.0 1234000000.0) 0.0)
(num-test (expt -0.0 2.71828182845905) 0.0)
(num-test (expt -0.0 pi) 0.0)
(num-test (expt -0.0-1234000000.0i -1234000000.0-0.00000001i) 0.0)
(num-test (expt -0.00000001 -0.0) 1.0)
(num-test (expt -0.00000001 -0.00000001) 1.00000018420682-0.00000003141593i)
(num-test (expt -0.00000001 -1) -100000000.00000017881393-0.00000001224606i)
(num-test (expt -0.00000001 -1.0) -100000000.00000017881393-0.00000001224606i)
(num-test (expt -0.00000001 0) 1.0)
(num-test (expt -0.00000001 0.0) 1.0)
(num-test (expt -0.00000001 0.00000001) 0.99999981579321+0.00000003141592i)
(num-test (expt -0.00000001 1) -0.00000001+0.0i)
(num-test (expt -0.00000001 1.0) -0.00000001+0.0i)
(num-test (expt -0.00000001 10) 1e-80)
(num-test (expt -0.00000001 1234) 0.0)
(num-test (expt -0.00000001 1234.0) 0.0)
(num-test (expt -0.00000001 1234000000) 0.0)
(num-test (expt -0.00000001 1234000000.0) 0.0)
(num-test (expt -0.00000001 2) 1e-16)
(num-test (expt -0.00000001 2.71828182845905) -1.135859060227e-22+1.388206815575e-22i)
(num-test (expt -0.00000001 3) -1e-24)
(num-test (expt -0.00000001 362880) 0.0)
(num-test (expt -0.00000001 500029) 0.0)
(num-test (expt -0.00000001 pi) -6.6495946361558e-26-3.1697962381573e-26i)
(num-test (expt -0.00000001+0.00000001i 1.0-0.0i) -0.00000001+0.00000001i)
(num-test (expt -0.00000001+0.0i 0.00000001-0.00000001i) 0.99999984720911+0.00000021562270i)
(num-test (expt -0.00000001-0.00000001i -1.0-0.0i) -50000000.00000003725290+50000000.00000004470348i)
(num-test (expt -0.00000001-0.0i -0.00000001-0.00000001i) 1.00000021562275+0.00000015279091i)
(num-test (expt -1 (+ 1 (expt 2 32))) -1)
(num-test (expt -1 (- (expt 2 32))) 1)
(num-test (expt -1 (expt 2 32)) 1)
(num-test (expt -1 -0.0) 1.0)
(num-test (expt -1 -100) 1)
(num-test (expt -1 -1000) 1)
(num-test (expt -1 -1001) -1)
(num-test (expt -1 -101) -1)
(num-test (expt -1 -255) -1)
(num-test (expt -1 -256) 1)
(num-test (expt -1 0) 1)
(num-test (expt -1 0+i) 4.321391826377224977441773717172801127572810981063308298071968740105076575701806E-2)
(num-test (expt -1 0-i) 2.314069263277926900572908636794854738026610624260021199344504640952434235069032E1)
(num-test (expt -1 0.0) 1.0)
(num-test (expt -1 0.00000001) 1.0+0.00000003141593i)
(num-test (expt -1 1) -1)
(num-test (expt -1 1.0) -1.0+0.0i)
(num-test (expt -1 1/2) 0+i)
(num-test (expt -1 10) 1)
(num-test (expt -1 100) 1)
(num-test (expt -1 1000) 1)
(num-test (expt -1 1001) -1)
(num-test (expt -1 101) -1)
(num-test (expt -1 1234) 1)
(num-test (expt -1 1234.0) 1.0)
(num-test (expt -1 1234000000) 1)
(num-test (expt -1 1234000000.0) 1.0)
(num-test (expt -1 2) 1)
(num-test (expt -1 2.71828182845905) -0.63325565131482+0.77394268526671i)
(num-test (expt -1 255) -1)
(num-test (expt -1 256) 1)
(num-test (expt -1 3) -1)
(num-test (expt -1 362880) 1)
(num-test (expt -1 500029) -1)
(num-test (expt -1 pi) -0.90268536193307-0.43030121700009i)
(num-test (expt -1.0 -0.0) 1.0)
(num-test (expt -1.0 -0.00000001) 1.0-0.00000003141593i)
(num-test (expt -1.0 -1) -1.0-0.0i)
(num-test (expt -1.0 -1.0) -1.0-0.0i)
(num-test (expt -1.0 -10) 1.0+0.0i)
(num-test (expt -1.0 -1234) 1.0)
(num-test (expt -1.0 -1234.0) 1.0)
(num-test (expt -1.0 -1234000000) 1.0)
(num-test (expt -1.0 -1234000000.0) 1.0)
(num-test (expt -1.0 -2) 1.0+0.0i)
(num-test (expt -1.0 -2.71828182845905) -0.63325565131482-0.77394268526671i)
(num-test (expt -1.0 -3) -1.0-0.0i)
(num-test (expt -1.0 -3.14159265358979) -0.90268536193307+0.43030121700009i)
(num-test (expt -1.0 -362880) 1.0)
(num-test (expt -1.0 -500029) -1.0)
(num-test (expt -1.0 0) 1.0)
(num-test (expt -1.0 0.0) 1.0)
(num-test (expt -1.0 0.00000001) 1.0+0.00000003141593i)
(num-test (expt -1.0 1) -1.0+0.0i)
(num-test (expt -1.0 1.0) -1.0+0.0i)
(num-test (expt -1.0 1/2) 0+i)
(num-test (expt -1.0 10) 1.0-0.0i)
(num-test (expt -1.0 1234) 1.0)
(num-test (expt -1.0 1234.0) 1.0)
(num-test (expt -1.0 1234000000) 1.0)
(num-test (expt -1.0 1234000000.0) 1.0)
(num-test (expt -1.0 2) 1.0-0.0i)
(num-test (expt -1.0 2.71828182845905) -0.63325565131482+0.77394268526671i)
(num-test (expt -1.0 3) -1.0+0.0i)
(num-test (expt -1.0 362880) 1.0)
(num-test (expt -1.0 500029) -1.0)
(num-test (expt -1.0 pi) -0.90268536193307-0.43030121700009i)
(num-test (expt -1.0+0.00000001i 3.14159265358979-0.00000001i) -0.90268540381008-0.43030120215971i)
(num-test (expt -1.0+1.0i 2.71828182845905-0.0i) 2.54637618158683+0.31121428769451i)
(num-test (expt -1.0-0.00000001i -3.14159265358979-0.00000001i) -0.90268534709269-0.43030117512308i)
(num-test (expt -1.0-1.0i -2.71828182845905-0.0i) 0.38693516117166+0.04729063656767i)
(num-test (expt -1.0e+00+0.0e+00i -1.0e+00+0.0e+00i) -1e0+0.0i)
(num-test (expt -1.0e+00+0.0e+00i 0.0e+00+0.0e+00i) 1e0+0.0i)
(num-test (expt -1.0e+00+0.0e+00i 0.0e+00+1.0e+00i) 4.3213918263772249774e-2+0.0i)
(num-test (expt -1.0e+00+0.0e+00i 0.0e+00-1.0e+00i) 2.3140692632779269006e1+0.0i)
(num-test (expt -1.0e+00+0.0e+00i 1.0e+00+0.0e+00i) -1e0+0.0i)
(num-test (expt -1.0e+00+0.0e+00i 5.0e-01+1.00000000000000005551e-01i) 0+7.3040269104864559813e-1i)
(num-test (expt -1.0e+00+0.0e+00i 5.0e-01-1.00000000000000005551e-01i) 0+1.3691077706248469087e0i)
(num-test (expt -1/10 1234/1234000000) 0.99999769741262+0.00000314158542i)
(num-test (expt -1/2 (- (real-part (log 0)))) (expt -0.5 (- (real-part (log 0)))))
(num-test (expt -1/2 3/362880) 0.99999426929571+0.00002597201266i)
(num-test (expt -1/3 10/500029) 0.99997802729625+0.00006282682861i)
(num-test (expt -1/362880 0/2) 1)
(num-test (expt -1/500029 362880/3) 0.0)
(num-test (expt -1/8 -3) -512)
(num-test (expt -10 0) 1)
(num-test (expt -10 0.0) 1.0)
(num-test (expt -10 0.00000001) 1.00000002302585+0.00000003141593i)
(num-test (expt -10 1) -10)
(num-test (expt -10 1.0) -10.0+0.0i)
(num-test (expt -10 2) 100)
(num-test (expt -10 2.71828182845905) -331.02508265804954+404.56716151063557i)
(num-test (expt -10 3) -1000)
(num-test (expt -10 pi) -1250.63060831127905-596.16328730697728i)
(num-test (expt -10/1234 0/362880) 1)
(num-test (expt -10/1234000000 1/500029) 0.99996274095212+0.00000628258681i)
(num-test (expt -10/362880 3/1234) 0.97476967459219+0.00744502948457i)
(num-test (expt -10/500029 2/1234000000) 0.99999998246380+0.00000000509172i)
(num-test (expt -1234 0) 1)
(num-test (expt -1234 0.0) 1.0)
(num-test (expt -1234 0.00000001) 1.00000007118016+0.00000003141593i)
(num-test (expt -1234 1) -1234)
(num-test (expt -1234 1.0) -1234.00000000000045+0.00000000000015i)
(num-test (expt -1234 2) 1522756)
(num-test (expt -1234 2.71828182845905) -160193503.19500353932381+195782840.25985893607140i)
(num-test (expt -1234.0 -0.0) 1.0)
(num-test (expt -1234.0 -0.00000001) 0.99999992881984-0.00000003141592i)
(num-test (expt -1234.0 -1) -0.00081037277147-0.0i)
(num-test (expt -1234.0 -1.0) -0.00081037277147-0.0i)
(num-test (expt -1234.0 -2) 0.00000065670403+0.0i)
(num-test (expt -1234.0 -2.71828182845905) -0.00000000250330-0.00000000305945i)
(num-test (expt -1234.0 -3) -0.00000000053218-0.0i)
(num-test (expt -1234.0 -3.14159265358979) -0.00000000017534+0.00000000008358i)
(num-test (expt -1234.0 0) 1.0)
(num-test (expt -1234.0 0.0) 1.0)
(num-test (expt -1234.0 0.00000001) 1.00000007118016+0.00000003141593i)
(num-test (expt -1234.0 1) -1234.00000000000045+0.00000000000015i)
(num-test (expt -1234.0 1.0) -1234.00000000000045+0.00000000000015i)
(num-test (expt -1234.0 2) 1522756.00000000093132-0.00000000037296i)
(num-test (expt -1234.0 2.71828182845905) -160193503.19500353932381+195782840.25985893607140i)
(num-test (expt -1234.0+1234.0i 3.14159265358979-0.0i) 6676669154.05054950714111+13759228759.84499740600586i)
(num-test (expt -1234.0+2.71828182845905i 1.0-0.00000001i) -1234.00003854658053+2.71836975014915i)
(num-test (expt -1234.0-1234.0i -3.14159265358979-0.0i) 2.854567008891443E-11+5.882669873167984E-11i)
(num-test (expt -1234.0-2.71828182845905i -1.0-0.00000001i) -0.00081036881365+0.00000178515559i)
(num-test (expt -1234/10 0/1) 1)
(num-test (expt -1234/1234000000 2/362880) 0.99992385906203+0.00001731345596i)
(num-test (expt -1234/362880 10/1234000000) 0.99999995393994+0.00000002545861i)
(num-test (expt -1234/500029 3/500029) 0.99996397612963+0.00001884778372i)
(num-test (expt -1234000000 0) 1)
(num-test (expt -1234000000 0.0) 1.0)
(num-test (expt -1234000000 0.00000001) 1.00000020933529+0.00000003141593i)
(num-test (expt -1234000000.0 -0.0) 1.0)
(num-test (expt -1234000000.0 -0.00000001) 0.99999979066475-0.00000003141592i)
(num-test (expt -1234000000.0 -1) -0.00000000081037-0.0i)
(num-test (expt -1234000000.0 -1.0) -0.00000000081037-0.0i)
(num-test (expt -1234000000.0 0) 1.0)
(num-test (expt -1234000000.0 0.0) 1.0)
(num-test (expt -1234000000.0 0.00000001) 1.00000020933529+0.00000003141593i)
(num-test (expt -1234000000.0-1234.0i -2.71828182845905-0.00000001i) -1.2269326149532e-25+1.4995226540245e-25i) 
(num-test (expt -1234000000/10 1/2) 0.00000000000068+11108.55526159905094i)
(num-test (expt -1234000000/3 0/3) 1)
(num-test (expt -1234000000/362880 1234/500029) 1.02023991975054+0.00791007960266i)
(num-test (expt -1234000000/500029 10/362880) 1.00021527254493+0.00008659250882i)
(num-test (expt -2 0) 1)
(num-test (expt -2 0.0) 1.0)
(num-test (expt -2 0.00000001) 1.00000000693147+0.00000003141593i)
(num-test (expt -2 1) -2)
(num-test (expt -2 1.0) -2.0+0.0i)
(num-test (expt -2 10) 1024)
(num-test (expt -2 2) 4)
(num-test (expt -2 2.71828182845905) -4.16738324447062+5.09322857532248i)
(num-test (expt -2 3) -8)
(num-test (expt -2 pi) -7.96617830388569-3.79739869898975i)
(num-test (expt -2.71828182845905 -0.0) 1.0)
(num-test (expt -2.71828182845905 -0.00000001) 0.99999999000000-0.00000003141593i)
(num-test (expt -2.71828182845905 -1) -0.36787944117144-0.0i)
(num-test (expt -2.71828182845905 -1.0) -0.36787944117144-0.0i)
(num-test (expt -2.71828182845905 -10) 0.00004539992976+0.0i)
(num-test (expt -2.71828182845905 -2) 0.13533528323661+0.0i)
(num-test (expt -2.71828182845905 -2.71828182845905) -0.04178729661821-0.05107095765760i)
(num-test (expt -2.71828182845905 -3) -0.04978706836786-0.0i)
(num-test (expt -2.71828182845905 -3.14159265358979) -0.03900857144848+0.01859500162024i)
(num-test (expt -2.71828182845905 0) 1.0)
(num-test (expt -2.71828182845905 0.0) 1.0)
(num-test (expt -2.71828182845905 0.00000001) 1.00000001+0.00000003141593i)
(num-test (expt -2.71828182845905 1) -2.71828182845905+0.0i)
(num-test (expt -2.71828182845905 1.0) -2.71828182845905+0.0i)
(num-test (expt -2.71828182845905 10) 22026.46579480671789-0.00000000002697i)
(num-test (expt -2.71828182845905 2) 7.38905609893065-0.0i)
(num-test (expt -2.71828182845905 2.71828182845905) -9.59652220592352+11.72853041240636i)
(num-test (expt -2.71828182845905 3) -20.08553692318767+0.00000000000001i)
(num-test (expt -2.71828182845905 pi) -20.88876450460231-9.95746820210997i)
(num-test (expt -2.71828182845905+2.71828182845905i 0.00000001-0.0i) 1.00000001346574+0.00000002356195i)
(num-test (expt -2.71828182845905+3.14159265358979i 0.0-0.00000001i) 1.00000002284081-0.00000001424157i)
(num-test (expt -2.71828182845905-2.71828182845905i -0.00000001-0.0i) 0.99999998653426+0.00000002356194i)
(num-test (expt -2.71828182845905-3.14159265358979i -0.0-0.00000001i) 0.99999997715919-0.00000001424157i)
(num-test (expt -2/1 3/1) -8)
(num-test (expt -2/1234 500029/1234000000) 0.99739915734849+0.00126969420446i)
(num-test (expt -2/3 1234/362880) 0.99856514997103+0.01066829281071i)
(num-test (expt -2/500029 0/10) 1)
(num-test (expt -256 0) 1)
(num-test (expt -256 1) -256)
(num-test (expt -2742638075.5 1/2) (sqrt -2742638075.5))
(num-test (expt -2742638075.5 2) (* -2742638075.5 -2742638075.5)) ; from bug-guile
(num-test (expt -3 0) 1)
(num-test (expt -3 0.0) 1.0)
(num-test (expt -3 0.00000001) 1.00000001098612+0.00000003141593i)
(num-test (expt -3 1) -3)
(num-test (expt -3 1.0) -3.0+0.0i)
(num-test (expt -3 10) 59049)
(num-test (expt -3 2) 9)
(num-test (expt -3 2.71828182845905) -12.54668835889338+15.33411926056231i)
(num-test (expt -3 3) -27)
(num-test (expt -3 pi) -28.47456044077623-13.57354237468751i)
(num-test (expt -3.14159265358979 -0.0) 1.0)
(num-test (expt -3.14159265358979 -0.00000001) 0.99999998855270-0.00000003141593i)
(num-test (expt -3.14159265358979 -1) -0.31830988618379-0.0i)
(num-test (expt -3.14159265358979 -1.0) -0.31830988618379-0.0i)
(num-test (expt -3.14159265358979 -10) 0.00001067827923+0.0i)
(num-test (expt -3.14159265358979 -2) 0.10132118364234+0.0i)
(num-test (expt -3.14159265358979 -2.71828182845905) -0.02819587712308-0.03446000491078i)
(num-test (expt -3.14159265358979 -3) -0.03225153443320-0.0i)
(num-test (expt -3.14159265358979 -3.14159265358979) -0.02475677172327+0.01180130912803i)
(num-test (expt -3.14159265358979 0) 1.0)
(num-test (expt -3.14159265358979 0.0) 1.0)
(num-test (expt -3.14159265358979 0.00000001) 1.00000001144730+0.00000003141593i)
(num-test (expt -3.14159265358979 1) -3.14159265358979+0.0i)
(num-test (expt -3.14159265358979 1.0) -3.14159265358979+0.0i)
(num-test (expt -3.14159265358979 10) 93648.04747608296748)
(num-test (expt -3.14159265358979 2) 9.86960440108936-0.0i)
(num-test (expt -3.14159265358979 2.71828182845905) -14.22238854892297+17.38210083337688i)
(num-test (expt -3.14159265358979 3) -31.00627668029983)
(num-test (expt -3.14159265358979 pi) -32.91385774189388-15.68971165343314i)
(num-test (expt -3.14159265358979-3.14159265358979i -1234000000.0-0.0i) 0.0)
(num-test (expt -3/1 10/2) -243)
(num-test (expt -3/10 500029/362880) -0.07120470796705-0.17650615015342i)
(num-test (expt -3/1234 362880/500029) -0.00825127977478+0.00961700186370i)
(num-test (expt -3/1234000000 0/1234000000) 1)
(num-test (expt -3/362880 2/10) 0.07788060004397+0.05658356803852i)
(num-test (expt -3/500029 1/1234) 0.99030033992383+0.00252117260474i)
(num-test (expt -362880 0) 1)
(num-test (expt -362880 0.0) 1.0)
(num-test (expt -362880 0.00000001) 1.00000012801828+0.00000003141593i)
(num-test (expt -362880 1) -362880)
(num-test (expt -362880 1.0) -362879.99999999982538+0.00000000004444i)
(num-test (expt -362880/1 0/500029) 1)
(num-test (expt -362880/10 3/10) 13.71347740072436+18.87498236114703i)
(num-test (expt -362880/1234 10/3) -84553109.08903615176678-146450280.88012450933456i)
(num-test (expt -362880/1234000000 1234/2) 0.0)
(num-test (expt -362880/2 1/1234000000) 1.00000000981254+0.00000000254586i)
(num-test (expt -362880/3 2/1234) 1.01913575690562+0.00518920109559i)
(num-test (expt -500029 0) 1)
(num-test (expt -500029 0.0) 1.0)
(num-test (expt -500029 0.00000001) 1.00000013122422+0.00000003141593i)
(num-test (expt -500029 1) -500029)
(num-test (expt -500029 1.0) -500029.00000000040745+0.00000000006123i)
(num-test (expt -500029/1 362880/1234000000) 1.00386591183654+0.00092741384842i)
(num-test (expt -500029/10 2/3) -678.63064326537926+1175.42275370878747i)
(num-test (expt -500029/1234 3/2) -0.00000000000150-8156.80442672750178i)
(num-test (expt -500029/1234000000 10/1) 0.0)
(num-test (expt -500029/2 0/1234) 1)
(num-test (expt -500029/3 1/10) 3.16514579334680+1.02841820970710i)
(num-test (expt .1 -1) 10.0)
(num-test (expt .1 -2) 100.0)
(num-test (expt 0 (expt 2 31)) 0)
(num-test (expt 0 (expt 2 32)) 0)
(num-test (expt 0 (expt 2 33)) 0)
(num-test (expt 0 (expt 2 63)) 0)
(num-test (expt 0 (expt 2 64)) 0)
(num-test (expt 0 (expt 2 65)) 0)
(num-test (expt 0 -0.0) 0.0)
(num-test (expt 0 -0/4) 1)
(num-test (expt 0 0) 1)
(num-test (expt 0 -0) 1)
(num-test (expt 0 0.0) 0.0)
(num-test (expt 0 -0.0) 0.0)
(num-test (expt 0 0.00000001) 0.0)
(num-test (expt 0 1) 0)
(num-test (expt 0 1.0) 0.0)
(num-test (expt 0 1.0+i) 0.0) ; ??
(num-test (expt 0 1/10) 0)
(num-test (expt 0 1/4) 0)
(num-test (expt 0 10) 0)
(num-test (expt 0 100) 0)
(num-test (expt 0 1000) 0)
(num-test (expt 0 1001) 0)
(num-test (expt 0 101) 0)
(num-test (expt 0 1234) 0)
(num-test (expt 0 1234.0) 0.0)
(num-test (expt 0 1234000000) 0)
(num-test (expt 0 1234000000.0) 0.0)
(num-test (expt 0 2) 0)
(num-test (expt 0 2.71828182845905) 0.0)
(num-test (expt 0 256) 0)
(num-test (expt 0 3) 0)
(num-test (expt 0 362880) 0)
(num-test (expt 0 500029) 0)
(num-test (expt 0 pi) 0.0)
(num-test (expt 0+1e-15i 0-1e-15i) 1.0000000000000015707963267943015114538E0+3.453877639491074211979699606989171173842E-14i)
(num-test (expt 0+1i 2) -1)
(num-test (expt 0+i 0+i) 2.078795763507619085469556198349787700342E-1)
(num-test (expt 0+i 0+i) (exp (/ pi -2)))
(num-test (expt 0+i 0-i) 4.810477380965351655473035666703833126401E0)
(num-test (expt 0+i 1/2) (make-rectangular (/ (sqrt 2)) (/ (sqrt 2))))
(num-test (expt 0+i 2) -1.0)
(num-test (expt 0-i 1+i) 0.0-4.810477380965351655473035666703833126401E0i)
(num-test (expt 0-i 1-i) 0.0-2.078795763507619085469556198349787700342E-1i)
(num-test (expt 0-i 2) -1)
(num-test (expt 0.0 (expt 2 31)) 0.0)
(num-test (expt 0.0 (expt 2 32)) 0.0)
(num-test (expt 0.0 (expt 2 33)) 0.0)
(num-test (expt 0.0 (expt 2 63)) 0.0)
(num-test (expt 0.0 (expt 2 64)) 0.0)
(num-test (expt 0.0 (expt 2 65)) 0.0)
(num-test (expt 0.0 0) 0.0)
(num-test (expt 0.0 0+i) 0.0) ; why would they be radically different?
(num-test (expt 0.0 0-i) 0.0)
(num-test (expt 0.0 0.0) 0.0)
(num-test (expt 0.0 0.00000001) 0.0)
(num-test (expt 0.0 1) 0.0)
(num-test (expt 0.0 1.0) 0.0)
(num-test (expt 0.0 1234.0) 0.0)
(num-test (expt 0.0 1234000000.0) 0.0)
(num-test (expt 0.0 1e-15+i) 0.0)
(num-test (expt 0.0 1e-15-i) 0.0)
(num-test (expt 0.0 2.71828182845905) 0.0)
(num-test (expt 0.0 pi) 0.0)
(num-test (expt 0.0-1234000000.0i -1234000000.0+0.00000001i) 0.0)
(num-test (expt 0.00000001 -0.0) 1.0)
(num-test (expt 0.00000001 -0.00000001) 1.00000018420682)
(num-test (expt 0.00000001 -1) 100000000.00000017881393)
(num-test (expt 0.00000001 -1.0) 100000000.00000017881393)
(num-test (expt 0.00000001 0) 1.0)
(num-test (expt 0.00000001 0.0) 1.0)
(num-test (expt 0.00000001 0.00000001) 0.99999981579321)
(num-test (expt 0.00000001 1) 0.00000001)
(num-test (expt 0.00000001 1.0) 0.00000001)
(num-test (expt 0.00000001 10) 0.0)
(num-test (expt 0.00000001 1234) 0.0)
(num-test (expt 0.00000001 1234.0) 0.0)
(num-test (expt 0.00000001 1234000000) 0.0)
(num-test (expt 0.00000001 1234000000.0) 0.0)
(num-test (expt 0.00000001 2) 0.0)
(num-test (expt 0.00000001 2.71828182845905) 0.0)
(num-test (expt 0.00000001 3) 0.0)
(num-test (expt 0.00000001 362880) 0.0)
(num-test (expt 0.00000001 500029) 0.0)
(num-test (expt 0.00000001 pi) 0.0)
(num-test (expt 0.00000001+0.00000001i 1.0+0.0i) 0.00000001+0.00000001i)
(num-test (expt 0.00000001+0.0i 0.00000001+0.00000001i) 0.99999981579319-0.00000018420677i)
(num-test (expt 0.00000001-0.00000001i -1.0+0.0i) 50000000.00000004470348+50000000.00000003725290i)
(num-test (expt 0.00000001-0.0i -0.00000001+0.00000001i) 1.00000018420681-0.00000018420684i)
(num-test (expt 0.0e+00+1.0e+00i -1.0e+00+0.0e+00i) 0-1i)
(num-test (expt 0.0e+00+1.0e+00i 0.0e+00+0.0e+00i) 1e0+0.0i)
(num-test (expt 0.0e+00+1.0e+00i 0.0e+00+1.0e+00i) 2.0787957635076190855e-1+0.0i)
(num-test (expt 0.0e+00+1.0e+00i 0.0e+00-1.0e+00i) 4.8104773809653516555e0+0.0i)
(num-test (expt 0.0e+00+1.0e+00i 1.0e+00+0.0e+00i) 0+1i)
(num-test (expt 0.0e+00+1.0e+00i 5.0e-01+1.00000000000000005551e-01i) 6.0431891044739184057e-1+6.0431891044739184057e-1i)
(num-test (expt 0.0e+00+1.0e+00i 5.0e-01-1.00000000000000005551e-01i) 8.2737771622906514822e-1+8.2737771622906514822e-1i)
(num-test (expt 0.0e+00-1.0e+00i -1.0e+00+0.0e+00i) 0+1i)
(num-test (expt 0.0e+00-1.0e+00i 0.0e+00+0.0e+00i) 1e0+0.0i)
(num-test (expt 0.0e+00-1.0e+00i 0.0e+00+1.0e+00i) 4.8104773809653516555e0+0.0i)
(num-test (expt 0.0e+00-1.0e+00i 0.0e+00-1.0e+00i) 2.0787957635076190855e-1+0.0i)
(num-test (expt 0.0e+00-1.0e+00i 1.0e+00+0.0e+00i) 0-1i)
(num-test (expt 0.0e+00-1.0e+00i 5.0e-01+1.00000000000000005551e-01i) 8.2737771622906514822e-1-8.2737771622906514822e-1i)
(num-test (expt 0.0e+00-1.0e+00i 5.0e-01-1.00000000000000005551e-01i) 6.0431891044739184057e-1-6.0431891044739184057e-1i)
(num-test (expt 0/1 1/362880) 0.0)
(num-test (expt 0/10 10/1234) 0.0)
(num-test (expt 0/11 000) 1)
(num-test (expt 0/1234 1234/10) 0.0)
(num-test (expt 0/2 2/500029) 0.0)
(num-test (expt 0/3 3/1234000000) 0.0)
(num-test (expt 0/362880 362880/1) 0)
(num-test (expt 0/500029 500029/2) 0.0)
(test (expt -0.0 most-positive-fixnum) 0.0)
(test (expt 0 most-positive-fixnum) 0)
(test (expt 0 (- (expt 2 32))) 'error)
(test (expt 0 (- (expt 2.0 60))) 'error)
(test (expt 0 (make-rectangular (- (expt 2 60)) 1.0)) 'error)
(test (expt 0 -255) 'error)
(test (expt 0 -1) 'error)
(test (expt 0 -1.0) 'error)
(test (expt 0 -1/2) 'error)
(test (expt 0 1/2) 0.0)
(test (expt 0 -0+i) 0.0)
(test (expt 0 -0-i) 0.0)
(test (expt 0 -1+i) 'error)
(test (expt 0 most-negative-fixnum) 'error)
(test (expt 0.0 most-negative-fixnum) 'error)
(test (expt 0.0 -255) 'error)
(test (expt 0.0 -1) 'error)
(test (expt 0.0 -1.0) 'error)
(test (expt 0.0 -1/2) 'error)
(test (expt 0.0 1/2) 0.0)
(test (expt 0.0 -0+i) 0.0)
(test (expt 0.0 -0-i) 0.0)
(test (expt 0.0 -1+i) 'error)
(test (expt 0.0 most-negative-fixnum) 'error)
(test (expt 0.0 most-negative-fixnum) 'error)
(num-test (expt 1 (- (expt 2 32))) 1)
(num-test (expt 1 (expt 2 32)) 1)
(num-test (expt 1 (real-part (log 0))) (expt 1.0 (real-part (log 0))))
(num-test (expt 1 -0) 1)
(num-test (expt 1 -0.0) 1.0)
(num-test (expt 1 -0.00000001) 1.0)
(num-test (expt 1 -1) 1)
(num-test (expt 1 -1.0) 1.0)
(num-test (expt 1 -10) 1)
(num-test (expt 1 -100) 1)
(num-test (expt 1 -1000) 1)
(num-test (expt 1 -1001) 1)
(num-test (expt 1 -101) 1)
(num-test (expt 1 -1234) 1)
(num-test (expt 1 -1234.0) 1.0)
(num-test (expt 1 -1234000000) 1)
(num-test (expt 1 -1234000000.0) 1.0)
(num-test (expt 1 -1e-15) 1)
(num-test (expt 1 -2) 1)
(num-test (expt 1 -2.71828182845905) 1.0)
(num-test (expt 1 -3) 1)
(num-test (expt 1 -3.14159265358979) 1.0)
(num-test (expt 1 -362880) 1)
(num-test (expt 1 -500029) 1)
(num-test (expt 1 0) 1)
(num-test (expt 1 0+i) 1)
(num-test (expt 1 0-i) 1)
(num-test (expt 1 0.0) 1.0)
(num-test (expt 1 0.00000001) 1.0)
(num-test (expt 1 1) 1)
(num-test (expt 1 1+i) 1)
(num-test (expt 1 1.0) 1.0)
(num-test (expt 1 1/10) 1)
(num-test (expt 1 10) 1)
(num-test (expt 1 100) 1)
(num-test (expt 1 1000) 1)
(num-test (expt 1 1001) 1)
(num-test (expt 1 101) 1)
(num-test (expt 1 1234) 1)
(num-test (expt 1 1234.0) 1.0)
(num-test (expt 1 1234000000) 1)
(num-test (expt 1 1234000000.0) 1.0)
(num-test (expt 1 2) 1)
(num-test (expt 1 2.71828182845905) 1.0)
(num-test (expt 1 3) 1)
(num-test (expt 1 362880) 1)
(num-test (expt 1 500029) 1)
(num-test (expt 1 most-negative-fixnum) 1)
(num-test (expt 1 pi) 1.0)
(num-test (expt 1+i 1) 1+i)
(num-test (expt 1+i 1.0) 1.0+i)
(num-test (expt 1.0 -0.0) 1.0)
(num-test (expt 1.0 -0.00000001) 1.0)
(num-test (expt 1.0 -1) 1.0)
(num-test (expt 1.0 -1.0) 1.0)
(num-test (expt 1.0 -1/2) 1.0)
(num-test (expt 1.0 -10) 1.0)
(num-test (expt 1.0 -1234) 1.0)
(num-test (expt 1.0 -1234.0) 1.0)
(num-test (expt 1.0 -1234000000) 1.0)
(num-test (expt 1.0 -1234000000.0) 1.0)
(num-test (expt 1.0 -2) 1.0)
(num-test (expt 1.0 -2.71828182845905) 1.0)
(num-test (expt 1.0 -3) 1.0)
(num-test (expt 1.0 -3.14159265358979) 1.0)
(num-test (expt 1.0 -362880) 1.0)
(num-test (expt 1.0 -500029) 1.0)
(num-test (expt 1.0 0) 1.0)
(num-test (expt 1.0 0.0) 1.0)
(num-test (expt 1.0 0.00000001) 1.0)
(num-test (expt 1.0 1) 1.0)
(num-test (expt 1.0 1.0) 1.0)
(num-test (expt 1.0 1/2) 1.0)
(num-test (expt 1.0 10) 1.0)
(num-test (expt 1.0 1234) 1.0)
(num-test (expt 1.0 1234.0) 1.0)
(num-test (expt 1.0 1234000000) 1.0)
(num-test (expt 1.0 1234000000.0) 1.0)
(num-test (expt 1.0 2) 1.0)
(num-test (expt 1.0 2.71828182845905) 1.0)
(num-test (expt 1.0 3) 1.0)
(num-test (expt 1.0 362880) 1.0)
(num-test (expt 1.0 500029) 1.0)
(num-test (expt 1.0 pi) 1.0)
(num-test (expt 1.0+0.00000001i 3.14159265358979+0.00000001i) 1.0+0.00000003141593i)
(num-test (expt 1.0+1.0i 2.71828182845905+0.0i) -1.37164508585166+2.16782742612896i)
(num-test (expt 1.0-0.00000001i -3.14159265358979+0.00000001i) 1.0+0.00000003141593i)
(num-test (expt 1.0-1.0i -2.71828182845905+0.0i) -0.20842863525121+0.32941270052205i)
(num-test (expt 1.0e+00+0.0e+00i -1.0e+00+0.0e+00i) 1e0+0.0i)
(num-test (expt 1.0e+00+0.0e+00i 0.0e+00+1.0e+00i) 1e0+0.0i)
(num-test (expt 1.0e+00+0.0e+00i 0.0e+00-1.0e+00i) 1e0+0.0i)
(num-test (expt 1.0e+00+0.0e+00i 1.0e+00+0.0e+00i) 1e0+0.0i)
(num-test (expt 1.0e+00+0.0e+00i 5.0e-01+1.00000000000000005551e-01i) 1e0+0.0i)
(num-test (expt 1.0e+00+0.0e+00i 5.0e-01-1.00000000000000005551e-01i) 1e0+0.0i)
(num-test (expt 1/10 1234/1234000000) 0.99999769741756)
(num-test (expt 1/1234000000 500029/10) 0.0)
(num-test (expt 1/2 (- (real-part (log 0)))) (expt 0.5 (- (real-part (log 0)))))
(num-test (expt 1/2 -10) 1024)
(num-test (expt 1/2 -3) 8)
(num-test (expt 1/2 1/3) 7.937005259840997373758528196361541301963E-1)
(num-test (expt 1/2 10) 1/1024)
(num-test (expt 1/2 3) 1/8)
(num-test (expt 1/2 3/362880) 0.99999426963298)
(num-test (expt 1/3 10/500029) 0.99997802926990)
(num-test (expt 1/362880 0/2) 1)
(num-test (expt 1/4 -2) 16)
(num-test (expt 1/4 1/2) 1/2)
(num-test (expt 1/4 1/3) 6.299605249474365823836053036391141752849E-1)
(num-test (expt 1/500029 362880/3) 0.0)
(num-test (expt 1/64 -1/2) 8)
(num-test (expt 1/64 -1/3) 4)
(num-test (expt 1/64 -2/3) 16)
(num-test (expt 1/64 -3/2) 512)
(num-test (expt 1/64 1/2) 1/8)
(num-test (expt 1/64 1/3) 1/4)
(num-test (expt 1/64 2/3) 1/16)
(num-test (expt 1/64 3/2) 1/512)
(num-test (expt 10 -0.0) 1.0)
(num-test (expt 10 -0.00000001) 0.99999997697415)
(num-test (expt 10 -1) 1/10)
(num-test (expt 10 -1.0) 0.1)
(num-test (expt 10 -10) 1/10000000000)
(num-test (expt 10 -2) 1/100)
(num-test (expt 10 -2.71828182845905) 0.00191301410222)
(num-test (expt 10 -3) 1/1000)
(num-test (expt 10 -3.14159265358979) 0.00072178415907)
(num-test (expt 10 0) 1)
(num-test (expt 10 0.0) 1.0)
(num-test (expt 10 0.00000001) 1.00000002302585)
(num-test (expt 10 1) 10)
(num-test (expt 10 1.0) 10.0)
(num-test (expt 10 10) 10000000000)
(num-test (expt 10 2) 100)
(num-test (expt 10 2.71828182845905) 522.73529967043669)
(num-test (expt 10 3) 1000)
(num-test (expt 10 pi) 1385.45573136701182)
(num-test (expt 10/1234 0/362880) 1)
(num-test (expt 10/1234000000 1/500029) 0.99996274097186)
(num-test (expt 10/362880 3/1234) 0.97479810574733)
(num-test (expt 10/500029 2/1234000000) 0.99999998246380)
(num-test (expt 10000000000 1/10) 10)
(num-test (expt 1024 1/10) 2)
(num-test (expt 1048576 1/10) 4)
(num-test (expt 1073741824 1/10) 8)
(num-test (expt 11 10) 25937424601)
(num-test (expt 1234 -0.0) 1.0)
(num-test (expt 1234 -0.00000001) 0.99999992881984)
(num-test (expt 1234 -1) 1/1234)
(num-test (expt 1234 -1.0) 0.00081037277147)
(num-test (expt 1234 -2) 1/1522756)
(num-test (expt 1234 -2.71828182845905) 0.00000000395307)
(num-test (expt 1234 -3) 1/1879080904)
(num-test (expt 1234 -3.14159265358979) 0.00000000019424)
(num-test (expt 1234 0) 1)
(num-test (expt 1234 0.0) 1.0)
(num-test (expt 1234 0.00000001) 1.00000007118016)
(num-test (expt 1234 1) 1234)
(num-test (expt 1234 1.0) 1234.00000000000045)
(num-test (expt 1234 2) 1522756)
(num-test (expt 1234 2.71828182845905) 252968138.32201290130615)
(num-test (expt 1234.0 -0.0) 1.0)
(num-test (expt 1234.0 -0.00000001) 0.99999992881984)
(num-test (expt 1234.0 -1) 0.00081037277147)
(num-test (expt 1234.0 -1.0) 0.00081037277147)
(num-test (expt 1234.0 -2) 0.00000065670403)
(num-test (expt 1234.0 -2.71828182845905) 0.00000000395307)
(num-test (expt 1234.0 -3) 0.00000000053218)
(num-test (expt 1234.0 -3.14159265358979) 0.00000000019424)
(num-test (expt 1234.0 0) 1.0)
(num-test (expt 1234.0 0.0) 1.0)
(num-test (expt 1234.0 0.00000001) 1.00000007118016)
(num-test (expt 1234.0 1) 1234.00000000000045)
(num-test (expt 1234.0 1.0) 1234.00000000000045)
(num-test (expt 1234.0 2) 1522756.00000000093132)
(num-test (expt 1234.0 2.71828182845905) 252968138.32201290130615)
(num-test (expt 1234.0+1234.0i 3.14159265358979+0.0i) -11947544392.17545890808105+9547275530.50568199157715i)
(num-test (expt 1234.0+2.71828182845905i 1.0+0.00000001i) 1233.99999977932634+2.71836966474906i)
(num-test (expt 1234.0-1234.0i -3.14159265358979+0.0i) -5.108095859217296E-11+4.081876325659167E-11i)
(num-test (expt 1234.0-2.71828182845905i -1.0+0.00000001i) 0.00081036883911+0.00000178515565i)
(num-test (expt 1234/10 0/1) 1)
(num-test (expt 1234/1234000000 2/362880) 0.99992385921192)
(num-test (expt 1234/362880 10/1234000000) 0.99999995393994)
(num-test (expt 1234/500029 3/500029) 0.99996397630725)
(num-test (expt 1234000000 -0.0) 1.0)
(num-test (expt 1234000000 -0.00000001) 0.99999979066475)
(num-test (expt 1234000000 -1) 1/1234000000)
(num-test (expt 1234000000 -1.0) 0.00000000081037)
(num-test (expt 1234000000 0) 1)
(num-test (expt 1234000000 0.0) 1.0)
(num-test (expt 1234000000 0.00000001) 1.00000020933529)
(num-test (expt 1234000000.0 -0.0) 1.0)
(num-test (expt 1234000000.0 -0.00000001) 0.99999979066475)
(num-test (expt 1234000000.0 -1) 0.00000000081037)
(num-test (expt 1234000000.0 -1.0) 0.00000000081037)
(num-test (expt 1234000000.0 0) 1.0)
(num-test (expt 1234000000.0 0.0) 1.0)
(num-test (expt 1234000000.0 0.00000001) 1.00000020933529)
(num-test (expt 1234000000.0-1234.0i -2.71828182845905+0.00000001i) 1.9375066625441e-25+5.672277629054e-31i)
(num-test (expt 1234000000/10 1/2) 11108.55526159905094)
(num-test (expt 1234000000/3 0/3) 1)
(num-test (expt 1234000000/362880 1234/500029) 1.02027058333165)
(num-test (expt 1234000000/500029 10/362880) 1.00021527629325)
(num-test (expt 14879/18662 14879/18662) 8.347553395975456341642526041524525735791E-1)
(num-test (expt 16 1/4) 2)
(num-test (expt 1e-1 1e1) 1e-10)
(num-test (expt 1e-1 1e2) 1e-100)
(num-test (expt 1e-15 -1e-15) 1.000000000000034538776394911284329951335E0)
(num-test (expt 1e-15 0+i) -0.999824358967590-0.018741697229594i)
(num-test (expt 1e-15 0-i) -0.999824358967590+0.018741697229594i)
(num-test (expt 1e-15 1e-15) 9.99999999999965461223605089908597123527E-1)
(num-test (expt 1e-15 1e100) 0.0)
(num-test (expt 1e15 -1e1) 1e-150)
(num-test (expt 1e15 1e1) 1e150)
(num-test (expt 1e18 -3) 1e-54)
(if (not with-bignums) (num-test (expt 1e18 -63) 0.0)) ; 1e-1134
(num-test (expt 1+1i -63) 2.3283064365386962890625E-10+2.3283064365386962890625E-10i)
(num-test (expt 1+1i -3) -0.25-0.25i)
(num-test (expt 2 (real-part (log 0))) (expt 2.0 (real-part (log 0))))
(num-test (expt 2 -0.0) 1.0)
(num-test (expt 2 -0.00000001) 0.99999999306853)
(num-test (expt 2 -1) 1/2)
(num-test (expt 2 -1.0) 0.50000000000000)
(num-test (expt 2 -10) 1/1024)
(num-test (expt 2 -2) 1/4)
(num-test (expt 2 -2.71828182845905) 0.15195522325791)
(num-test (expt 2 -3) 1/8)
(num-test (expt 2 -3.14159265358979) 0.11331473229676)
(num-test (expt 2 -9) 1/512)
(num-test (expt 2 0) 1)
(num-test (expt 2 0.0) 1.0)
(num-test (expt 2 0.00000001) 1.00000000693147)
(num-test (expt 2 1) 2)
(num-test (expt 2 1+i) 1.538477802727944253156659987322541402879E0+1.277922552627269602300065822929403568513E0i)
(num-test (expt 2 1.0) 2.0)
(num-test (expt 2 1/3) 1.25992104989487316476721060727822835057E0)
(num-test (expt 2 10) 1024)
(num-test (expt 2 2) 4)
(num-test (expt 2 2.71828182845905) 6.58088599101792)
(num-test (expt 2 3) 8)
(num-test (expt 2 9) 512)
(num-test (expt 2 pi) 8.82497782707629)
(num-test (expt 2.0 -1.0220000e+03) 2.225073858507201383090232717332404063624E-308)
(num-test (expt 2.0 1.0230000e+03) 8.98846567431157953864652595394512365232E307)
(num-test (expt 2.71828182845905 -0.0) 1.0)
(num-test (expt 2.71828182845905 -0.00000001) 0.99999999000000)
(num-test (expt 2.71828182845905 -1) 0.36787944117144)
(num-test (expt 2.71828182845905 -1.0) 0.36787944117144)
(num-test (expt 2.71828182845905 -10) 0.00004539992976)
(num-test (expt 2.71828182845905 -2) 0.13533528323661)
(num-test (expt 2.71828182845905 -2.71828182845905) 0.06598803584531)
(num-test (expt 2.71828182845905 -3) 0.04978706836786)
(num-test (expt 2.71828182845905 -3.14159265358979) 0.04321391826377)
(num-test (expt 2.71828182845905 0) 1.0)
(num-test (expt 2.71828182845905 0.0) 1.0)
(num-test (expt 2.71828182845905 0.00000001) 1.00000001)
(num-test (expt 2.71828182845905 1) 2.71828182845905)
(num-test (expt 2.71828182845905 1.0) 2.71828182845905)
(num-test (expt 2.71828182845905 10) 22026.46579480671789)
(num-test (expt 2.71828182845905 2) 7.38905609893065)
(num-test (expt 2.71828182845905 2.71828182845905) 15.15426224147926)
(num-test (expt 2.71828182845905 3) 20.08553692318767)
(num-test (expt 2.71828182845905 pi) 23.14069263277927)
(num-test (expt 2.71828182845905+2.71828182845905i 0.00000001+0.0i) 1.00000001346574+0.00000000785398i)
(num-test (expt 2.71828182845905+3.14159265358979i 0.0+0.00000001i) 0.99999999142488+0.00000001424157i)
(num-test (expt 2.71828182845905-2.71828182845905i -0.00000001+0.0i) 0.99999998653426+0.00000000785398i)
(num-test (expt 2.71828182845905-3.14159265358979i -0.0+0.00000001i) 1.00000000857512+0.00000001424157i)
(num-test (expt 2/1 3/1) 8)
(num-test (expt 2/10 1234000000/500029) 0.0)
(num-test (expt 2/1234 500029/1234000000) 0.99739996551176)
(num-test (expt 2/1234000000 362880/1234) 0.0)
(num-test (expt 2/3 -5) (/ 1 (* 2/3 2/3 2/3 2/3 2/3)))
(num-test (expt 2/3 1234/362880) 0.99862213634996)
(num-test (expt 2/3 5) (* 2/3 2/3 2/3 2/3 2/3))
(num-test (expt 2/362880 1/3) 0.01766399721581)
(num-test (expt 2/500029 0/10) 1)
(num-test (expt 25 6) (+ (expt 1 6) (expt 2 6) (expt 3 6) (expt 5 6) (expt 6 6) (expt 7 6) (expt 8 6) (expt 9 6) (expt 10 6) (expt 12 6) (expt 13 6) (expt 15 6) (expt 16 6) (expt 17 6) (expt 18 6) (expt 23 6)))
(num-test (expt 256 0) 1)
(num-test (expt 256 1) 256)
(num-test (expt 25937424601 1/10) 11)
(num-test (expt 2718/1000 617/5) 3.858179469787681136058424024656091858698003418770850904916305853631035158956514884526199288e53) ; not an int!
(num-test (expt 282475249 1/10) 7)
(num-test (expt 29490/26049 29490/26049) 1.15080464191338725897675441635942490625E0)
(num-test (expt 3 -0.0) 1.0)
(num-test (expt 3 -0.00000001) 0.99999998901388)
(num-test (expt 3 -1) 1/3)
(num-test (expt 3 -1.0) 0.33333333333333)
(num-test (expt 3 -10) 1/59049)
(num-test (expt 3 -2) 1/9)
(num-test (expt 3 -2.71828182845905) 0.05047193595639)
(num-test (expt 3 -3) 1/27)
(num-test (expt 3 -3.14159265358979) 0.03170146783514)
(num-test (expt 3 0) 1)
(num-test (expt 3 0.0) 1.0)
(num-test (expt 3 0.00000001) 1.00000001098612)
(num-test (expt 3 1) 3)
(num-test (expt 3 1.0) 3.0)
(num-test (expt 3 10) 59049)
(num-test (expt 3 2) 9)
(num-test (expt 3 2.71828182845905) 19.81299074527465)
(num-test (expt 3 3) 27)
(num-test (expt 3 9) (* 3 3 3 3 3 3 3 3 3))
(num-test (expt 3 pi) 31.54428070019755)
(num-test (expt 3.0 0) 1.0)
(num-test (expt 3.0 0.0) 1.0)
(num-test (expt 3.0 1) 3.0)
(num-test (expt 3.0 1.0) 3.0)
(num-test (expt 3.14159265358979 -0.0) 1.0)
(num-test (expt 3.14159265358979 -0.00000001) 0.99999998855270)
(num-test (expt 3.14159265358979 -1) 0.31830988618379)
(num-test (expt 3.14159265358979 -1.0) 0.31830988618379)
(num-test (expt 3.14159265358979 -10) 0.00001067827923)
(num-test (expt 3.14159265358979 -2) 0.10132118364234)
(num-test (expt 3.14159265358979 -2.71828182845905) 0.04452526726692)
(num-test (expt 3.14159265358979 -3) 0.03225153443320)
(num-test (expt 3.14159265358979 -3.14159265358979) 0.02742569312330)
(num-test (expt 3.14159265358979 0) 1.0)
(num-test (expt 3.14159265358979 0.0) 1.0)
(num-test (expt 3.14159265358979 0.00000001) 1.00000001144730)
(num-test (expt 3.14159265358979 1) pi)
(num-test (expt 3.14159265358979 1.0) pi)
(num-test (expt 3.14159265358979 10) 93648.04747608296748)
(num-test (expt 3.14159265358979 2) 9.86960440108936)
(num-test (expt 3.14159265358979 2.71828182845905) 22.45915771836104)
(num-test (expt 3.14159265358979 3) 31.00627668029983)
(num-test (expt 3.14159265358979 pi) 36.46215960720790)
(num-test (expt 3.14159265358979-3.14159265358979i -1234000000.0+0.0i) 0.0)
(num-test (expt 3/1 10/2) 243)
(num-test (expt 3/10 500029/362880) 0.19032743228093)
(num-test (expt 3/1234 362880/500029) 0.01267163536282)
(num-test (expt 3/1234000000 0/1234000000) 1)
(num-test (expt 3/362880 2/10) 0.09626571578282)
(num-test (expt 3/4 0) 1)
(num-test (expt 3/4 0.0) 1.0)
(num-test (expt 3/4 1) 3/4)
(num-test (expt 3/4 1.0) 0.75)
(num-test (expt 3/500029 1/1234) 0.99030354920325)
(num-test (expt 3486784401 1/10) 9)
(num-test (expt 362880 -0.0) 1.0)
(num-test (expt 362880 -0.00000001) 0.99999987198173)
(num-test (expt 362880 -1) 1/362880)
(num-test (expt 362880 -1.0) 0.00000275573192)
(num-test (expt 362880 -2) 1/131681894400)
(num-test (expt 362880 0) 1)
(num-test (expt 362880 0.0) 1.0)
(num-test (expt 362880 0.00000001) 1.00000012801828)
(num-test (expt 362880 1) 362880)
(num-test (expt 362880 1.0) 362879.99999999982538)
(num-test (expt 362880/1 0/500029) 1)
(num-test (expt 362880/10 3/10) 23.33076127248722)
(num-test (expt 362880/1234 10/3) 169106218.17807236313820)
(num-test (expt 362880/1234000000 1234/2) 0.0)
(num-test (expt 362880/2 1/1234000000) 1.00000000981254)
(num-test (expt 362880/3 2/1234) 1.01914896791961)
(num-test (expt 36836/40706 36836/40706) 9.135636805317119582757524254250295946631E-1)
(num-test (expt 38246/41321 38246/41321) 9.309245639585393834533875308768247886091E-1)
(num-test (expt 4 1/3) 1.587401051968199474751705639272308260393E0)
(num-test (expt 4 10) 1048576)
(num-test (expt 45692/25507 45692/25507) 2.841422098671431061341360858366953184273E0)
(num-test (expt 46394/6866 46394/6866) 4.043224602803809364259118808807234861721E5)
(num-test (expt 5 10) 9765625)
(num-test (expt 5.0e-01+1.00000000000000005551e-01i -1.0e+00+0.0e+00i) 1.9230769230769230687e0-3.8461538461538463509e-1i)
(num-test (expt 5.0e-01+1.00000000000000005551e-01i 0.0e+00+0.0e+00i) 1e0+0.0i)
(num-test (expt 5.0e-01+1.00000000000000005551e-01i 0.0e+00+1.0e+00i) 6.4160554864378080418e-1-5.1201864456768275590e-1i)
(num-test (expt 5.0e-01+1.00000000000000005551e-01i 0.0e+00-1.0e+00i) 9.5219021866126714108e-1+7.5987364224031834571e-1i)
(num-test (expt 5.0e-01+1.00000000000000005551e-01i 1.0e+00+0.0e+00i) 5e-1+1.0000000000000000555e-1i)
(num-test (expt 5.0e-01+1.00000000000000005551e-01i 5.0e-01+1.00000000000000005551e-01i) 6.9977300530987816719e-1+2.1940939105372143160e-2i)
(num-test (expt 5.0e-01+1.00000000000000005551e-01i 5.0e-01-1.00000000000000005551e-01i) 7.1829191470060938876e-1+1.2038189555821612762e-1i)
(num-test (expt 5.0e-01-1.00000000000000005551e-01i -1.0e+00+0.0e+00i) 1.9230769230769230687e0+3.8461538461538463509e-1i)
(num-test (expt 5.0e-01-1.00000000000000005551e-01i 0.0e+00+0.0e+00i) 1e0+0.0i)
(num-test (expt 5.0e-01-1.00000000000000005551e-01i 0.0e+00+1.0e+00i) 9.5219021866126714108e-1-7.5987364224031834571e-1i)
(num-test (expt 5.0e-01-1.00000000000000005551e-01i 0.0e+00-1.0e+00i) 6.4160554864378080418e-1+5.1201864456768275590e-1i)
(num-test (expt 5.0e-01-1.00000000000000005551e-01i 1.0e+00+0.0e+00i) 5e-1-1.0000000000000000555e-1i)
(num-test (expt 5.0e-01-1.00000000000000005551e-01i 5.0e-01+1.00000000000000005551e-01i) 7.1829191470060938876e-1-1.2038189555821612762e-1i)
(num-test (expt 5.0e-01-1.00000000000000005551e-01i 5.0e-01-1.00000000000000005551e-01i) 6.9977300530987816719e-1-2.1940939105372143160e-2i)
(num-test (expt 5.551115123125783999999999999999999999984E-17 1.110223024625156799999999999999999999997E-16) 9.999999999999958444410197170329529649165E-1)
(num-test (expt 500029 -0.0) 1.0)
(num-test (expt 500029 -0.00000001) 0.99999986877579)
(num-test (expt 500029 -1) 1/500029)
(num-test (expt 500029 -1.0) 0.00000199988401)
(num-test (expt 500029 -2) 1/250029000841)
(num-test (expt 500029 0) 1)
(num-test (expt 500029 0.0) 1.0)
(num-test (expt 500029 0.00000001) 1.00000013122422)
(num-test (expt 500029 1) 500029)
(num-test (expt 500029 1.0) 500029.00000000040745)
(num-test (expt 500029/1 362880/1234000000) 1.00386634022855)
(num-test (expt 500029/10 2/3) 1357.26128653075921)
(num-test (expt 500029/1234 3/2) 8156.80442672750178)

(if (not with-bignums)
    (num-test (expt 500029/1234000000 10/1) 0.0)
    (num-test (expt 500029/1234000000 10/1) 977129054104898258427314355689841897479681961836578300201/8187505353567209228244052427776000000000000000000000000000000000000000000000000000000000000))

(num-test (expt 500029/2 0/1234) 1)
(num-test (expt 500029/3 1/10) 3.32803123591083)
(num-test (expt 50664/22466 50664/22466) 6.258302816095884603297081160883745414829E0)
(num-test (expt 512 1/9) 2)
(num-test (expt 56052/41477 56052/41477) 1.502246288382607077882411462458143945519E0)
(num-test (expt 58288/55799 58288/55799) 1.046641989822034585352255152505850793912E0)
(num-test (expt 59049 1/10) 3)
(num-test (expt 6 10) 60466176)
(num-test (expt 60466176 1/10) 6)
(num-test (expt 64 -1/2) 1/8)
(num-test (expt 64 -1/3) 1/4)
(num-test (expt 64 -1/6) 1/2)
(num-test (expt 64 -2/3) 1/16)
(num-test (expt 64 -3/2) 1/512)
(num-test (expt 64 1/2) 8)
(num-test (expt 64 1/3) 4)
(num-test (expt 64 1/6) 2)
(num-test (expt 64 2/3) 16)
(num-test (expt 64 3/2) 512)
(num-test (expt 64/81 1/2) 8/9)
(num-test (expt 7 10) 282475249)
(num-test (expt 747/28616 747/28616) 9.092208838715899745892490249764275628871E-1)
(num-test (expt 8 1/3) 2)
(num-test (expt 8 10) 1073741824)
(num-test (expt 9 10) 3486784401)
(num-test (expt 9765625 1/10) 5)
(num-test (sqrt (- (expt 4 1/5) (expt 3 1/5))) (/ (+ (* (- (expt 2 3/5)) (expt 3 4/5)) (expt 3 3/5) (* 2 (expt 2 2/5) (expt 3 2/5)) (* (- (expt 2 4/5)) (expt 3 1/5)) (expt 2 1/5)) 5))
(num-test (sqrt (- (expt 4 2/3) (* (sqrt 3) (expt 5 1/6)))) (+ (/ (expt 5 1/3) (sqrt 6)) (- (/ (expt 5 5/6) (* 3 (sqrt 2)))) (/ (* (expt 2 1/6) (sqrt 5)) 3) (- (/ (* (expt 2 5/6) (expt 5 1/6)) 3)) (/ (expt 2 1/6) (sqrt 3))))
(num-test (sqrt (- (expt 5 1/3) (expt 4 1/3))) (/ (+ (expt 2 1/3) (expt 20 1/3) (- (expt 25 1/3))) 3))
(num-test (sqrt (- (expt 5 1/3) (expt 4 1/3))) (/ (+ (expt 2 1/3) (expt 20 1/3) (- (expt 25 1/3))) 3))
(num-test (sqrt (- 127 (* 4 (sqrt 6) (expt 7 1/4)))) (+ (/ (* (sqrt 3) (expt 7 3/4)) (sqrt 2)) (* 2 (sqrt 7)) (/ (* 3 (sqrt 3) (expt 7 1/4)) (sqrt 2)) -6))
(num-test (sqrt (- 161 (* 12 (expt 5 1/4)))) (+ (* 2 (expt 5 3/4)) (- (* 3 (sqrt 5))) (* 4 (sqrt (sqrt 5))) 6))
(num-test (sqrt (- 2 (expt 2 1/7))) (/ (* (expt 2 1/14) (+ (- (expt 2 6/7)) (expt 2 5/7) (expt 2 3/7) (* 2 (expt 2 1/7)) -1)) (sqrt 7)))
(test (= (+ (expt 2421 3) (expt 19083 3)) (+ (expt 5436 3) (expt 18948 3)) (+ (expt 10200 3) (expt 18072 3)) (+ (expt 13322 3) (expt 16630 3))) #t)

;;; amol sasane MAA Monthly
(num-test (expt (sqrt 2) (log 3 2)) (sqrt 3))
(num-test (expt (expt 2 (sqrt 2)) 1/2) (expt (sqrt 2) (sqrt 2)))
(num-test (expt (sqrt 2) (* 2 (log 3 2))) 3)
(num-test (expt (sqrt 2) (+ (sqrt 2) 1)) (* (sqrt 2) (expt (sqrt 2) (sqrt 2))))
(num-test (expt (expt (sqrt 2) (sqrt 2)) (sqrt 2)) 2)

(if (not with-bignums)
    (begin
      (num-test (expt (+ 1 (/ 1000000)) 100) 1.0001000049501534764)
      (num-test (expt (+ 1 (/ 1000000000)) 100000000) 1.1051709271646142850)
      (num-test (expt (+ 1 (/ 1000000000)) 10000000000) 2.20264839094613347809362152246750859877E4)
      (test (infinite? (expt 3/4 most-negative-fixnum)) #t)
      (num-test (expt 4/3 most-negative-fixnum) 0)
      (num-test (expt 1.0 most-negative-fixnum) 1.0)
      (num-test (expt -1.0 most-negative-fixnum) 1.0)
      (num-test (expt 1.0 most-positive-fixnum) 1.0)
      (num-test (expt -1.0 most-positive-fixnum) -1.0)
      (num-test (expt -1.0 (+ (expt 2 53) 1)) -1.0)
      (num-test (expt -1.0 (- 1 (expt 2 54))) -1.0)
      (num-test (expt -1.0 (expt 2 54)) 1.0)
      (num-test (expt 2.0 (- (expt 2 53))) 0.0)
      (num-test (expt 2 most-negative-fixnum) 0)
      (test (nan? (expt 1/0 0)) #t)
      (test (nan? (expt (make-rectangular 0 1/0) 0)) #t)
      (test (nan? (expt (make-rectangular 1/0 1/0) 0)) #t)
      (test (nan? (expt (make-rectangular 1/0 0) 0)) #t)
      (num-test (expt most-negative-fixnum 8) 5.237424972633826992021103514924158643547E151)
      (num-test (expt most-negative-fixnum 2) 8.5070591730234615865843651857942052864E37)
      (num-test (expt most-negative-fixnum -1) -1.084202172485504434007452800869941711426E-19)
      (num-test (expt most-negative-fixnum -2) 1.175494350822287507968736537222245677819E-38)))

(num-test (expt 1 most-negative-fixnum) 1)
(num-test (expt -1 most-negative-fixnum) 1)
(num-test (expt 1 most-positive-fixnum) 1)
(num-test (expt -1 most-positive-fixnum) -1)
(num-test (expt most-positive-fixnum 1) most-positive-fixnum)
(num-test (expt most-positive-fixnum -1) (/ most-positive-fixnum))
(num-test (expt most-negative-fixnum 1) most-negative-fixnum)
(num-test (expt most-negative-fixnum 0) 1)

(num-test (expt 0+i (+ 0 (expt 2 16))) 1.0)
(num-test (expt 0+i (+ 1 (expt 2 16))) 0+i)
(num-test (expt 0+i (+ 2 (expt 2 16))) -1.0)
(num-test (expt 0+i (+ 3 (expt 2 16))) 0-i)
(num-test (expt 0-i (+ 0 (expt 2 16))) 1.0)
(num-test (expt 0-i (+ 1 (expt 2 16))) 0-i)
(num-test (expt 0-i (+ 2 (expt 2 16))) -1.0)
(num-test (expt 0-i (+ 3 (expt 2 16))) 0+i)
(num-test (expt 0+i (+ 0 (expt 2 54))) 1.0)
(num-test (expt 0+i (+ 1 (expt 2 54))) 0+i)
(num-test (expt 0+i (+ 2 (expt 2 54))) -1.0)
(num-test (expt 0+i (+ 3 (expt 2 54))) 0-i)
(num-test (expt 0-i (+ 0 (expt 2 54))) 1.0)
(num-test (expt 0-i (+ 1 (expt 2 54))) 0-i)
(num-test (expt 0-i (+ 2 (expt 2 54))) -1.0)
(num-test (expt 0-i (+ 3 (expt 2 54))) 0+i)

(let ((val1 (catch #t (lambda () (expt 0.0 0.0)) (lambda args 'error)))
      (val2 (catch #t (lambda () (expt 0.0 -0.0)) (lambda args 'error))))
  (test (equal? val1 val2) #t))
(let ((val1 (catch #t (lambda () (expt 2.0 0.0)) (lambda args 'error)))
      (val2 (catch #t (lambda () (expt 2.0 -0.0)) (lambda args 'error))))
  (test (equal? val1 val2) #t))

;;      (test (expt 0 0-i) 0.0) ; sbcl and clisp say division by 0 here, guile says NaN
;;      but (expt 0.0 1e-15-i) is 0.0??
;; clisp says (expt 0 1+i) is 0, but (expt 0 0+i) is division by zero??) -- sbcl agrees

#|
(do ((i 30 (+ i 1))) 
    ((= i 63)) 
  (format #t "~D: (- ~A ~A) -> ~A~%" i (+ (expt 2.0 i) 500) (+ (expt 2.0 i) 100) (- (+ (expt 2.0 i) 500) (+ (expt 2.0 i) 100))))

55: (- 3.6028797018964e+16 3.6028797018964e+16) -> 400.0
56: (- 7.2057594037928e+16 7.2057594037928e+16) -> 400.0
57: (- 1.4411518807586e+17 1.4411518807586e+17) -> 416.0
58: (- 2.8823037615171e+17 2.8823037615171e+17) -> 384.0
59: (- 5.7646075230342e+17 5.7646075230342e+17) -> 384.0
60: (- 1.1529215046068e+18 1.1529215046068e+18) -> 512.0
61: (- 2.3058430092137e+18 2.3058430092137e+18) -> 512.0
62: (- 4.6116860184274e+18 4.6116860184274e+18) -> 0.0
|#

(test (or (< (magnitude (- (expt -2/362880 1/3) 0.00883199860790+0.01529747032127i)) 1e-6)
	  (< (magnitude (- (expt -2/362880 1/3) 0.00883199860790-0.01529747032127i)) 1e-6)
	  (< (magnitude (- (expt -2/362880 1/3) -0.017663997215805)) 1e-6)) #t)

(test (< (abs (- (+ (make-rectangular 1.0 0.0) (make-polar 1.0 0.0) 1.0+0i (* -1.0 -1.0) (/ 1.0) 
		    (exp 0.0) (abs -1.0) (cos 0.0) (log (exp 1)) (magnitude 1.0+0i) (max 0.0 1.0) (min 1.0 2.0))
		 12.0))
	 1e-12)
      #t)

(let ((xs (list 2 3 4 1/2 1/3 1/4 2.5 1+i 2.5+1.5i 2.5-.5i))
      (ys  (list 2 3 4 -2 -3 1/2 1/3 1/4 -1/2 -1/3 -1/4 2.5 -3.5 1+i -1+2i 2.5+1.5i 2.5-.5i)))
  (for-each
   (lambda (x)
     (for-each 
      (lambda (y)
	(num-test (expt (expt x y) (/ y)) x)
	;;	(if (> (magnitude (- (expt (expt x y) (/ y)) x)) 1e-6)
	;;	    (format #t ";(expt (expt ~A ~A) (/ ~A)) -> ~A (~A)~%" x y y (expt (expt x y) (/ y)) (magnitude (- (expt (expt x y) (/ y)) x))))
	)
      ys))
   xs))

(if with-bignums
    (begin
      ;; from Knuth IIp245(3rd)
      (let* ((f (lambda (x) (/ (- 1 (expt x 107)) (- 1 x))))
	     (g (lambda (y) (f (* (- 1/3 (* y y)) (+ 3 (* 3.45 y y))))))
	     (gx (lambda (y) (+ 107 (* -10491.35 y y) (* 659749.9625 y y y y) (* 30141386.26625 (expt y 6))))))
	(do ((i 3 (+ i 1)))
	    ((> i 10))
	  (let ((g1 (g (expt 10 (- i))))
		(g2 (gx (expt 10 (- i)))))
	    (let ((diff (abs (- g1 g2))))
	      (if (or (nan? diff) (> diff (expt 10 (- -7 i))))
		  (format #t ";g(1e-~D) -> ~A ~A, diff: ~A~%" i g1 g2 (abs (- g1 g2))))))))
      
      (let ((p (lambda (x y) (+ (* 2 y y) (* 9 x x x x) (* -1 y y y y)))))
	(num-test (p 408855776 708158977) 1))
      (let ((p (lambda (x y) (+ (* 2 y y) (* (- (* 3 x x) (* y y)) (+ (* 3 x x) (* y y)))))))
	(num-test (p 408855776 708158977) 1))
      
      ))

(let ((top-exp 60))  
  (let ((happy #t))
    (do ((i 2 (+ i 1)))
	((or (not happy) (> i top-exp)))
      (let* ((val1 (+ 2 (expt 2 i)))
	     (val2 (- val1 1)))
	(if (not (> val1 val2))
	    (begin (set! happy #f) (display "(> ") (display val1) (display " ") (display val2) (display ") -> ") (display (> val1 val2)) (display "?") (newline)))
	(if (< val1 val2)
	    (begin (set! happy #f) (display "(< ") (display val1) (display " ") (display val2) (display ") -> ") (display (< val1 val2)) (display "?") (newline))))))
  
  (let ((happy #t))
    (do ((i 2 (+ i 1)))
	((or (not happy) (> i top-exp)))
      (let* ((val1 (/ (expt 2 i) 3))
	     (val2 (/ (+ 1 (expt 2 i)) 3)))
	(if (> val1 val2)
	    (begin (set! happy #f) (display "(> ") (display val1) (display " ") (display val2) (display ") -> ") (display (> val1 val2)) (display "?") (newline)))
	(if (not (> val2 val1))
	    (begin (set! happy #f) (display "(> ") (display val1) (display " ") (display val2) (display ") -> ") (display (> val2 val1)) (display "?") (newline)))
	(if (not (< val1 val2))
	    (begin (set! happy #f) (display "(< ") (display val1) (display " ") (display val2) (display ") -> ") (display (< val1 val2)) (display "?") (newline)))
	(if (< val2 val1)
	    (begin (set! happy #f) (display "(< ") (display val1) (display " ") (display val2) (display ") -> ") (display (< val2 val1)) (display "?") (newline)))
	))))

(let* ((x (* #x1.6000022202b1076a (expt 2 -58))) 
       (a (expt (- 1.01 x) (- 1.01 x))) 
       (b (expt x (- 1.01 (expt x (- 1.01 x)))))) 
  (num-test a 1.010100503341741589854787064753636627742E0)
  (num-test b 3.201463978607038931337314838029261023486E-18)
  (num-test x 4.770489999999999999978271189676737354422E-18)
  (num-test (+ a b -1.01) 1.005033417415841744668463594232356924E-4)
  (test (positive? (+ a b -1.01)) #t))

(do ((k 1 (+ k 1)))
    ((= k 12))
  (num-test (+ (expt 11 k) (expt 24 k) (expt 65 k) (expt 90 k) (expt 129 k) 
	       (expt 173 k) (expt 212 k) (expt 237 k) (expt 278 k) (expt 291 k) (expt 302 k))
	    (+ (expt 3 k) (expt 5 k) (expt 30 k) (expt 57 k) (expt 104 k) (expt 116 k) 
	       (expt 186 k) (expt 198 k) (expt 245 k) (expt 272 k) (expt 297 k) (expt 299 k))))


(let ((top 0))
  (let ((x-10 (lambda (n) (- (expt n 10) (* n n n n n n n n n n)))))
    (let ((happy #t)
	  (lim (if with-bignums 100 74)))
      (do ((i 1 (+ i 1)))
	  ((or (not happy) (= i lim))) ; stop around 63 bits
	(let ((val (x-10 i)))
	  (if (not (= val 0))
	      (begin
		(set! top (- i 1))
		(set! happy #f)
		(display "(expt ") (display i) (display " 10) = ") (display (expt i 10))
		(display " but (* ") (display i) (display "... 10x) = ")
		(display (* i i i i i i i i i i)) (newline)))))))
  (if (> top 63)
      (num-test (+ (expt 1 10) (expt 2 10) (expt 4 10) (expt 5 10) (expt 6 10) (expt 8 10) (expt 12 10) 
		   (expt 15 10) (expt 16 10) (expt 17 10) (expt 20 10) (expt 21 10) (expt 25 10) (expt 26 10) 
		   (expt 27 10) (expt 28 10) (expt 30 10) (expt 36 10) (expt 37 10) (expt 38 10) (expt 40 10) 
		   (expt 51 10) (expt 62 10))
		(expt 63 10))))

(do ((i 1 (+ i 1)))
    ((= i 10))
  (let ((v (vector i (- i) (/ i) (/ i (+ i 1)) (- (/ i)) (/ (- i) (+ i 1))
		   (random (* i 10.0)) (sqrt i) (+ i (random (sqrt i))) (- (random (* i 2.0)) i)
		   (make-rectangular i i)
		   (make-rectangular (- i) (- i))
		   )))
    (let ((len (length v)))
      (do ((k 0 (+ k 1)))
	  ((= k len))
	(do ((j 0 (+ j 1)))
	    ((= j len))
	  (let ((val1 (catch #t (lambda () (expt (v k) (v j))) (lambda args 'error)))) ; (expt 0 -1) for example
	    (if (number? val1)
		(let ((val2 (if (zero? (v k)) 0 (exp (* (v j) (log (v k))))))
		      (val3 (if (zero? (v k)) 0 (exp (* (v j) (+ (* 0+2i pi) (log (v k))))))))
		  (let ((diff 
			 (min (magnitude (- val1 val2))
			      (magnitude (- val1 val3)))))
		    (if (> (/ diff (max (magnitude val1) 1)) 1e-12)
			(format #t ";(expt ~A ~A), ~A ~A ~A: ~A~%" (v k) (v j) val1 val2 val3 diff)))))))))))

(if with-bignums
    (num-test (let ((dickey (lambda (x y) ; from Kawa
			      (+  (* 1335/4 (expt y 6))
				  (* (expt x 2)
				     (- (* 11 (expt x 2) (expt y 2))
					(expt y 6)
					(* 121 (expt y 4))
					2))
				  (* 11/2 (expt y 8))
				  (/ x (* 2 y))))))
		(dickey 77617 33096))
	      -54767/66192))



(let ((x-10 (lambda (n) (- (expt n 10) (* n n n n n n n n n n)))))
  (let ((happy #t)
	(lim (if with-bignums 100 74)))
    (do ((i 1 (+ i 2)))
	((or (not happy) (> i lim))) ; stop around 63 bits
      (let ((val (x-10 (/ i 2))))
	(if (not (= val 0))
	    (begin
	      (set! happy #f)
	      (display "(expt ") (display i) (display "/2 10) = ") (display (expt (/ i 2) 10))
	      (display " but (* ") (display i) (display "/2 ... 10x) = ")
	      (display (/ (* i i i i i i i i i i) 1024)) (newline)))))))

(let ((x-10 (lambda (n) (- (expt n -10) (/ 1 (* n n n n n n n n n n))))))
  (let ((happy #t)
	(lim (if with-bignums 100 74)))
    (do ((i 1 (+ i 2)))
	((or (not happy) (> i lim))) ; stop around 63 bits
      (let ((val (x-10 (/ i 2))))
	(if (not (= val 0))
	    (begin
	      (set! happy #f)
	      (display "(expt ") (display i) (display "/2 -10) = ") (display (expt (/ i 2) -10))
	      (display " but (* 1/(") (display i) (display "/2) ... 10x) = ")
	      (display (/ 1024 (* i i i i i i i i i i))) 
	      (display " [diff=") (display val) (display "]")
	      (newline)))))))

(let ((happy #t)
      (lim (if with-bignums 50 19)))
  (do ((i 1 (+ i 1)))
      ((or (not happy) (> i lim)))
    (let* ((val1 (expt 3 i))
	   (val2 (sqrt (* val1 val1))))
      (if (not (= val1 val2))
	  (begin
	    (set! happy #f)
	    (display "[3^i] (sqrt ") (display (* val1 val1)) (display " = ") (display val2)
	    (display " but should be ") (display val1) (newline))))))


(if (not with-bignums)
    (begin
      (num-test (* (/ (expt 2 31) (+ (expt 2 20) 1)) (/ (+ (expt 2 31) 1) (expt 2 20))) 4194300.0019569)
      (num-test (expt -2/10 1234000000/500029) 0.0)
      (num-test (expt -2/1234000000 362880/1234) 0.0)
      (num-test (expt -1/1234000000 500029/10) 0.0)
      (num-test (expt 3.14159265358979-1.0i -1234.0+0.00000001i) 0.0)
      (num-test (expt -3.14159265358979-1.0i -1234.0-0.00000001i) 0.0)
      (num-test (expt 1234000000.0-1234000000.0i -1234.0+0.0i) 0.0)
      (num-test (expt -1234000000.0-1234000000.0i -1234.0-0.0i) 0.0)
      )
    (begin
      (num-test (* (/ (expt 2 31) (+ (expt 2 20) 1)) (/ (+ (expt 2 31) 1) (expt 2 20))) 4398046513152/1048577)
      (test (expt 1/2 9223372036854775807) 'error) ; gmp overflow
      (num-test (expt (expt -4722366482869645213696/6561 1/2) 2) -4722366482869645213696/6561)
      (num-test (expt 324518553658426726783156020576256.0 1/3) 68719476736.0)
      (num-test (expt 4722366482869645213696 1/2) 68719476736)
      (num-test (expt 4722366482869645213696.0 1/2) 68719476736.0)
      (num-test (expt 4722366482869645213696/6561 -1/2) (/ 68719476736/81))
      (num-test (* (/ (expt 2 61) (+ (expt 2 40) 1)) (/ (+ (expt 2 61) 1) (expt 2 40)))	4835703278458516700921856/1099511627777)
      (num-test (+ (- 512 (expt 2.0 62)) (- (expt 2.0 62) 513)) -1.0)
      (num-test (+ (/ (expt 2 61) (+ (expt 2 40) 1)) (/ (+ (expt 2 61) 1) (expt 2 40))) 5070602400915223450095538143233/1208925819615728686333952)
      (num-test (+ (expt 2 61) (expt 2 62) (expt 2 61)) (/ (expt 2 64) 2))
      (num-test (* 2 (expt 2 62)) (expt 2 63))
      (num-test (* 8 (expt 2 30) (expt 2 30)) 9223372036854775808)
      (num-test (- (+ (expt 2.0 62) 500) (+ (expt 2.0 62) 100)) 4.000E2)
      (num-test (- (+ (expt 2.0 62) 512) (+ (expt 2.0 62) 513)) -1.0)
      (num-test (- (/ (expt 2 61) (+ (expt 2 40) 1)) (/ (+ (expt 2 61) 1) (expt 2 40)))	-2305844108725321729/1208925819615728686333952)
      (num-test (/ (/ (expt 2 61) (+ (expt 2 40) 1)) (/ (+ (expt 2 61) 1) (expt 2 40)))	2535301200456458802993406410752/2535301200458764647102131732481)
      (num-test (/ (expt (* 1.2345e-170 1.2345e-170) 1/100)) 2.501325312985302606641508258507698932691E3)
      (num-test (/ (log (expt 2 32)) (log 2)) 32.0)
      (num-test 1180591620717411303424/1180591620717411303425 (/ (expt 2 70) (+ (expt 2 70) 1)))
      (test (< (abs (- (expt (- (exp (* pi (sqrt (bignum "163")))) 744) 1/3) 6.4031999999999999999999999999939031735E5)) 1e-32) #t)
      (test (> (+ (expt 2.0 62) 500) (+ (expt 2.0 62) 100)) #t)
      (num-test (expt -2/10 1234000000/500029) 9.92209574402351949043519108941671096176E-1726-4.788930572030484370393069119625570107346E-1726i)
      (num-test (expt -2/1234000000 362880/1234) 1.116318539471846948140196659021553350719E-2585+2.424343808068083320544106524660635302266E-2586i)
      (num-test (expt -1/1234000000 500029/10) -7.168156874677746632219778149112758764437E-454593+2.32907535423388290492582809530285175961E-454593i)
      (num-test (expt 3.14159265358979-1.0i -1234.0+0.00000001i) -4.480790643664505864348068449454625911766E-640-6.676876181099023202939008945839411012697E-641i)
      (num-test (expt -3.14159265358979-1.0i -1234.0-0.00000001i) -4.480790502896318391426668753233092987401E-640+6.676875971338774903151645323179283073828E-641i)
      (num-test (expt 1234000000.0-1234000000.0i -1234.0+0.0i) 0.0+3.815800046393940013006703716489144169017E-11405i)
      (num-test (expt -1234000000.0-1234000000.0i -1234.0-0.0i) 0.0-3.815800046393940013006703716489144169017E-11405i)

      (num-test (expt 2 1/3) 1.25992104989487316476721060727822835057E0)
      (test (zero? (- (expt 2 1/3) 1.2599210498949)) #f) ; make sure it's not just libm's cbrt
      ))

(for-each
  (lambda (data)
    (let ((num1 (car data)) (num2 (cadr data)) (val (caddr data))) (num-test-2 'expt num1 num2 (expt num1 num2) val)))
  (vector (list 0 0 1) (list 0 1 0) (list 0 2 0) (list 0 3 0) (list 0 1/2 0) (list 0 1/3 0) 
    (list 0 0.0 0.0) (list 0 1.0 0.0) (list 0 2.0 0.0) (list 0 1.000000000000000000000000000000000000002E-309 0.0) 
    (list 0 1e+16 0.0) (list 0 inf.0 0.0) (list 0 0+1i 0.0) (list 0 0+2i 0.0) 
    (list 0 0-1i 0.0) (list 0 1+1i 0.0) (list 0 1-1i 0.0) (list 0 0.1+0.1i 0.0) (list 0 1e+16+1e+16i 0.0) 
    (list 0 1e-16+1e-16i 0.0) (list 1 0 1) (list 1 1 1) (list 1 2 1) (list 1 3 1) (list 1 -1 1) 
    (list 1 -2 1) (list 1 -3 1) (list 1 1/2 1) (list 1 1/3 1.0) (list 1 -1/2 1.000E0) 
    (list 1 -1/3 1.000E0) (list 1 0.0 1.000E0) (list 1 1.0 1.000E0) (list 1 2.0 1.000E0) 
    (list 1 -2.0 1.000E0) (list 1 1.000000000000000000000000000000000000002E-309 1.000E0) 
    (list 1 1e+16 1.000E0) (list 1 inf.0 1.000E0) (list 1 -inf.0 1.000E0) 
    (list 1 0+1i 1.0) (list 1 0+2i 1.0) (list 1 0-1i 1.0) (list 1 1+1i 1.0) (list 1 1-1i 1.0) (list 1 -1+1i 1.0) 
    (list 1 -1-1i 1.0) (list 1 0.1+0.1i 1.0) (list 1 1e+16+1e+16i 1.0) (list 1 1e-16+1e-16i 1.0) 
    (list 2 0 1) (list 2 1 2) (list 2 2 4) (list 2 3 8) (list 2 -1 1/2) (list 2 -2 1/4) 
    (list 2 -3 1/8) (list 2 1/2 1.4142135623731) (list 2 1/3 1.2599210498949) (list 2 -1/2 7.071067811865475244008443621048490392845E-1) 
    (list 2 -1/3 7.937005259840997475556964875637659160371E-1) (list 2 0.0 1.000E0) (list 2 1.0 2.000E0) 
    (list 2 2.0 4.000E0) (list 2 -2.0 2.500E-1) (list 2 1.000000000000000000000000000000000000002E-309 1.000E0) 
    (list 2 -inf.0 0.0) (list 2 0+1i 7.692389013639721265783299936612707014395E-1+6.389612763136348011500329114647017842567E-1i) 
    (list 2 0+2i 1.83456974743301676839941236809235104518E-1+9.830277404112437205861648503427281526099E-1i) 
    (list 2 0-1i 7.692389013639721265783299936612707014395E-1-6.389612763136348011500329114647017842567E-1i) 
    (list 2 1+1i 1.538477802727944253156659987322541402879E0+1.277922552627269602300065822929403568513E0i) 
    (list 2 1-1i 1.538477802727944253156659987322541402879E0-1.277922552627269602300065822929403568513E0i) 
    (list 2 -1+1i 3.846194506819860632891649968306353507197E-1+3.194806381568174005750164557323508921283E-1i) 
    (list 2 -1-1i 3.846194506819860632891649968306353507197E-1-3.194806381568174005750164557323508921283E-1i) 
    (list 2 0.1+0.1i 1.069199809265204517687304849996528484166E0+7.423020183379063973209835788737470580225E-2i) 
    (list 2 1e-16+1e-16i 1.00000000000000006931471805599452949289E0+6.931471805599453429742233135802455373554E-17i) 
    (list 3 0 1) (list 3 1 3) (list 3 2 9) (list 3 3 27) (list 3 -1 1/3) (list 3 -2 1/9) 
    (list 3 -3 1/27) (list 3 1/2 1.7320508075689) (list 3 1/3 1.4422495703074) (list 3 -1/2 5.773502691896257645091487805019574556475E-1) 
    (list 3 -1/3 6.933612743506347189382852083362015558497E-1) (list 3 0.0 1.000E0) (list 3 1.0 3.000E0) 
    (list 3 2.0 9.000E0) (list 3 -2.0 1.111111111111111111111111111111111111113E-1) (list 3 1.000000000000000000000000000000000000002E-309 1.000E0) 
    (list 3 -inf.0 0.0) (list 3 0+1i 4.548324228266097550275651435950424840878E-1+8.905770416677470590749273065651780951036E-1i) 
    (list 3 0+2i -5.862549342913521629213761016900936427016E-1+8.101266271509919688171526765177844453941E-1i) 
    (list 3 0-1i 4.548324228266097550275651435950424840878E-1-8.905770416677470590749273065651780951036E-1i) 
    (list 3 1+1i 1.364497268479829265082695430785127452266E0+2.671731125003241177224781919695534285314E0i) 
    (list 3 1-1i 1.364497268479829265082695430785127452266E0-2.671731125003241177224781919695534285314E0i) 
    (list 3 -1+1i 1.516108076088699183425217145316808280297E-1+2.968590138892490196916424355217260317017E-1i) 
    (list 3 -1-1i 1.516108076088699183425217145316808280297E-1-2.968590138892490196916424355217260317017E-1i) 
    (list 3 0.1+0.1i 1.109394427306365911813022078881836880638E0+1.223721548273860448930668229757603279477E-1i) 
    (list 3 1e-16+1e-16i 1.00000000000000010986122886681096684318E0+1.098612288668109789126712952843432012306E-16i) 
    (list -1 0 1) (list -1 1 -1) (list -1 2 1) (list -1 3 -1) (list -1 -1 -1) (list -1 -2 1) 
    (list -1 -3 -1) (list -1 1/2 0+1i) (list -1 1/3 -1.0) (list -1 -1/2 0.0-1.00E0i) 
    (list -1 -1/3 5.000000000000000503430454055824822034062E-1-8.660254037844386176981523540143355578944E-1i) 
    (list -1 0.0 1.000E0) (list -1 1.0 -1.00E0) (list -1 2.0 1.000E0) (list -1 -2.0 1.000E0) 
    (list -1 1e+16 1.000E0) (list -1 0+1i 4.321391826377224977441773717172801127579E-2) 
    (list -1 0+2i 1.86744273170798881443021293482703039342E-3) (list -1 0-1i 2.314069263277926900572908636794854738031E1) 
    (list -1 1+1i -4.321391826377224977441773717172801127579E-2) (list -1 1-1i -2.314069263277926900572908636794854738031E1) 
    (list -1 -1+1i -4.321391826377224977441773717172801127579E-2) (list -1 -1-1i -2.314069263277926900572908636794854738031E1) 
    (list -1 0.1+0.1i 6.946542388413302284911578278489504217747E-1+2.257068442712257901873502529761755278285E-1i) 
    (list -1 1e+16+1e+16i 0.0) (list -1 1e-16+1e-16i 9.999999999999996858407346410206827203587E-1+3.141592653589792185835963602803850622895E-16i) 
    (list -2 0 1) (list -2 1 -2) (list -2 2 4) (list -2 3 -8) (list -2 -1 -1/2) (list -2 -2 1/4) 
    (list -2 -3 -1/8) (list -2 1/2 0+1.4142135623731i) (list -2 1/3 -1.2599210498949) 
    (list -2 -1/2 0.0-7.071067811865475244008443621048490392845E-1i) (list -2 -1/3 3.968502629920499137351498618341152884837E-1-6.873648184993012989383839761489500939792E-1i) 
    (list -2 0.0 1.000E0) (list -2 1.0 -2.00E0) (list -2 2.0 4.000E0) (list -2 -2.0 2.500E-1) 
    (list -2 -inf.0 0.0) (list -2 0+1i 3.324182700885665525901791766265082328307E-2+2.761202036833300995082465454051316449496E-2i) 
    (list -2 0+2i 3.425953940655147934023229852954811989202E-4+1.835748008898304681163796172161682131024E-3i) 
    (list -2 0-1i 1.780072097764048857359856955378859222048E1-1.478600649942216768260366593652156810413E1i) 
    (list -2 1+1i -6.648365401771331051803583532530164656613E-2-5.522404073666601990164930908102632898992E-2i) 
    (list -2 1-1i -3.560144195528097714719713910757718444095E1+2.957201299884433536520733187304313620826E1i) 
    (list -2 -1+1i -1.662091350442832762950895883132541164153E-2-1.380601018416650497541232727025658224748E-2i) 
    (list -2 -1-1i -8.900360488820244286799284776894296110238E0+7.393003249711083841301832968260784052065E0i) 
    (list -2 0.1+0.1i 7.259699150688950609812198701314241029302E-1+2.928900391985359860022641767906842987898E-1i) 
    (list -2 1e+16+1e+16i 0.0) (list -2 1e-16+1e-16i 9.999999999999997551554526970151686615297E-1+3.834739834149737528810186916384012655492E-16i) 
    (list -3 0 1) (list -3 1 -3) (list -3 2 9) (list -3 3 -27) (list -3 -1 -1/3) (list -3 -2 1/9) 
    (list -3 -3 -1/27) (list -3 1/2 0+1.7320508075689i) (list -3 1/3 -1.4422495703074) 
    (list -3 -1/2 0.0-5.773502691896257645091487805019574556475E-1i) (list -3 -1/3 3.466806371753173943750607212746369268463E-1-6.004684775880013553913614575447052401843E-1i) 
    (list -3 0.0 1.000E0) (list -3 1.0 -3.00E0) (list -3 2.0 9.000E0) (list -3 -2.0 1.111111111111111111111111111111111111113E-1) 
    (list -3 -inf.0 0.0) (list -3 0+1i 1.965509114374261361108537566165204334024E-2+3.848532348622211453375207440262631065206E-2i) 
    (list -3 0+2i -1.094797515970330168691448329739632503045E-3+1.512865081636227781901948390654863520171E-3i) 
    (list -3 0-1i 1.052513729605287378161514526579733692066E1-2.060856958704319044776041543097331663996E1i) 
    (list -3 1+1i -5.896527343122784083325612698495613002091E-2-1.15455970458666343601256223207878931956E-1i) 
    (list -3 1-1i -3.157541188815862134484543579739201076193E1+6.182570876112957134328124629291994991979E1i) 
    (list -3 -1+1i -6.551697047914204537028458553884014446755E-3-1.282844116207403817791735813420877021735E-2i) 
    (list -3 -1-1i -3.508379098684291260538381755265778973549E0+6.869523195681063482586805143657772213312E0i) 
    (list -3 0.1+0.1i 7.430253085825579186796890883432274992943E-1+3.354042513063949187690186935389269335405E-1i) 
    (list -3 1e+16+1e+16i 0.0) (list -3 1e-16+1e-16i 9.999999999999997957019635078315805356955E-1+4.240204942257901974962676555647136289098E-16i) 
    (list 1/2 0 1) (list 1/2 1 1/2) (list 1/2 2 1/4) (list 1/2 3 1/8) (list 1/2 -1 2) 
    (list 1/2 -2 4) (list 1/2 -3 8) (list 1/2 1/2 0.70710678118655) (list 1/2 1/3 0.7937005259841) 
    (list 1/2 -1/2 1.414213562373095048801688724209698078569E0) (list 1/2 -1/3 1.259921049894873148607716059938123324722E0) 
    (list 1/2 0.0 1.000E0) (list 1/2 1.0 5.000E-1) (list 1/2 2.0 2.500E-1) (list 1/2 -2.0 4.000E0) 
    (list 1/2 1.000000000000000000000000000000000000002E-309 1.000E0) (list 1/2 1e+16 0.0) 
    (list 1/2 inf.0 0.0) (list 1/2 0+1i 7.692389013639721265783299936612707014395E-1-6.389612763136348011500329114647017842567E-1i) 
    (list 1/2 0+2i 1.83456974743301676839941236809235104518E-1-9.830277404112437205861648503427281526099E-1i) 
    (list 1/2 0-1i 7.692389013639721265783299936612707014395E-1+6.389612763136348011500329114647017842567E-1i) 
    (list 1/2 1+1i 3.846194506819860632891649968306353507197E-1-3.194806381568174005750164557323508921283E-1i) 
    (list 1/2 1-1i 3.846194506819860632891649968306353507197E-1+3.194806381568174005750164557323508921283E-1i) 
    (list 1/2 -1+1i 1.538477802727944253156659987322541402879E0-1.277922552627269602300065822929403568513E0i) 
    (list 1/2 -1-1i 1.538477802727944253156659987322541402879E0+1.277922552627269602300065822929403568513E0i) 
    (list 1/2 0.1+0.1i 9.307924962319322751032548220951692988141E-1-6.462114401999142796156052473887795907618E-2i) 
    (list 1/2 1e+16+1e+16i 0.0) (list 1/2 1e-16+1e-16i 9.999999999999999306852819440054705071071E-1-6.931471805599452468836205299399646209468E-17i) 
    (list 1/3 0 1) (list 1/3 1 1/3) (list 1/3 2 1/9) (list 1/3 3 1/27) (list 1/3 -1 3) 
    (list 1/3 -2 9) (list 1/3 -3 27) (list 1/3 1/2 0.57735026918963) (list 1/3 1/3 0.69336127435063) 
    (list 1/3 -1/2 1.732050807568877341601513501094972563495E0) (list 1/3 -1/3 1.442249570307408379689974332217791378498E0) 
    (list 1/3 0.0 1.000E0) (list 1/3 1.0 3.333333333333333148296162562473909929395E-1) 
    (list 1/3 2.0 1.111111111111110987752997263871498932361E-1) (list 1/3 -2.0 9.000000000000000999200722162640969581442E0) 
    (list 1/3 1.000000000000000000000000000000000000002E-309 1.000E0) (list 1/3 1e+16 0.0) 
    (list 1/3 inf.0 0.0) (list 1/3 0+1i 4.548324228266097055906083004905301340071E-1-8.905770416677470843231987149725161148001E-1i) 
    (list 1/3 0+2i -5.862549342913522528634995341851693014879E-1-8.101266271509919037297800414810374565267E-1i) 
    (list 1/3 0-1i 4.548324228266097055906083004905301340071E-1+8.905770416677470843231987149725161148001E-1i) 
    (list 1/3 1+1i 1.516108076088698934474456306943980624137E-1-2.968590138892490116287472906226681453643E-1i) 
    (list 1/3 1-1i 1.516108076088698934474456306943980624137E-1+2.968590138892490116287472906226681453643E-1i) 
    (list 1/3 -1+1i 1.364497268479829192516639126693602447003E0-2.671731125003241401280466674231091613441E0i) 
    (list 1/3 -1-1i 1.364497268479829192516639126693602447003E0+2.671731125003241401280466674231091613441E0i) 
    (list 1/3 0.1+0.1i 8.905570151840088631186184238937353595899E-1-9.823321468210062916108146236871209771647E-2i) 
    (list 1/3 1e+16+1e+16i 0.0) (list 1/3 1e-16+1e-16i 9.999999999999998901387711331890276057033E-1-1.098612288668109603248072021584861739285E-16i) 
    (list -1/2 0 1) (list -1/2 1 -1/2) (list -1/2 2 1/4) (list -1/2 3 -1/8) (list -1/2 -1 -2) 
    (list -1/2 -2 4) (list -1/2 -3 -8) (list -1/2 1/2 0+0.70710678118655i) (list -1/2 1/3 -0.7937005259841) 
    (list -1/2 -1/2 0.0-1.414213562373095048801688724209698078569E0i) (list -1/2 -1/3 6.299605249474366377321206522758126486977E-1-1.09112363597172135294521532465807648133E0i) 
    (list -1/2 0.0 1.000E0) (list -1/2 1.0 -5.00E-1) (list -1/2 2.0 2.500E-1) (list -1/2 -2.0 4.000E0) 
    (list -1/2 1e+16 0.0) (list -1/2 inf.0 0.0) (list -1/2 0+1i 3.324182700885665525901791766265082328307E-2-2.761202036833300995082465454051316449496E-2i) 
    (list -1/2 0+2i 3.425953940655147934023229852954811989202E-4-1.835748008898304681163796172161682131024E-3i) 
    (list -1/2 0-1i 1.780072097764048857359856955378859222048E1+1.478600649942216768260366593652156810413E1i) 
    (list -1/2 1+1i -1.662091350442832762950895883132541164153E-2+1.380601018416650497541232727025658224748E-2i) 
    (list -1/2 1-1i -8.900360488820244286799284776894296110238E0-7.393003249711083841301832968260784052065E0i) 
    (list -1/2 -1+1i -6.648365401771331051803583532530164656613E-2+5.522404073666601990164930908102632898992E-2i) 
    (list -1/2 -1-1i -3.560144195528097714719713910757718444095E1-2.957201299884433536520733187304313620826E1i) 
    (list -1/2 0.1+0.1i 6.611643874791633083240145101585573999158E-1+1.651968853835831321053883592233542783317E-1i) 
    (list -1/2 1e+16+1e+16i 0.0) (list -1/2 1e-16+1e-16i 9.999999999999996165260165850261967791906E-1+2.448445473029846938952343072863939318955E-16i) 
    (list -1/3 0 1) (list -1/3 1 -1/3) (list -1/3 2 1/9) (list -1/3 3 -1/27) (list -1/3 -1 -3) 
    (list -1/3 -2 9) (list -1/3 -3 -27) (list -1/3 1/2 0+0.57735026918963i) (list -1/3 1/3 -0.69336127435063) 
    (list -1/3 -1/2 0.0-1.732050807568877341601513501094972563495E0i) (list -1/3 -1/3 7.211247851537042624522227702765802634347E-1-1.249024766483406435214284662923064132397E0i) 
    (list -1/3 0.0 1.000E0) (list -1/3 1.0 -3.333333333333333148296162562473909929395E-1) 
    (list -1/3 2.0 1.111111111111110987752997263871498932361E-1) (list -1/3 -2.0 9.000000000000000999200722162640969581442E0) 
    (list -1/3 1e+16 0.0) (list -1/3 inf.0 0.0) (list -1/3 0+1i 1.965509114374261147472076343409745270744E-2-3.848532348622211562482881134707887874423E-2i) 
    (list -1/3 0+2i -1.094797515970330336653213008135348071651E-3-1.512865081636227660355007437386042651667E-3i) 
    (list -1/3 0-1i 1.052513729605287263760972225954207976974E1+2.060856958704319103202290360191646176391E1i) 
    (list -1/3 1+1i -6.551697047914203461214675496548324731564E-3+1.282844116207403782948806637317477237465E-2i) 
    (list -1/3 1-1i -3.508379098684290684449078029532994204954E0-6.869523195681063296005826865220406716345E0i) 
    (list -1/3 -1+1i -5.896527343122783769739250113564997536121E-2+1.154559704586663532835802707239006768699E-1i) 
    (list -1/3 -1-1i -3.15754118881586196656166312914556280733E1-6.182570876112957652808497982451530065146E1i) 
    (list -1/3 0.1+0.1i 6.408011144159694212372342969009069525835E-1+1.327666945668531521695779387535105337549E-1i) 
    (list -1/3 1e+16+1e+16i 0.0) (list -1/3 1e-16+1e-16i 9.999999999999995759795057742097793539085E-1+2.042980364921682582587891581219059394882E-16i) 
    (list 0.0 0 0.0) (list 0.0 1 0.0) (list 0.0 2 0.0) (list 0.0 3 0.0) (list 0.0 1/2 0.0) 
    (list 0.0 1/3 0.0) (list 0.0 0.0 0.0) (list 0.0 1.0 0.0) (list 0.0 2.0 0.0) (list 0.0 1.000000000000000000000000000000000000002E-309 0.0) 
    (list 0.0 1e+16 0.0) (list 0.0 inf.0 0.0) (list 0.0 0+1i 0.0) 
    (list 0.0 0+2i 0.0) (list 0.0 0-1i 0.0) (list 0.0 1+1i 0.0) (list 0.0 1-1i 0.0) (list 0.0 0.1+0.1i 0.0) 
    (list 0.0 1e+16+1e+16i 0.0) (list 0.0 1e-16+1e-16i 0.0) (list 1.0 0 1.0) (list 1.0 1 1.0) 
    (list 1.0 2 1.0) (list 1.0 3 1.0) (list 1.0 -1 1.0) (list 1.0 -2 1.0) (list 1.0 -3 1.0) 
    (list 1.0 1/2 1.0) (list 1.0 1/3 1.0) (list 1.0 -1/2 1.000E0) (list 1.0 -1/3 1.000E0) 
    (list 1.0 0.0 1.000E0) (list 1.0 1.0 1.000E0) (list 1.0 2.0 1.000E0) (list 1.0 -2.0 1.000E0) 
    (list 1.0 1.000000000000000000000000000000000000002E-309 1.000E0) (list 1.0 1e+16 1.000E0) 
    (list 1.0 inf.0 1.000E0) (list 1.0 -inf.0 1.000E0) (list 1.0 0+1i 1) 
    (list 1.0 0+2i 1) (list 1.0 0-1i 1) (list 1.0 1+1i 1) (list 1.0 1-1i 1) (list 1.0 -1+1i 1) 
    (list 1.0 -1-1i 1) (list 1.0 0.1+0.1i 1) (list 1.0 1e+16+1e+16i 1) (list 1.0 1e-16+1e-16i 1) 
    (list 2.0 0 1.0) (list 2.0 1 2.0) (list 2.0 2 4.000E0) (list 2.0 3 8.000E0) (list 2.0 -1 5.000E-1) 
    (list 2.0 -2 2.500E-1) (list 2.0 -3 1.250E-1) (list 2.0 1/2 1.4142135623731) (list 2.0 1/3 1.2599210498949) 
    (list 2.0 -1/2 7.071067811865475244008443621048490392845E-1) (list 2.0 -1/3 7.937005259840997475556964875637659160371E-1) 
    (list 2.0 0.0 1.000E0) (list 2.0 1.0 2.000E0) (list 2.0 2.0 4.000E0) (list 2.0 -2.0 2.500E-1) 
    (list 2.0 1.000000000000000000000000000000000000002E-309 1.000E0) (list 2.0 -inf.0 0.0) 
    (list 2.0 0+1i 7.692389013639721265783299936612707014395E-1+6.389612763136348011500329114647017842567E-1i) 
    (list 2.0 0+2i 1.83456974743301676839941236809235104518E-1+9.830277404112437205861648503427281526099E-1i) 
    (list 2.0 0-1i 7.692389013639721265783299936612707014395E-1-6.389612763136348011500329114647017842567E-1i) 
    (list 2.0 1+1i 1.538477802727944253156659987322541402879E0+1.277922552627269602300065822929403568513E0i) 
    (list 2.0 1-1i 1.538477802727944253156659987322541402879E0-1.277922552627269602300065822929403568513E0i) 
    (list 2.0 -1+1i 3.846194506819860632891649968306353507197E-1+3.194806381568174005750164557323508921283E-1i) 
    (list 2.0 -1-1i 3.846194506819860632891649968306353507197E-1-3.194806381568174005750164557323508921283E-1i) 
    (list 2.0 0.1+0.1i 1.069199809265204517687304849996528484166E0+7.423020183379063973209835788737470580225E-2i) 
    (list 2.0 1e-16+1e-16i 1.00000000000000006931471805599452949289E0+6.931471805599453429742233135802455373554E-17i) 
    (list -2.0 0 1.0) (list -2.0 1 -2.0) (list -2.0 2 4.000E0) (list -2.0 3 -8.00E0) 
    (list -2.0 -1 -5.00E-1) (list -2.0 -2 2.500E-1) (list -2.0 -3 -1.25E-1) (list -2.0 1/2 0+1.4142135623731i) 
    (list -2.0 1/3 -1.2599210498949) (list -2.0 -1/2 0.0-7.071067811865475244008443621048490392845E-1i) 
    (list -2.0 -1/3 3.968502629920499137351498618341152884837E-1-6.873648184993012989383839761489500939792E-1i) 
    (list -2.0 0.0 1.000E0) (list -2.0 1.0 -2.00E0) (list -2.0 2.0 4.000E0) (list -2.0 -2.0 2.500E-1) 
    (list -2.0 -inf.0 0.0) (list -2.0 0+1i 3.324182700885665525901791766265082328307E-2+2.761202036833300995082465454051316449496E-2i) 
    (list -2.0 0+2i 3.425953940655147934023229852954811989202E-4+1.835748008898304681163796172161682131024E-3i) 
    (list -2.0 0-1i 1.780072097764048857359856955378859222048E1-1.478600649942216768260366593652156810413E1i) 
    (list -2.0 1+1i -6.648365401771331051803583532530164656613E-2-5.522404073666601990164930908102632898992E-2i) 
    (list -2.0 1-1i -3.560144195528097714719713910757718444095E1+2.957201299884433536520733187304313620826E1i) 
    (list -2.0 -1+1i -1.662091350442832762950895883132541164153E-2-1.380601018416650497541232727025658224748E-2i) 
    (list -2.0 -1-1i -8.900360488820244286799284776894296110238E0+7.393003249711083841301832968260784052065E0i) 
    (list -2.0 0.1+0.1i 7.259699150688950609812198701314241029302E-1+2.928900391985359860022641767906842987898E-1i) 
    (list -2.0 1e+16+1e+16i 0.0) (list -2.0 1e-16+1e-16i 9.999999999999997551554526970151686615297E-1+3.834739834149737528810186916384012655492E-16i) 
    (list 1.000000000000000000000000000000000000002E-309 0 1.0) (list 1.000000000000000000000000000000000000002E-309 1 1.000000000000000000000000000000000000002E-309) 
    (list 1.000000000000000000000000000000000000002E-309 2 1.000000000000000000000000000000000000006E-618) 
    (list 1.000000000000000000000000000000000000002E-309 3 1.000000000000000000000000000000000000006E-927) 
    (list 1.000000000000000000000000000000000000002E-309 1/2 3.162277660168379331998893544432718533725E-155) 
    (list 1.000000000000000000000000000000000000002E-309 1/3 1.000000000000000000000000000000000000001E-103) 
    (list 1.000000000000000000000000000000000000002E-309 -1/2 3.162277660168379331998893544432718533715E154) 
    (list 1.000000000000000000000000000000000000002E-309 -1/3 9.999999999999868346276200367559315452517E102) 
    (list 1.000000000000000000000000000000000000002E-309 0.0 1.000E0) (list 1.000000000000000000000000000000000000002E-309 1.0 1.000000000000000000000000000000000000002E-309) 
    (list 1.000000000000000000000000000000000000002E-309 2.0 1.000000000000000000000000000000000000006E-618) 
    (list 1.000000000000000000000000000000000000002E-309 1.000000000000000000000000000000000000002E-309 1.000E0) 
    (list 1.000000000000000000000000000000000000002E-309 1e+16 0.0) (list 1.000000000000000000000000000000000000002E-309 inf.0 0.0) 
    (list 1.000000000000000000000000000000000000002E-309 0+1i 7.188026041688456386956035152151008205727E-2-9.974132684912512522858369772702724490842E-1i) 
    (list 1.000000000000000000000000000000000000002E-309 0+2i -9.896664563248017162886921042023427507381E-1-1.433886509648142863446390724753118562651E-1i) 
    (list 1.000000000000000000000000000000000000002E-309 0-1i 7.188026041688456386956035152151008205727E-2+9.974132684912512522858369772702724490842E-1i) 
    (list 1.000000000000000000000000000000000000002E-309 1+1i 7.188026041688456386956035152151008205733E-311-9.974132684912512522858369772702724490883E-310i) 
    (list 1.000000000000000000000000000000000000002E-309 1-1i 7.188026041688456386956035152151008205733E-311+9.974132684912512522858369772702724490883E-310i) 
    (list 1.000000000000000000000000000000000000002E-309 0.1+0.1i -5.63455610426506242496256141630861088283E-32-1.125793483521731083006048050604051624164E-31i) 
    (list 1.000000000000000000000000000000000000002E-309 1e+16+1e+16i 0.0) 
    (list 1.000000000000000000000000000000000000002E-309 1e-16+1e-16i 9.999999999999288501206264839898510340166E-1-7.114987937351094784363111696637191907549E-14i) 
    (list 1e+16 0 1.0) (list 1e+16 1 1e+16) (list 1e+16 2 1.000E32) (list 1e+16 3 1.000E48) 
    (list 1e+16 -1 1.000000000000000000000000000000000000001E-16) (list 1e+16 -2 9.999999999999999999999999999999999999998E-33) 
    (list 1e+16 -3 9.999999999999999999999999999999999999991E-49) (list 1e+16 1/2 100000000.0) 
    (list 1e+16 1/3 215443.46900319) (list 1e+16 -1/2 9.99999999999999999999999999999999999999E-9) 
    (list 1e+16 -1/3 4.641588833612782056591069448235278756067E-6) (list 1e+16 0.0 1.000E0) 
    (list 1e+16 1.0 1.000E16) (list 1e+16 2.0 1.000E32) (list 1e+16 -2.0 9.999999999999999999999999999999999999998E-33) 
    (list 1e+16 1.000000000000000000000000000000000000002E-309 1.000E0) (list 1e+16 -inf.0 0.0) 
    (list 1e+16 0+1i 6.541406923671771082966425998087477095845E-1-7.563728938753623529733450264648351927405E-1i) 
    (list 1e+16 0+2i -1.441999091787803208994630162235380065937E-1-9.895485769747898065837021120946943010267E-1i) 
    (list 1e+16 0-1i 6.541406923671771082966425998087477095845E-1+7.563728938753623529733450264648351927405E-1i) 
    (list 1e+16 1+1i 6.541406923671771082966425998087477095832E15-7.563728938753623529733450264648351927387E15i) 
    (list 1e+16 1-1i 6.541406923671771082966425998087477095832E15+7.563728938753623529733450264648351927387E15i) 
    (list 1e+16 -1+1i 6.541406923671771082966425998087477095825E-17-7.563728938753623529733450264648351927399E-17i) 
    (list 1e+16 -1-1i 6.541406923671771082966425998087477095825E-17+7.563728938753623529733450264648351927399E-17i) 
    (list 1e+16 0.1+0.1i -3.409382666305111714726686098434812471081E1-2.055490637125206804018448749591854294103E1i) 
    (list 1e+16 1e-16+1e-16i 1.000000000000003684136148790473017422188E0+3.684136148790486590281349632497736627823E-15i) 
    (list inf.0 0 1.0) (list inf.0 -1 0.0) (list inf.0 -2 0.0) 
    (list inf.0 -3 0.0) (list inf.0 -1/2 0.0) (list inf.0 -1/3 0.0) (list inf.0 0.0 1.000E0) 
    (list inf.0 -2.0 0.0) (list inf.0 -inf.0 0.0) (list inf.0 -1+1i 0.0) (list inf.0 -1-1i 0.0) 
    (list -inf.0 0 1.0) (list -inf.0 -1 0.0) (list -inf.0 -2 0.0) (list -inf.0 -3 0.0) 
    (list -inf.0 -1/2 0.0) (list -inf.0 -1/3 0.0) (list -inf.0 0.0 1.000E0) (list -inf.0 -2.0 0.0) 
    (list -inf.0 -inf.0 0.0) (list -inf.0 -1+1i 0.0) (list -inf.0 -1-1i 0.0) (list 0+1i 0 1.0) 
    (list 0+1i 1 0+1i) (list 0+1i 2 -1.00E0) (list 0+1i 3 0.0-1.00E0i) (list 0+1i -1 0.0-1.00E0i) 
    (list 0+1i -2 -1.00E0) (list 0+1i -3 0.0+1.000E0i) (list 0+1i 1/2 0.70710678118655+0.70710678118655i) 
    (list 0+1i 1/3 8.660254037844386612965085791222353988232E-1+4.999999999999999748284772972087582646907E-1i) 
    (list 0+1i -1/2 7.071067811865475244008443621048490392845E-1-7.071067811865475244008443621048490392845E-1i) 
    (list 0+1i -1/3 8.660254037844386612965085791222353988232E-1-4.999999999999999748284772972087582646907E-1i) 
    (list 0+1i 0.0 1.000E0) (list 0+1i 1.0 0.0+1.000E0i) (list 0+1i 2.0 -1.00E0) (list 0+1i -2.0 -1.00E0) 
    (list 0+1i 1.000000000000000000000000000000000000002E-309 1.000E0+1.570796326794896619231321691639751442098E-309i) 
    (list 0+1i 1e+16 1.000E0) (list 0+1i 0+1i 2.078795763507619085469556198349787700342E-1) 
    (list 0+1i 0+2i 4.321391826377224977441773717172801127579E-2) (list 0+1i 0-1i 4.810477380965351655473035666703833126401E0) 
    (list 0+1i 1+1i 0.0+2.078795763507619085469556198349787700342E-1i) (list 0+1i 1-1i 0.0+4.810477380965351655473035666703833126401E0i) 
    (list 0+1i -1+1i 0.0-2.078795763507619085469556198349787700342E-1i) (list 0+1i -1-1i 0.0-4.810477380965351655473035666703833126401E0i) 
    (list 0+1i 0.1+0.1i 8.441140118165246481415723784169170682829E-1+1.336945253316592796595429310740609657101E-1i) 
    (list 0+1i 1e+16+1e+16i 0.0) (list 0+1i 1e-16+1e-16i 9.999999999999998429203673205103413601794E-1+1.570796326794896339658091828635841709635E-16i) 
    (list 0+2i 0 1.0) (list 0+2i 1 0+2i) (list 0+2i 2 -4.00E0) (list 0+2i 3 0.0-8.00E0i) 
    (list 0+2i -1 0.0-5.00E-1i) (list 0+2i -2 -2.50E-1) (list 0+2i -3 0.0+1.250E-1i) 
    (list 0+2i 1/2 1+1i) (list 0+2i 1/3 1.09112363597172140787570207348670009638E0+6.299605249474365425897267188156853709001E-1i) 
    (list 0+2i -1/2 5.000E-1-5.00E-1i) (list 0+2i -1/3 6.873648184993013335424222440592397343418E-1-3.968502629920498537991974347557662898919E-1i) 
    (list 0+2i 0.0 1.000E0) (list 0+2i 1.0 0.0+2.000E0i) (list 0+2i 2.0 -4.00E0) (list 0+2i -2.0 -2.50E-1) 
    (list 0+2i 1.000000000000000000000000000000000000002E-309 1.000E0+1.570796326794896619231321691639751442098E-309i) 
    (list 0+2i -inf.0 0.0) (list 0+2i 0+1i 1.599090569280680525199117755445296515815E-1+1.328269994246205222492823642245871455648E-1i) 
    (list 0+2i 0+2i 7.927894711475968677072935966913922424434E-3+4.248048042515221109836149914964543748435E-2i) 
    (list 0+2i 0-1i 3.700406335570025108741522919010577122043E0-3.073708767019492322385562434551223151799E0i) 
    (list 0+2i 1+1i -2.656539988492410444985647284491742911296E-1+3.19818113856136105039823551089059303163E-1i) 
    (list 0+2i 1-1i 6.147417534038984644771124869102446303599E0+7.400812671140050217483045838021154244087E0i) 
    (list 0+2i -1+1i 6.641349971231026112464118211229357278239E-2-7.995452846403402625995588777226482579074E-2i) 
    (list 0+2i -1-1i -1.5368543835097461611927812172756115759E0-1.850203167785012554370761459505288561022E0i) 
    (list 0+2i 0.1+0.1i 8.926023688328728424160522546503419745435E-1+2.056049144522835172454080598405456305612E-1i) 
    (list 0+2i 1e+16+1e+16i 0.0) (list 0+2i 1e-16+1e-16i 9.999999999999999122350853765048490772098E-1+2.263943507354841682632315142216062597333E-16i) 
    (list 0-1i 0 1.0) (list 0-1i 1 0-1i) (list 0-1i 2 -1.00E0) (list 0-1i 3 0.0+1.000E0i) 
    (list 0-1i -1 0.0+1.000E0i) (list 0-1i -2 -1.00E0) (list 0-1i -3 0.0-1.00E0i) (list 0-1i 1/2 0.70710678118655-0.70710678118655i) 
    (list 0-1i 1/3 8.660254037844386612965085791222353988232E-1-4.999999999999999748284772972087582646907E-1i) 
    (list 0-1i -1/2 7.071067811865475244008443621048490392845E-1+7.071067811865475244008443621048490392845E-1i) 
    (list 0-1i -1/3 8.660254037844386612965085791222353988232E-1+4.999999999999999748284772972087582646907E-1i) 
    (list 0-1i 0.0 1.000E0) (list 0-1i 1.0 0.0-1.00E0i) (list 0-1i 2.0 -1.00E0) (list 0-1i -2.0 -1.00E0) 
    (list 0-1i 1.000000000000000000000000000000000000002E-309 1.000E0-1.570796326794896619231321691639751442098E-309i) 
    (list 0-1i 1e+16 1.000E0) (list 0-1i 0+1i 4.810477380965351655473035666703833126401E0) 
    (list 0-1i 0+2i 2.314069263277926900572908636794854738031E1) (list 0-1i 0-1i 2.078795763507619085469556198349787700342E-1) 
    (list 0-1i 1+1i 0.0-4.810477380965351655473035666703833126401E0i) (list 0-1i 1-1i 0.0-2.078795763507619085469556198349787700342E-1i) 
    (list 0-1i -1+1i 0.0+4.810477380965351655473035666703833126401E0i) (list 0-1i -1-1i 0.0+2.078795763507619085469556198349787700342E-1i) 
    (list 0-1i 0.1+0.1i 1.15568305287131774105188044357174956096E0-1.830422135215751576397991439148491080012E-1i) 
    (list 0-1i 1e-16+1e-16i 1.000000000000000157079632679489658639818E0-1.570796326794896833138311883103752021701E-16i) 
    (list 1+1i 0 1.0) (list 1+1i 1 1+1i) (list 1+1i 2 0.0+2.000E0i) (list 1+1i 3 -2.00E0+2.000E0i) 
    (list 1+1i -1 5.000E-1-5.00E-1i) (list 1+1i -2 0.0-5.00E-1i) (list 1+1i -3 -2.50E-1-2.50E-1i) 
    (list 1+1i 1/2 1.0986841134678+0.45508986056223i) (list 1+1i 1/3 1.084215081491351179148689172984121435876E0+2.905145555072514268841073782856571173254E-1i) 
    (list 1+1i -1/2 7.768869870150186536720794765315734740815E-1-3.217971264527913123677217187091049044625E-1i) 
    (list 1+1i -1/3 8.605420804595790018414012402960957705697E-1-2.305815555121423995608566442452670487351E-1i) 
    (list 1+1i 0.0 1.000E0) (list 1+1i 1.0 1.000E0+1.000E0i) (list 1+1i 2.0 0.0+2.000E0i) 
    (list 1+1i -2.0 0.0-5.00E-1i) (list 1+1i 1.000000000000000000000000000000000000002E-309 1.000E0+7.853981633974483096156608458198757210488E-310i) 
    (list 1+1i -inf.0 0.0) (list 1+1i 0+1i 4.288290062943678493226520070973354996125E-1+1.548717524642467781923098896798325813036E-1i) 
    (list 1+1i 0+2i 1.599090569280680525199117755445296515815E-1+1.328269994246205222492823642245871455648E-1i) 
    (list 1+1i 0-1i 2.062872235080904951706990637170143171029E0-7.450070621797240878593548325920103204625E-1i) 
    (list 1+1i 1+1i 2.739572538301210711303421174175029183081E-1+5.837007587586146275149618967771680809154E-1i) 
    (list 1+1i 1-1i 2.807879297260629039566345469762153491497E0+1.317865172901180863847635804578132850572E0i) 
    (list 1+1i -1+1i 2.918503793793073137574809483885840404577E-1-1.369786269150605355651710587087514591541E-1i) 
    (list 1+1i -1-1i 6.589325864505904319238179022890664252861E-1-1.403939648630314519783172734881076745749E0i) 
    (list 1+1i 0.1+0.1i 9.509412581367732262071184402582209392577E-1+1.08106001655210286400223506650660553711E-1i) 
    (list 1+1i 1e+16+1e+16i 0.0) (list 1+1i 1e-16+1e-16i 9.99999999999999956117542688252429982572E-1+1.131971753677420890989859729961488955736E-16i) 
    (list 1-1i 0 1.0) (list 1-1i 1 1-1i) (list 1-1i 2 0.0-2.00E0i) (list 1-1i 3 -2.00E0-2.00E0i) 
    (list 1-1i -1 5.000E-1+5.000E-1i) (list 1-1i -2 0.0+5.000E-1i) (list 1-1i -3 -2.50E-1+2.500E-1i) 
    (list 1-1i 1/2 1.0986841134678-0.45508986056223i) (list 1-1i 1/3 1.084215081491351179148689172984121435876E0-2.905145555072514268841073782856571173254E-1i) 
    (list 1-1i -1/2 7.768869870150186536720794765315734740815E-1+3.217971264527913123677217187091049044625E-1i) 
    (list 1-1i -1/3 8.605420804595790018414012402960957705697E-1+2.305815555121423995608566442452670487351E-1i) 
    (list 1-1i 0.0 1.000E0) (list 1-1i 1.0 1.000E0-1.00E0i) (list 1-1i 2.0 0.0-2.00E0i) 
    (list 1-1i -2.0 0.0+5.000E-1i) (list 1-1i 1.000000000000000000000000000000000000002E-309 1.000E0-7.853981633974483096156608458198757210488E-310i) 
    (list 1-1i -inf.0 0.0) (list 1-1i 0+1i 2.062872235080904951706990637170143171029E0+7.450070621797240878593548325920103204625E-1i) 
    (list 1-1i 0+2i 3.700406335570025108741522919010577122043E0+3.073708767019492322385562434551223151799E0i) 
    (list 1-1i 0-1i 4.288290062943678493226520070973354996125E-1-1.548717524642467781923098896798325813036E-1i) 
    (list 1-1i 1+1i 2.807879297260629039566345469762153491497E0-1.317865172901180863847635804578132850572E0i) 
    (list 1-1i 1-1i 2.739572538301210711303421174175029183081E-1-5.837007587586146275149618967771680809154E-1i) 
    (list 1-1i -1+1i 6.589325864505904319238179022890664252861E-1+1.403939648630314519783172734881076745749E0i) 
    (list 1-1i -1-1i 2.918503793793073137574809483885840404577E-1+1.369786269150605355651710587087514591541E-1i) 
    (list 1-1i 0.1+0.1i 1.118774658142734663065880800594211744947E0-4.912611879174141197780391086654035970153E-2i) 
    (list 1-1i 1e-16+1e-16i 1.000000000000000113197175367742099510321E0-4.388245731174756954083421259082963337401E-17i) 
    (list -1+1i 0 1.0) (list -1+1i 1 -1+1i) (list -1+1i 2 0.0-2.00E0i) (list -1+1i 3 2.000E0+2.000E0i) 
    (list -1+1i -1 -5.00E-1-5.00E-1i) (list -1+1i -2 0.0+5.000E-1i) (list -1+1i -3 2.500E-1-2.50E-1i) 
    (list -1+1i 1/2 0.45508986056223+1.0986841134678i) (list -1+1i 1/3 7.937005259840997668899692535826356354889E-1+7.937005259840996976818927177620594283082E-1i) 
    (list -1+1i -1/2 3.217971264527913123677217187091049044625E-1-7.768869870150186536720794765315734740815E-1i) 
    (list -1+1i -1/3 6.299605249474366138887223148884515164688E-1-6.299605249474365589582355660598282273075E-1i) 
    (list -1+1i 0.0 1.000E0) (list -1+1i 1.0 -1.00E0+1.000E0i) (list -1+1i 2.0 0.0-2.00E0i) 
    (list -1+1i -2.0 0.0+5.000E-1i) (list -1+1i 1.000000000000000000000000000000000000002E-309 1.000E0+2.35619449019234492884698253745962716315E-309i) 
    (list -1+1i -inf.0 0.0) (list -1+1i 0+1i 8.914479215539140039333169785416699948907E-2+3.219467429096768688435430339284927790439E-2i) 
    (list -1+1i 0+2i 6.910296915726436425237112293342453374671E-3+5.7399750963576748986151091014202337188E-3i) 
    (list -1+1i 0-1i 9.923400226678132867281183645053121674554E0-3.583839621275010020102858511593195855531E0i) 
    (list -1+1i 1+1i -1.213394664463590872776860012470162773935E-1+5.695011786442371350897739446131772158468E-2i) 
    (list -1+1i 1-1i -6.339560605403122847178325133459925819034E0+1.350723984795314288738404215664631753007E1i) 
    (list -1+1i -1+1i -2.847505893221185675448869723065886079234E-2-6.066973322317954363884300062350813869673E-2i) 
    (list -1+1i -1-1i -6.753619923976571443692021078323158765037E0-3.169780302701561423589162566729962909517E0i) 
    (list -1+1i 0.1+0.1i 7.882496598308880991233017323974702727041E-1+2.1838943088351018304792416348997040808E-1i) 
    (list -1+1i 1e+16+1e+16i 0.0) (list -1+1i 1e-16+1e-16i 9.999999999999997990379100087627604548201E-1+2.702768080472316983907841531363385588262E-16i) 
    (list -1-1i 0 1.0) (list -1-1i 1 -1-1i) (list -1-1i 2 0.0+2.000E0i) (list -1-1i 3 2.000E0-2.00E0i) 
    (list -1-1i -1 -5.00E-1+5.000E-1i) (list -1-1i -2 0.0-5.00E-1i) (list -1-1i -3 2.500E-1+2.500E-1i) 
    (list -1-1i 1/2 0.45508986056223-1.0986841134678i) (list -1-1i 1/3 7.937005259840997668899692535826356354889E-1-7.937005259840996976818927177620594283082E-1i) 
    (list -1-1i -1/2 3.217971264527913123677217187091049044625E-1+7.768869870150186536720794765315734740815E-1i) 
    (list -1-1i -1/3 6.299605249474366138887223148884515164688E-1+6.299605249474365589582355660598282273075E-1i) 
    (list -1-1i 0.0 1.000E0) (list -1-1i 1.0 -1.00E0-1.00E0i) (list -1-1i 2.0 0.0+2.000E0i) 
    (list -1-1i -2.0 0.0-5.00E-1i) (list -1-1i 1.000000000000000000000000000000000000002E-309 1.000E0-2.35619449019234492884698253745962716315E-309i) 
    (list -1-1i -inf.0 0.0) (list -1-1i 0+1i 9.923400226678132867281183645053121674554E0+3.583839621275010020102858511593195855531E0i) 
    (list -1-1i 0+2i 8.562996562781501151982322359385576132148E1+7.112774982027701655978420905114385775416E1i) 
    (list -1-1i 0-1i 8.914479215539140039333169785416699948907E-2-3.219467429096768688435430339284927790439E-2i) 
    (list -1-1i 1+1i -6.339560605403122847178325133459925819034E0-1.350723984795314288738404215664631753007E1i) 
    (list -1-1i 1-1i -1.213394664463590872776860012470162773935E-1-5.695011786442371350897739446131772158468E-2i) 
    (list -1-1i -1+1i -6.753619923976571443692021078323158765037E0+3.169780302701561423589162566729962909517E0i) 
    (list -1-1i -1-1i -2.847505893221185675448869723065886079234E-2+6.066973322317954363884300062350813869673E-2i) 
    (list -1-1i 0.1+0.1i 1.283956758872096257591990187677552600208E0-2.615572127992484175251616566885584992446E-1i) 
    (list -1-1i 1e-16+1e-16i 1.000000000000000270276808047231769038073E0-2.009620899912372775286764036246047795846E-16i) 
    (list 0.1+0.1i 0 1.0) (list 0.1+0.1i 1 0.1+0.1i) (list 0.1+0.1i 2 0.0+2.000000000000000222044604925031314247702E-2i) 
    (list 0.1+0.1i 3 -2.000000000000000333066907387546980616012E-3+2.000000000000000333066907387546980616012E-3i) 
    (list 0.1+0.1i -1 4.999999999999999722444243843710880301532E0-4.999999999999999722444243843710880301532E0i) 
    (list 0.1+0.1i -2 0.0-4.999999999999999444888487687421776010503E1i) 
    (list 0.1+0.1i -3 -2.499999999999999583666365765566343563457E2-2.499999999999999583666365765566343563457E2i) 
    (list 0.1+0.1i 1/2 0.34743442276012+0.14391204994251i) (list 0.1+0.1i 1/3 5.032480615484825043523903544407412355396E-1+1.348449116844438143505188591437346924604E-1i) 
    (list 0.1+0.1i -1/2 2.45673236351311521671469493547019420871E0-1.017611864088040968689409531603674348818E0i) 
    (list 0.1+0.1i -1/3 1.853981710374325315321217484547221353494E0-4.967729020768720696346827580207236635648E-1i) 
    (list 0.1+0.1i 0.0 1.000E0) (list 0.1+0.1i 1.0 1.000000000000000055511151231257827021182E-1+1.000000000000000055511151231257827021182E-1i) 
    (list 0.1+0.1i 2.0 0.0+2.000000000000000222044604925031314247702E-2i) (list 0.1+0.1i -2.0 0.0-4.999999999999999444888487687421776010503E1i) 
    (list 0.1+0.1i 1.000000000000000000000000000000000000002E-309 1.000E0+7.853981633974483096156608458198757210488E-310i) 
    (list 0.1+0.1i 1e+16 0.0) (list 0.1+0.1i inf.0 0.0) (list 0.1+0.1i 0+1i -1.713226510357599956083331913106303247236E-1-4.22525887482460786856087271691853977193E-1i) 
    (list 0.1+0.1i 0+2i -1.491766748349203175549260651566533449245E-1+1.447765103494648437770214174856742113327E-1i) 
    (list 0.1+0.1i 0-1i -8.241437376545436347801862567004657850891E-1+2.032551224606688826869616254728598600103E0i) 
    (list 0.1+0.1i 1+1i 2.512032364467008051923349285554493285946E-2-5.938485385182208154296364931488770060654E-2i) 
    (list 0.1+0.1i 1-1i -2.856694962261232620228228583084710444815E-1+1.208407486952145259169520755212883935691E-1i) 
    (list 0.1+0.1i -1+1i -2.969242692591103747496022164280467138525E0-1.256016182233503886515866161034993752114E0i) 
    (list 0.1+0.1i -1-1i 6.042037434760725625046696204216927090118E0+1.428347481130616151535688219886713564214E1i) 
    (list 0.1+0.1i 0.1+0.1i 7.550220306566742029451631510549876832316E-1-8.878982993466537268563019824356751882119E-2i) 
    (list 0.1+0.1i 1e+16+1e+16i 0.0) (list 0.1+0.1i 1e-16+1e-16i 9.999999999999997258590333888479081137213E-1-1.170613339316624318801081266623392933101E-16i) 
    (list 1e+16+1e+16i 0 1.0) (list 1e+16+1e+16i 1 1e+16+1e+16i) (list 1e+16+1e+16i 2 0.0+2.000E32i) 
    (list 1e+16+1e+16i 3 -2.00E48+2.000E48i) (list 1e+16+1e+16i -1 5.000000000000000000000000000000000000004E-17-5.000000000000000000000000000000000000004E-17i) 
    (list 1e+16+1e+16i -2 0.0-4.999999999999999999999999999999999999999E-33i) 
    (list 1e+16+1e+16i -3 -2.499999999999999999999999999999999999998E-49-2.499999999999999999999999999999999999998E-49i) 
    (list 1e+16+1e+16i 1/2 109868411.34678+45508986.056223i) (list 1e+16+1e+16i 1/3 2.335870583020711134947889498537726801442E5+6.258946363440152792122310286091229534238E4i) 
    (list 1e+16+1e+16i -1/2 7.76886987015018653672079476531573474081E-9-3.217971264527913123677217187091049044617E-9i) 
    (list 1e+16+1e+16i -1/3 3.994282511515094148675512812353991597295E-6-1.070264773302225997506194769200154785053E-6i) 
    (list 1e+16+1e+16i 0.0 1.000E0) (list 1e+16+1e+16i 1.0 1.000E16+1.000E16i) (list 1e+16+1e+16i 2.0 0.0+2.000E32i) 
    (list 1e+16+1e+16i -2.0 0.0-4.999999999999999999999999999999999999999E-33i) 
    (list 1e+16+1e+16i 1.000000000000000000000000000000000000002E-309 1.000E0+7.853981633974483096156608458198757210488E-310i) 
    (list 1e+16+1e+16i -inf.0 0.0) (list 1e+16+1e+16i 0+1i 3.97655298675457451476815297378330384373E-1-2.23046721083486532799277949440696753733E-1i) 
    (list 1e+16+1e+16i 0+2i 1.083798967785726369788640263558841648425E-1-1.773914209820705797251910148995630479122E-1i) 
    (list 1e+16+1e+16i 0-1i 1.912911819699309232365644880468914363155E0+1.072961206670599579011330828139081101248E0i) 
    (list 1e+16+1e+16i 1+1i 6.207020197589439842760932468190271381067E15+1.746085775919709186775373479376336306396E15i) 
    (list 1e+16+1e+16i 1-1i 8.39950613028709653354314052329833261908E15+2.985873026369908811376975708607995464407E16i) 
    (list 1e+16+1e+16i -1+1i 8.730428879598545933876867396881681532013E-18-3.103510098794719921380466234095135690525E-17i) 
    (list 1e+16+1e+16i -1-1i 1.492936513184954405688487854303997732202E-16-4.19975306514354826677157026164916630953E-17i) 
    (list 1e+16+1e+16i 0.1+0.1i -3.019911767946562559553699791129052056384E1-2.323225580723027414176687762549620584343E1i) 
    (list 1e+16+1e+16i 1e-16+1e-16i 1.000000000000003640253691478724868702006E0+3.797333324158228934745194038802400084708E-15i) 
    (list 1e-16+1e-16i 0 1.0) (list 1e-16+1e-16i 1 1e-16+1e-16i) (list 1e-16+1e-16i 2 0.0+1.999999999999999916391146896138415121169E-32i) 
    (list 1e-16+1e-16i 3 -1.999999999999999874586720344207623992465E-48+1.999999999999999874586720344207623992465E-48i) 
    (list 1e-16+1e-16i -1 5.000000000000000104511066379826984375319E15-5.000000000000000104511066379826984375319E15i) 
    (list 1e-16+1e-16i -2 0.0-5.00000000000000020902213275965397093513E31i) 
    (list 1e-16+1e-16i -3 -2.500000000000000156766599569740479839725E47-2.500000000000000156766599569740479839725E47i) 
    (list 1e-16+1e-16i 1/2 1.0986841134678e-08+4.5508986056223e-09i) 
    (list 1e-16+1e-16i 1/3 5.032480615484828131577934532998162284517E-6+1.348449116844438970946772378503363059943E-6i) 
    (list 1e-16+1e-16i -1/2 7.768869870150186617914082234866133300043E7-3.217971264527913157308578030636299721171E7i) 
    (list 1e-16+1e-16i -1/3 1.853981710374324177672385518009559821262E5-4.967729020768717648025969623769604859166E4i) 
    (list 1e-16+1e-16i 0.0 1.000E0) (list 1e-16+1e-16i 1.0 9.999999999999999790977867240346035618411E-17+9.999999999999999790977867240346035618411E-17i) 
    (list 1e-16+1e-16i 2.0 0.0+1.999999999999999916391146896138415121169E-32i) (list 1e-16+1e-16i -2.0 0.0-5.00000000000000020902213275965397093513E31i) 
    (list 1e-16+1e-16i 1.000000000000000000000000000000000000002E-309 1.000E0+7.853981633974483096156608458198757210488E-310i) 
    (list 1e-16+1e-16i 1e+16 0.0) (list 1e-16+1e-16i inf.0 0.0) 
    (list 1e-16+1e-16i 0+1i 1.633737074935952277071942452600366041402E-1+4.256625518536474393286932017574035701805E-1i) 
    (list 1e-16+1e-16i 0+2i -1.544976397503562816275493845355474590488E-1+1.390841384750302156856253710476447606724E-1i) 
    (list 1e-16+1e-16i 0-1i 7.859055245423894167511168257029299588438E-1-2.047640077615962126490396474363177248838E0i) 
    (list 1e-16+1e-16i 1+1i -2.622888443600522061390815917770620324788E-17+5.890362593472426547237259268645081580369E-17i) 
    (list 1e-16+1e-16i 1-1i 2.833545602158351484014138796578448096738E-16-1.26173455307357268336623492266154970137E-16i) 
    (list 1e-16+1e-16i -1+1i 2.945181296736213396740244835851862239781E15+1.311444221800261085519581606088360070987E15i) 
    (list 1e-16+1e-16i -1-1i -6.308672765367863680561621873294727149409E15-1.416772801079175801234443901776883778303E16i) 
    (list 1e-16+1e-16i 0.1+0.1i -2.185846675892145203322615268234771243738E-2+1.000746379588156995072970612624735653063E-2i) 
    (list 1e-16+1e-16i 1e+16+1e+16i 0.0) (list 1e-16+1e-16i 1e-16+1e-16i 9.999999999999962719813938977799891729155E-1-3.570938973422717612919117771011138615376E-15i) 
    ))

;; there's a difference here between gmp/non-gmp:
; (test (expt 0 (real-part (log 0))) (expt 0.0 (real-part (log 0)))) 
; (num-test (expt 1.0 (/ (real-part (log 0)) (real-part (log 0)))) (expt 1 (/ (real-part (log 0)) (real-part (log 0)))))
; (num-test (expt 0.0 (/ (real-part (log 0)) (real-part (log 0)))) (expt 0 (/ (real-part (log 0)) (real-part (log 0)))))

#|
(let ((eps 1e-7))
  (do ((i 0 (+ i 1)))
      ((= i 1000))
    (let ((val (- (random 1000.0) 500.0)))
      (let ((rval (rationalize val))
	    (ival (floor val)))
	(let ((frval (exact->inexact rval))
	      (fival (exact->inexact ival)))
	  (for-each
	   (lambda (e)
	     (if (> (magnitude (- (expt rval e) (expt frval e))) eps)
		 (format #t "~A: ;(expt ~A e) != (expt ~A e) -> ~A~%" e rval frval (magnitude (- (expt rval e) (expt frval e)))))
	     (if (> (magnitude (- (expt ival e) (expt fival e))) eps)
		 (format #t "~A ;(expt ~A e) != (expt ~A e) -> ~A~%" e ival fival (magnitude (- (expt ival e) (expt fival e))))))
	   (list 0 0.0 (log 0) (real-part (log 0)) (- (real-part (log 0))))))))))
|#

  ;; table[(1/10^k)/(((1/10^k)^(1/10^k)) - 1), {k, 1, 30}]
  ;;   the test came from calc_errors.txt from the web by "dave"
  (let ((expts (list
		-0.48621160938616180680870317336747983548142173621715706851490974881717
		-0.22218561601345857583044966876729715619642038672598556073380084629504
		-0.14526540294689938889864991134840220307566223888497162784858064408875
		-0.10862362815109649171007844591526444220973735508130191198062253212652
		-0.08686389647659141105044978528770239308857034812798554177686261943193
		-0.07238291365169326382168151357331039782973682143307349669152489742891
		-0.06204211884333512141082278643490234288550259196615819050849846987015
		-0.05428681523790663196206398113420109019962541643547760927657854324749
		-0.04825494293369464924373092184737925979664303236414611590980578553450
		-0.04342944824032518278430110099994422226122739720915846151097610557365
		-0.03948131654165925705940460838351885560840418164027583205682137097699
		-0.03619120682577098563759637916147675090355043511246085981138602579761
		-0.03340726783876167905008686486133377017608955166698061593202699553920
		-0.03102103442166584483222349447696386196557178259759899539894506586562
		-0.02895296546021728851007526126398523685253569082526692705926181546848
		-0.02714340511895328922819555743231851877797306680518273360154914602559
		-0.02554673422960305368536052464215356633451937057629542604571806752914
		-0.02412747121684732425839605105092250802578858425793889081112350331353
		-0.02285760431069746466321731152192658331511007129540571803806313398860
		-0.02171472409516259138755644594583025411510361447234900258639235440074
		-0.02068068961444056322198232947221928963307055360980162368063530687389
		-0.01974065826832962852964676904166386737701808793240851850210059107980
		-0.01888236877840225337614103995289587314323465286757518193028428290776
		-0.01809560341263549281879753828819187842893320857975794377409033233328
		-0.01737177927613007310604520675666420329177588023219463316734886061171
		-0.01670363391935583952504342495833096470363065406937228989783888395986
		-0.01608498081123154917226403453394833638127396317791358170357400676126
		-0.01551051721083042241611174715416446722479989306441666312924319204483
		-0.01497567178976730440176306617453810628601368985529884710795141610434
		-0.01447648273010839425503763063105350274314656686012221887048754923492)))
    (let ((happy #t))
      (do ((i 1 (+ i 1))) 
	  ((or (= i (length expts))
	       (not happy)))
	(catch #t
	       (lambda ()
		 (let ((val (/ (expt .1 i)
			       (- (expt (expt .1 i) (expt .1 i)) 1))))
		   (if (> (abs (- val (list-ref expts (- i 1)))) 1e-6)
		       (begin
			 (set! happy #f)
			 (display "expt error > 1e-6 around 2^") (display (/ (log (expt .1 i)) (log 2))) (newline)))))
	       (lambda args 
		 (display "expt not accurate below around 2^") (display (/ (log (expt .1 i)) (log 2))) (newline))))))

(test (expt) 'error)
(test (expt 1) 'error)
(test (expt 1.0+23.0i) 'error)
(test (expt "hi" "hi") 'error)
(test (expt 1.0+23.0i 1.0+23.0i 1.0+23.0i) 'error)
(test (expt #t 0) 'error)
(test (expt 0 -1) 'error)
(test (expt 0 -1/4) 'error)
(test (expt 0.0 -1.0) 'error)
(test (expt 0.0 -0.1) 'error)
(test (expt 0 -1.0) 'error)
(test (expt 0 -1.0+i) 'error)

(for-each
 (lambda (arg)
   (test (expt arg nan.0) 'error)
   (test (expt nan.0 arg) 'error)
   (test (expt arg inf.0) 'error)
   (test (expt inf.0 arg) 'error)
   (test (expt arg 2) 'error)
   (test (expt 2 arg) 'error))
 (list "hi" '() (integer->char 65) #f #t '(1 2) _ht_ 'a-symbol (cons 1 2) (make-vector 3) abs 
       #<eof> '(1 2 3) #\newline (lambda (a) (+ a 1)) #<unspecified> #<undefined>))




;;; --------------------------------------------------------------------------------
  
(let ((f= (lambda (a b) (< (abs (- a b)) 1.0e-15))))
  (let ((log2 0.69314718055994530941723212145817656807550013436025525412068000949339362196969471560586332699641868754200148102057068573368552023575813055703267075163507596193072757082837143519030703862389167347112335011536449795523912047517268157493206515552473413952588295045300709532636664265410423915781495204374043038550080194417064167151864471283996817178454695702627163106454615025720740248163777338963855069526066834113727387372292895649354702576265209885969320196505855476470330679365443254763274495125040606943814710468994650622016772042452452961268794654619316517468139267250410380254625965686914419287160829380317271436778265487756648508567407764845146443994046142260319309673540257444607030809608504748663852313818167675143866747664789088143714198549423151997354880375165861275352916610007105355824987941472950929311389715599820565439287170007218085761025236889213244971389320378439353088774825970171559107088236836275898425891853530243634214367061189236789192372314672321720534016492568727477823445353476481149418642386776774406069562657379600867076257199184734022651462837904883062033061144630073719489002743643965002580936519443041191150608094879306786515887090060520346842973619384128965255653968602219412292420757432175748909770675268711581705113700915894266547859596489065305846025866838294002283300538207400567705304678700184162404418833232798386349001563121889560650553151272199398332030751408426091479001265168243443893572472788205486271552741877243002489794540196187233980860831664811490930667519339312890431641370681397776498176974868903887789991296503619270710889264105230924783917373501229842420499568935992206602204654941510613918788574424557751020683703086661948089641218680779020818158858000168811597305618667619918739520076671921459223672060253959543654165531129517598994005600036651356756905124592682574394648316833262490180382424082423145230614096380570070255138770268178516306902551370323405380214501901537402950994226299577964742713815736380172987394070424217997226696297993931270694)
	
	(log3 1.09861228866810969139524523692252570464749055782274945173469433363749429321860896687361575481373208878797002906595786574236800422593051982105280187076727741060316276918338136717937369884436095990374257031679591152114559191775067134705494016677558022220317025294689756069010652150564286813803631737329857778236699165479213181814902003010382363012224865274819822599109745249089645805346700884596508574844411901885708764749486707961308582941160216612118400140982551439194876889367984943022557315353296853452952514592138764946859325627944165569415782723103551688661021184698904399430631382552857364668828249881368228006341439107868932514564375102044516275619349739821169415857405353617589009751222337977369696877543547951357129821770175812421223514058101632724655889372495649191852429607966842346470693772372526550820320783339280558928531468730951326064583091843974968222303257654675333118230196492752575991322178513533902374829643395025460742458249346668661218814365265654295427676105054777954229339733234011737431939745798470185595484940594783539438410106029307622922281312074893063445340252777326856271480016818715472439782071878034446780216178158419042820076721243255738014364178876826161041016818724240687908909929874208152183237528942752732534071002835750695062403965462752244308462588450859786253083224774538885068003488324340490083990058080943565282122370388702036804548600776214244088697259413584365999226211739670804950952792714363154640444623089158185367119608370304853520909672629582415040355995121355450332241748474100331981487832452569334704949937301656336660991903957122822844881674312150628569993874038819012744839564791034772885972119850649422796985791669956418551265041502191554719665856929726606523573293736830027830921776605387030462007661584946700226011756797518003934791763277844935142634968360037557857160700498181519184373438290934746660457750659273670121115370582496479847930404205823964753857850960626093389914706120130243108260518262958640076003059494321166880446106134684533980))
    
    (if (not (f= log3 (log 3.0)))
	(begin (display "(- (log 3.0) true-log-3) = ") (display (- log3 (log 3.0))) (newline)))
    (if (not (f= log2 (log 2.0)))
	(begin (display "(- (log 2.0) true-log-2) = ") (display (- log2 (log 2.0))) (newline)))
    (if (not (f= 3.0 (exp log3)))
	(begin (display "(- 3.0 (exp log3)) = ") (display (- 3.0 (exp log3))) (newline)))
    (if (not (f= 2.0 (exp log2)))
	(begin (display "(- 2.0 (exp log2)) = ") (display (- 2.0 (exp log2))) (newline))))
  
  (let ((sin1 8.414709848078965066525023216302989996225630607983710656727517099919104043912396689486397435430526959e-1)
	(cos1 5.403023058681397174009366074429766037323104206179222276700972553811003947744717645179518560871830894e-1)
	(tan1 1.557407724654902230506974807458360173087250772381520038383946605698861397151727289555099965202242984e0))
    
    (if (not (f= sin1 (sin 1)))
	(begin (display "(- (sin 1) true-sin-1) = ") (display (- sin1 (sin 1))) (newline)))
    (if (not (f= (asin sin1) 1.0))
	(begin (display "(- (asin (sin 1)) 1) = ") (display (- (asin sin1) 1)) (newline)))
    
    (if (not (f= cos1 (cos 1)))
	(begin (display "(- (cos 1) true-cos-1) = ") (display (- cos1 (cos 1))) (newline)))
    (if (not (f= (acos cos1) 1.0))
	(begin (display "(- (acos (cos 1)) 1) = ") (display (- (acos cos1) 1)) (newline)))
    
    (if (not (f= tan1 (tan 1)))
	(begin (display "(- (tan 1) true-tan-1) = ") (display (- tan1 (tan 1))) (newline)))
    (if (not (f= (atan tan1) 1.0))
	(begin (display "(- (atan (tan 1)) 1) = ") (display (- (atan tan1) 1)) (newline)))
    
    (set! sin1 -.3056143888882523)
    (set! cos1 -.9521553682590148)
    (set! tan1 .3209711346238149)
    
    (if (not (f= sin1 (sin 10000)))
	(begin (display "(- (sin 10000) true-sin-10000) = ") (display (- sin1 (sin 10000))) (newline)))
    
    (if (not (f= cos1 (cos 10000)))
	(begin (display "(- (cos 10000) true-cos-10000) = ") (display (- cos1 (cos 10000))) (newline)))
    
    (if (not (f= tan1 (tan 10000)))
	(begin (display "(- (tan 10000) true-tan-10000) = ") (display (- tan1 (tan 10000))) (newline)))
    )
  
  
  (let ((sinh1 1.175201193643801456882381850595600815155717981334095870229565413013307567304323895607117452089623392e0)
	(cosh1 1.543080634815243778477905620757061682601529112365863704737402214710769063049223698964264726435543036e0)
	(tanh1 7.615941559557648881194582826047935904127685972579365515968105001219532445766384834589475216736767144e-1))
    
    (if (not (f= sinh1 (sinh 1)))
	(begin (display "(- (sinh 1) true-sinh-1) = ") (display (- sinh1 (sinh 1))) (newline)))
    (if (not (f= (asinh sinh1) 1.0))
	(begin (display "(- (asinh (sinh 1)) 1) = ") (display (- (asinh sinh1) 1)) (newline)))
    
    (if (not (f= cosh1 (cosh 1)))
	(begin (display "(- (cosh 1) true-cosh-1) = ") (display (- cosh1 (cosh 1))) (newline)))
    (if (not (f= (acosh cosh1) 1.0))
	(begin (display "(- (acosh (cosh 1)) 1) = ") (display (- (acosh cosh1) 1)) (newline)))
    
    (if (not (f= tanh1 (tanh 1)))
	(begin (display "(- (tanh 1) true-tanh-1) = ") (display (- tanh1 (tanh 1))) (newline)))
    (if (not (f= (atanh tanh1) 1.0))
	(begin (display "(- (atanh (tanh 1)) 1) = ") (display (- (atanh tanh1) 1)) (newline)))
    ))

(if with-bignums 
    (begin
      (let ((old-precision (bignum-precision)))
					; these checked against arprec (digits = 512)
	(set! (bignum-precision) 512)  
	(num-test (sin (bignum "696898287454081973170944403677937368733396.0")) -0.01999904696709900707248379699203543861700131080741493395453090012397)
	(num-test (cos (bignum "696898287454081973170944403677937368733396.0")) -0.99979999906001588673892554498680272502063995303949755633430660411025)
	(num-test (tan (bignum "696898287454081973170944403677937368733396.0")) 0.02000304759542063815661565629241173304757896817099118262507840447691)
	(num-test (log (bignum "696898287454081973170944403677937368733396.0")) 96.34745809783239800899232787971326647885871562509641009125683617504293)
	(num-test (sqrt (bignum "696898287454081973170944403677937368733396.0")) 8.34804340821298061589146684184612401904558331041225568173326261228620e20)
	(set! (bignum-precision) old-precision))
      
      ;; these can be checked against arprec -- get tables of the others as well
      ;;	(num-test (sin 31415926535897932384626433832795028841.971693993751058209749445) 6.8290634690588564658126265428876656461078982456442870201741792E-24)
      ;; this test requires 500 bits of precision
      (num-test (sin 31415926535897932384626433832795028841) -8.2584214320186030736155068085595298665361290626210864656288000E-1)
      (num-test (sin 1.0) 0.84147098480789650665250232163029899962256306079837106567275170999191) ; if bignum here
      
      ;;	(num-test (cos 31415926535897932384626433832795028841.971693993751058209749445) 9.9999999999999999999999999999999999999999999997668194606778265E-1)
      ;; 500 bits
      (num-test (cos 1.0) 5.4030230586813971740093660744297660373231042061792222767009714E-1)
      ))
