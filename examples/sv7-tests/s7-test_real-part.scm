(num-test (real-part -0.0+0.00000001i) 0.0)
(num-test (real-part -0.0+1234.0i) 0.0)
(num-test (real-part -0.0-3.14159265358979i) 0.0)
(num-test (real-part -0.00000001+1.0i) -0.00000001)
(num-test (real-part -0.00000001+1234000000.0i) -0.00000001)
(num-test (real-part -0.00000001-0.0i) -0.00000001)
(num-test (real-part -0.00000001-2.71828182845905i) -0.00000001)
(num-test (real-part -1.0+3.14159265358979i) -1.0)
(num-test (real-part -1.0-0.00000001i) -1.0)
(num-test (real-part -1.0-1234.0i) -1.0)
(num-test (real-part -1234.0+1.0i) -1234.0)
(num-test (real-part -1234.0+1234000000.0i) -1234.0)
(num-test (real-part -1234.0-0.0i) -1234.0)
(num-test (real-part -1234.0-2.71828182845905i) -1234.0)
(num-test (real-part -1234000000.0+3.14159265358979i) -1234000000.0)
(num-test (real-part -1234000000.0-0.00000001i) -1234000000.0)
(num-test (real-part -1234000000.0-1234.0i) -1234000000.0)
(num-test (real-part -2.71828182845905+0.00000001i) -2.71828182845905)
(num-test (real-part -2.71828182845905+1234.0i) -2.71828182845905)
(num-test (real-part -2.71828182845905-3.14159265358979i) -2.71828182845905)
(num-test (real-part -3.14159265358979+0.0i) -3.14159265358979)
(num-test (real-part -3.14159265358979+2.71828182845905i) -3.14159265358979)
(num-test (real-part -3.14159265358979-1.0i) -3.14159265358979)
(num-test (real-part -3.14159265358979-1234000000.0i) -3.14159265358979)
(num-test (real-part 0.0+0.0i) 0.0)
(num-test (real-part 0.0+2.71828182845905i) 0.0)
(num-test (real-part 0.0-1.0i) 0.0)
(num-test (real-part 0.0-1234000000.0i) 0.0)
(num-test (real-part 0.00000001+0.00000001i) 0.00000001)
(num-test (real-part 0.00000001+1234.0i) 0.00000001)
(num-test (real-part 0.00000001-3.14159265358979i) 0.00000001)
(num-test (real-part 1) 1)
(num-test (real-part 1.0+1.0i) 1.0)
(num-test (real-part 1.0+1234000000.0i) 1.0)
(num-test (real-part 1.0-0.0i) 1.0)
(num-test (real-part 1.0-2.71828182845905i) 1.0)
(num-test (real-part 1.4+0.0i) 1.4)
(num-test (real-part 1234.0+0.00000001i) 1234.0)
(num-test (real-part 1234.0+1234.0i) 1234.0)
(num-test (real-part 1234.0-3.14159265358979i) 1234.0)
(num-test (real-part 1234000000.0+1.0i) 1234000000.0)
(num-test (real-part 1234000000.0+1234000000.0i) 1234000000.0)
(num-test (real-part 1234000000.0-0.0i) 1234000000.0)
(num-test (real-part 1234000000.0-2.71828182845905i) 1234000000.0)
(num-test (real-part 2.0) 2.0)
(num-test (real-part 2.71828182845905+0.0i) 2.71828182845905)
(num-test (real-part 2.71828182845905+2.71828182845905i) 2.71828182845905)
(num-test (real-part 2.71828182845905-1.0i) 2.71828182845905)
(num-test (real-part 2.71828182845905-1234000000.0i) 2.71828182845905)
(num-test (real-part 2/3) 2/3)
(num-test (real-part 3.14159265358979+3.14159265358979i) 3.14159265358979)
(num-test (real-part 3.14159265358979-0.00000001i) 3.14159265358979)
(num-test (real-part 3.14159265358979-1234.0i) 3.14159265358979)
(num-test (real-part 3/4+1/2i) 0.75)
(num-test (real-part 5) 5)
(num-test (real-part -1.797693134862315699999999999999999999998E308) -1.797693134862315699999999999999999999998E308)
(num-test (real-part -2.225073858507201399999999999999999999996E-308) -2.225073858507201399999999999999999999996E-308)
(num-test (real-part -9223372036854775808) -9223372036854775808)
(num-test (real-part 1.110223024625156799999999999999999999997E-16) 1.110223024625156799999999999999999999997E-16)
(num-test (real-part 9223372036854775807) 9223372036854775807)
(test (real-part inf.0) inf.0)
(num-test (real-part (+ 2 0+1/0i)) 2)

(if with-bignums
    (begin
      (num-test (real-part 0+1e400i) 0.0)
      (num-test (real-part 0+9223372036854775808.0i) 0.0)
      (num-test (real-part 1.5+9223372036854775808.0i) 1.5)
      (num-test (real-part 9223372036854775808.0) 9223372036854775808.0)
      (num-test (real-part 9223372036854775808.0+1.5i) 9.223372036854775808E18)
      ))

(test (denominator (real-part 3/4+1/2i)) 'error)
(num-test (denominator (real-part 01/100)) 100)
(test (real-part "hi") 'error)
(test (real-part 1.0+23.0i 1.0+23.0i) 'error)
(test (real-part) 'error)

(for-each
 (lambda (arg)
   (test (real-part arg) 'error))
 (list "hi" '() (integer->char 65) #f #t '(1 2) _ht_ 'a-symbol (cons 1 2) (make-vector 3) abs 
       #<eof> '(1 2 3) #\newline (lambda (a) (+ a 1)) #<unspecified> #<undefined>))
