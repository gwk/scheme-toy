(test (< 0 1 1) #f)
(test (< 0 1 1.0) #f)
(test (< 0 1 1/1) #f)
(test (< 0 1 123.4) #t)
(test (< 0 1 1234) #t)
(test (< 0 1 1234/11) #t)
(test (< 0 1) #t)
(test (< 0 1.0 1) #f)
(test (< 0 1.0 1.0) #f)
(test (< 0 1.0 1/1) #f)
(test (< 0 1.0 123.4) #t)
(test (< 0 1.0 1234) #t)
(test (< 0 1.0 1234/11) #t)
(test (< 0 1.0) #t)
(test (< 0 123.4) #t)
(test (< 0 1234) #t)
(test (< 0 1234/11) #t)
(test (< 0.0 1 1.0) #f)
(test (< 0.0 1 1/1) #f)
(test (< 0.0 1 123.4) #t)
(test (< 0.0 1 1234) #t)
(test (< 0.0 1 1234/11) #t)
(test (< 0.0 1) #t)
(test (< 0.0 1.0 1) #f)
(test (< 0.0 1.0 1.0) #f)
(test (< 0.0 1.0 1/1) #f)
(test (< 0.0 1.0 123.4) #t)
(test (< 0.0 1.0 1234) #t)
(test (< 0.0 1.0 1234/11) #t)
(test (< 0.0 1.0) #t)
(test (< 0.0 123.4 1) #f)
(test (< 0.0 123.4 1.0) #f)
(test (< 0.0 123.4 1/1) #f)
(test (< 0.0 123.4 123.4) #f)
(test (< 0.0 123.4 1234) #t)
(test (< 0.0 123.4 1234/11) #f)
(test (< 0.0 123.4) #t)
(test (< 0.0 1234 1) #f)
(test (< 0.0 1234 1.0) #f)
(test (< 0.0 1234 1/1) #f)
(test (< 0.0 1234 123.4) #f)
(test (< 0.0 1234 1234) #f)
(test (< 0.0 1234 1234/11) #f)
(test (< 0.0 1234) #t)
(test (< 0.0 1234/11 1) #f)
(test (< 0.0 1234/11 1.0) #f)
(test (< 0.0 1234/11 1/1) #f)
(test (< 0.0 1234/11 123.4) #t)
(test (< 0.0 1234/11 1234) #t)
(test (< 0.0 1234/11 1234/11) #f)
(test (< 0.0 1234/11) #t)
(test (< 1 1 1) #f)
(test (< 1 1 1.0) #f)
(test (< 1 1 1/1) #f)
(test (< 1 1 123.4) #f)
(test (< 1 1 1234) #f)
(test (< 1 1 1234/11) #f)
(test (< 1 1) #f)
(test (< 1 1.0 1) #f)
(test (< 1 1.0 1.0) #f)
(test (< 1 1.0 1/1) #f)
(test (< 1 1.0 123.4) #f)
(test (< 1 1.0 1234) #f)
(test (< 1 1.0 1234/11) #f)
(test (< 1 1.0) #f)
(test (< 1 1/1) #f)
(test (< 1 123.4) #t)
(test (< 1 1234) #t)
(test (< 1 1234/11) #t)
(test (< 1.0 1 1) #f)
(test (< 1.0 1 1.0) #f)
(test (< 1.0 1 1/1) #f)
(test (< 1.0 1 123.4) #f)
(test (< 1.0 1 1234) #f)
(test (< 1.0 1 1234/11) #f)
(test (< 1.0 1) #f)
(test (< 1.0 1.0 1) #f)
(test (< 1.0 1.0 1.0) #f)
(test (< 1.0 1.0 1/1) #f)
(test (< 1.0 1.0 123.4) #f)
(test (< 1.0 1.0 1234) #f)
(test (< 1.0 1.0 1234/11) #f)
(test (< 1.0 1.0) #f)
(test (< 1.0 123.4 1) #f)
(test (< 1.0 123.4 1.0) #f)
(test (< 1.0 123.4 1/1) #f)
(test (< 1.0 123.4 123.4) #f)
(test (< 1.0 123.4 1234) #t)
(test (< 1.0 123.4 1234/11) #f)
(test (< 1.0 123.4) #t)
(test (< 1.0 1234 1) #f)
(test (< 1.0 1234 1.0) #f)
(test (< 1.0 1234 1/1) #f)
(test (< 1.0 1234 123.4) #f)
(test (< 1.0 1234 1234) #f)
(test (< 1.0 1234 1234/11) #f)
(test (< 1.0 1234) #t)
(test (< 1.0 1234/11 1) #f)
(test (< 1.0 1234/11 1.0) #f)
(test (< 1.0 1234/11 1/1) #f)
(test (< 1.0 1234/11 123.4) #t)
(test (< 1.0 1234/11 1234) #t)
(test (< 1.0 1234/11 1234/11) #f)
(test (< 1.0 1234/11) #t)
(test (< 123.4 1 1) #f)
(test (< 123.4 1 1.0) #f)
(test (< 123.4 1 1/1) #f)
(test (< 123.4 1 123.4) #f)
(test (< 123.4 1 1234) #f)
(test (< 123.4 1 1234/11) #f)
(test (< 123.4 1) #f)
(test (< 123.4 1.0 1) #f)
(test (< 123.4 1.0 1.0) #f)
(test (< 123.4 1.0 1/1) #f)
(test (< 123.4 1.0 123.4) #f)
(test (< 123.4 1.0 1234) #f)
(test (< 123.4 1.0 1234/11) #f)
(test (< 123.4 1.0) #f)
(test (< 123.4 123.4 1) #f)
(test (< 123.4 123.4 1.0) #f)
(test (< 123.4 123.4 1/1) #f)
(test (< 123.4 123.4 123.4) #f)
(test (< 123.4 123.4 1234) #f)
(test (< 123.4 123.4 1234/11) #f)
(test (< 123.4 123.4) #f)
(test (< 123.4 1234 1) #f)
(test (< 123.4 1234 1.0) #f)
(test (< 123.4 1234 1/1) #f)
(test (< 123.4 1234 123.4) #f)
(test (< 123.4 1234 1234) #f)
(test (< 123.4 1234 1234/11) #f)
(test (< 123.4 1234) #t)
(test (< 123.4 1234/11 1) #f)
(test (< 123.4 1234/11 1.0) #f)
(test (< 123.4 1234/11 1/1) #f)
(test (< 123.4 1234/11 123.4) #f)
(test (< 123.4 1234/11 1234) #f)
(test (< 123.4 1234/11 1234/11) #f)
(test (< 123.4 1234/11) #f)
(test (< 1234 1) #f)
(test (< 1234 1.0) #f)
(test (< 1234 1/1) #f)
(test (< 1234 123.4) #f)
(test (< 1234 1234) #f)
(test (< 1234 1234/11) #f)
(test (< 1234/11 1) #f)
(test (< 1234/11 1.0) #f)
(test (< 1234/11 1/1) #f)
(test (< 1234/11 123.4) #t)
(test (< 1234/11 1234) #t)
(test (< 1234/11 1234/11) #f)

(test (< -0 0) #f)
(test (< -0.0 0.0) #f)
(test (< -1 2 3 4 4 5 6 7) #f )
(test (< -1 2 3 4 5 6 7 8) #t )
(test (< 0 -0) #f)
(test (< 0.0 -0.0) #f)
(test (< 1 0+i) 'error)
(test (< 1 0-i) 'error)
(test (< 1 1 2) #f)
(test (< 1 3 2) #f )
(test (< 1+i 0+i) 'error)
(test (< 1+i 0-i) 'error)
(test (< 2 1 #\a) 'error)
(test (< nan.0 1+i) 'error)
(test (< nan.0 1 1+i) 'error)
(test (< 1 nan.0 1+i) 'error)
(test (< inf.0 1+i) 'error)
(test (< inf.0 nan.0 0-i 1) 'error)
(test (< 2 1+0/2i) #f)
(test (< 2 1+0i) #f)
(test (< 2 1-0i) #f)

(test (< -5 -4 -2 0 4 5) #t)
(test (< 0 3 4 4 6) #f)
(test (< 0 3 4 6 7) #t)
(test (< 0) 'error)
(test (<) 'error)
(test (< 0.0) 'error)
(test (< 0.0+0.00000001i) 'error)
(test (< 0/1) 'error)
(test (< 1.0) 'error)
(test (< 1.0+1.0i) 'error)
(test (< 10/3) 'error)
(test (< 1234000000.0+2.71828182845905i) 'error)
(test (< 2 1 #\a) 'error)
(test (< 2 1 1.0+1.0i) 'error)
(test (< 2) 'error)
(test (< 2.71828182845905+3.14159265358979i) 'error)
(test (< 3 -5) #f)
(test (< 3 3) #f)
(test (< 3 3.0 3 3.0+1.0i) 'error)
(test (< 3 5) #t)
(test (< 3.0 3) #f)

(for-each
 (lambda (arg)
   (test (< arg nan.0) 'error)
   (test (< nan.0 arg) 'error)
   (test (< arg inf.0) 'error)
   (test (< inf.0 arg) 'error)
   (test (< 1 0 arg) 'error)
   (test (< 1 arg) 'error)
   (test (< 1.0 arg) 'error)
   (test (< 1/2 arg) 'error)
   (test (< arg 1) 'error))
 (list "hi" '() (integer->char 65) #f #t '(1 2) _ht_ 'a-symbol (cons 1 2) (make-vector 3) abs 
       #<eof> '(1 2 3) #\newline (lambda (a) (+ a 1)) #<unspecified> #<undefined>))

(test (< 1/123400000000 .000000000001) #f)
(test (< -1/9223372036854775807 -1/9223372036854775806) #f)
(test (< -10/3147483647 -40/12345678901) #f)
(test (< -101/3147483647 40/12345678901) #t)
(test (< -1047483646/11111111111111 -1234567890213/12345678901123123) #f)
(test (< -1047483646/11111111111111 1234567890213/12345678901123123) #t)
(test (< -11/3147483647 -40/12345678901) #t)
(test (< -1282469252763/12824692526603504 -1234567890213/12345678901123123) #f)
(test (< -1282469252763/12824692526603504 1234567890213/12345678901123123) #t)
(test (< -1282469252765/12824692526603504 -1234567890213/12345678901123123) #t)
(test (< -1282469252765/12824692526603504 1234567890213/12345678901123123) #t)
(test (< -2/3 -3147483547123/4) #f)
(test (< -2/3 3147483547123/4) #t)
(test (< -2/3147483547 -3147483547/3) #f)
(test (< -2/3147483547 3147483547/3) #t)
(test (< -2147483646/11111111111111 -1234567890213/12345678901123123) #t)
(test (< -2147483646/11111111111111 1234567890213/12345678901123123) #t)
(test (< -3147483547/2 -3/3147483547) #t)
(test (< -3147483547/2 -3147483547/3) #t)
(test (< -3147483547/2 3/3147483547) #t)
(test (< -3147483547/2 3147483547/3) #t)
(test (< -3147483646/11 -12345678901/40) #f)
(test (< -3147483646/11 -1234567890213/12345678901123123) #t)
(test (< -3147483646/11 -40/12345678901) #t)
(test (< -3147483646/11 12345678901/40) #t)
(test (< -3147483646/11 1234567890213/12345678901123123) #t)
(test (< -3147483646/11 40/12345678901) #t)
(test (< -3147483646/11111111111111 -1234567890213/12345678901123123) #t)
(test (< -3147483646/11111111111111 1234567890213/12345678901123123) #t)
(test (< -3147483646/111111111111111 -1234567890213/12345678901123123) #f)
(test (< -3147483646/111111111111111 1234567890213/12345678901123123) #t)
(test (< 1/9223372036854775807 1/9223372036854775806) #t)
(test (< 10/3147483647 40/12345678901) #t)
(test (< 100000000000000.0 100000000000001.0) #t)
(test (< 100000000000000/3 100000000000001/3) #t)
(test (< 1000000000000000000/3 1000000000000000001/3) #t)
(test (< 1047483646/11111111111111 -1234567890213/12345678901123123) #f)
(test (< 1047483646/11111111111111 1234567890213/12345678901123123) #t)
(test (< 11/3147483647 40/12345678901) #f)
(test (< 1282469252763/12824692526603504 -1234567890213/12345678901123123) #f)
(test (< 1282469252763/12824692526603504 1234567890213/12345678901123123) #t)
(test (< 1282469252765/12824692526603504 -1234567890213/12345678901123123) #f)
(test (< 1282469252765/12824692526603504 1234567890213/12345678901123123) #f)
(test (< 2/3 -3147483547123/4) #f)
(test (< 2/3 3147483547123/4) #t)
(test (< 2/3147483547 -3147483547/3) #f)
(test (< 2/3147483547 3147483547/3) #t)
(test (< 2147483646/11111111111111 -1234567890213/12345678901123123) #f)
(test (< 2147483646/11111111111111 1234567890213/12345678901123123) #f)
(test (< 3/147483647 40/3) #t)
(test (< 3/3147483647 -40/12345678901) #f)
(test (< 3/3147483647 40/12345678901) #t)
(test (< 3/3147483647 40/3) #t)
(test (< 3147483547/2 -3/3147483547) #f)
(test (< 3147483547/2 -3147483547/3) #f)
(test (< 3147483547/2 3/3147483547) #f)
(test (< 3147483547/2 3147483547/3) #f)
(test (< 3147483646/11 -12345678901/40) #f)
(test (< 3147483646/11 -1234567890213/12345678901123123) #f)
(test (< 3147483646/11 -40/12345678901) #f)
(test (< 3147483646/11 12345678901/40) #t)
(test (< 3147483646/11 1234567890213/12345678901123123) #f)
(test (< 3147483646/11 40/12345678901) #f)
(test (< 3147483646/11111111111111 -1234567890213/12345678901123123) #f)
(test (< 3147483646/11111111111111 1234567890213/12345678901123123) #f)
(test (< 3147483646/111111111111111 -1234567890213/12345678901123123) #f)
(test (< 3147483646/111111111111111 1234567890213/12345678901123123) #t)
(test (< -1.797693134862315699999999999999999999998E308 -9223372036854775808) #t)
(test (< -9223372036854775808 -9223372036854775808) #f)
(test (< -9223372036854775808 5.551115123125783999999999999999999999984E-17) #t)
(test (< -9223372036854775808 9223372036854775807 -9223372036854775808) #f)
(test (< 1.110223024625156799999999999999999999997E-16 -9223372036854775808) #f)
(test (< 1.110223024625156799999999999999999999997E-16 5.551115123125783999999999999999999999984E-17 5.42101086242752217060000000000000000001E-20) #f)
(test (< 5.551115123125783999999999999999999999984E-17 1.110223024625156799999999999999999999997E-16) #t)
(test (< 9223372036854775807 -9223372036854775808) #f)
(test (< 9223372036854775807 9223372036854775807) #f)
(test (< (- 1237940039285380274899124223 1237940039285380000000000000) (- 1.2379400392853803e+27 1237940039285380000000000000) (- 1237940039285380274899124225 1237940039285380000000000000)) #f)
(test (< 0 most-negative-fixnum) #f)
(test (< 0 most-positive-fixnum) #t)
(test (< 1 3 . 2) 'error)
(test (< 1237940039285380274899124223 1.2379400392853803e+27 1237940039285380274899124225) #f)
(test (< 274899124223 3.0E11 274899124225) #f)
(test (< most-negative-fixnum (real-part (log 0.0))) #f)
(test (< most-negative-fixnum 0) #t)
(test (< most-negative-fixnum most-positive-fixnum) #t)
(test (< most-positive-fixnum (- (real-part (log 0.0)))) #t)
(test (< most-positive-fixnum 0) #f)
(test (< most-positive-fixnum most-negative-fixnum) #f)

(test (< -1 1/9223372036854775807 9223372036854775807) #t)
(test (< -9223372036854775807 -1/9223372036854775807 1) #t)
(test (< -9223372036854775807 -1/9223372036854775807) #t)
(test (< 1 9223372036 1/9223372036 1.0) #f)
(test (< 1 9223372036 1/9223372036) #f)
(test (< 1 922337203685 1/922337203685 1.0) #f)
(test (< 1 922337203685 1/922337203685) #f)
(test (< 1.0 9223372036 1/9223372036 1) #f)
(test (< 1.0 9223372036 1/9223372036) #f)
(test (< 1.0 922337203685 1/922337203685 1) #f)
(test (< 1.0 922337203685 1/922337203685) #f)
(test (< 1/9223372036 9223372036) #t)
(test (< 1/922337203685 922337203685) #t)
(test (< 1/9223372036854775807 9223372036854775807) #t)
(test (< 9223372036 1/9223372036 1) #f)
(test (< 9223372036 1/9223372036 1.0) #f)
(test (< 9223372036 1/9223372036) #f)
(test (< 922337203685 1/922337203685 1) #f)
(test (< 922337203685 1/922337203685 1.0) #f)
(test (< 922337203685 1/922337203685) #f)
(test (< 1.0 9223372036854775807/9223372036854775806) #t)
(test (< 9223372036854775806/9223372036854775807 1.0 9223372036854775807/9223372036854775806) #t)
(test (< 9223372036854775806/9223372036854775807 1.0) #t)

;;; there are cases that look innocuous that the non-gmp version can't get right:
;;;    (< 21053343141/6701487259 3587785776203/1142027682075)
;;; I'll put a few of these in the bignum section
(test (< (* 10400200/16483927 1.0) (* 10781274/17087915 1.0)) #f)
(test (< (* 10400200/16483927 1.0) 10781274/17087915) #f)
(test (< (* 10781274/17087915 1.0) (* 53715833/85137581 1.0)) #t)
(test (< (* 10781274/17087915 1.0) 53715833/85137581) #t)
(test (< (* 12/19 1.0) (* 53/84 1.0)) #f)
(test (< (* 12/19 1.0) 53/84) #f)
(test (< (* 12941/20511 1.0) (* 15601/24727 1.0)) #t)
(test (< (* 12941/20511 1.0) 15601/24727) #t)
(test (< (* 15601/24727 1.0) (* 79335/125743 1.0)) #t)
(test (< (* 15601/24727 1.0) 79335/125743) #t)

;;; (if with-bignums (test (< (* 171928773/272500658 1.0) (* 397573379/630138897 1.0)) #t))
;;; this requires more precision than 128 bits
(test (negative? (- 171928773/272500658 397573379/630138897)) #t) ; so the first is less
;; clisp, sbcl, guile, non-gmp s7 all say #f for the < comparison of reals
(test (< 171928773/272500658 397573379/630138897) #t)
;;; (= (* 171928773/272500658 1.0D0) (* 397573379/630138897 1.0D0)) -- clisp, sbcl, non-gmp s7, and guile say true

(test (< (* 171928773/272500658 1.0) 397573379/630138897) #t)
(test (< (* 190537/301994 1.0) (* 7161071/11350029 1.0)) #t)
(test (< (* 190537/301994 1.0) 7161071/11350029) #t)
(test (< (* 2/3 1.0) (* 5/8 1.0)) #f)
(test (< (* 2/3 1.0) 5/8) #f)
(test (< (* 253/401 1.0) (* 665/1054 1.0)) #t)
(test (< (* 253/401 1.0) 665/1054) #t)
(if with-bignums (test (< (* 397573379/630138897 1.0) (* 4201378396/6659027209 1.0)) #t))
;;; fraction -> double troubles -- this is ok if s7_Double is long double in s7.h
(test (< (* 397573379/630138897 1.0) 4201378396/6659027209) #t)
(test (< (* 4201378396/6659027209 1.0) (* 6189245291/9809721694 1.0)) #f)
(if with-bignums (test (< (* 4201378396/6659027209 1.0) 6189245291/9809721694) #f))
(test (< (* 5/8 1.0) (* 12/19 1.0)) #t)
(test (< (* 5/8 1.0) 12/19) #t)
(test (< (* 53/84 1.0) (* 253/401 1.0)) #f)
(test (< (* 53/84 1.0) 253/401) #f)

(test (< (* 53715833/85137581 1.0) (* 171928773/272500658 1.0)) #f)
;;; (if with-bignums (test (< (* 53715833/85137581 1.0) 171928773/272500658) #f)) -- needs more than 128 bits
(test (< 53715833/85137581 171928773/272500658) #f)

(test (< (* 665/1054 1.0) (* 12941/20511 1.0)) #f)
(test (< (* 665/1054 1.0) 12941/20511) #f)
(test (< (* 7161071/11350029 1.0) (* 10400200/16483927 1.0)) #f)
(test (< (* 7161071/11350029 1.0) 10400200/16483927) #f)
(test (< (* 79335/125743 1.0) (* 190537/301994 1.0)) #t)
(test (< (* 79335/125743 1.0) 190537/301994) #t)
(test (< 10400200/16483927 10781274/17087915) #f)
(test (< 10781274/17087915 53715833/85137581) #t)
(test (< 12/19 53/84) #f)
(test (< 12941/20511 15601/24727) #t)
(test (< 15601/24727 79335/125743) #t)
(test (< 171928773/272500658 397573379/630138897) #t)
(test (< 190537/301994 7161071/11350029) #t)
(test (< 2/3 5/8) #f)
(test (< 253/401 665/1054) #t)
(test (< 397573379/630138897 4201378396/6659027209) #t)
(test (< 4201378396/6659027209 6189245291/9809721694) #f)
(test (< 5/8 12/19) #t)
(test (< 53/84 253/401) #f)
(test (< 53715833/85137581 171928773/272500658) #f)
(test (< 665/1054 12941/20511) #f)
(test (< 7161071/11350029 10400200/16483927) #f)
(test (< 79335/125743 190537/301994) #t)

(test (< 131836323/93222358 110442295/78088974 125383891/88652904 61328902/43362679 138113653/97653429 254989762/180290825 
	 393920845/278522218 100728653/71220318 175072959/123785551 278215191/196712393 )
      #t)
(test (< 10812186007/7645370045 18338419250/12967220607 13343405959/9435212837 11079453630/7834356793 6071445385/4293160203 
	 14707776949/10399968816 22357396263/15809066506 77901127500/55084415513 2284381030/1615301317 10340752226/7312016021 )
      #t)
(test (< 886731088897/627013566048 1534756075495/1085236428449 244625906708/172976637487 1462171251759/1033911207374 
	 1743861030874/1233095960377 954593412651/674999475361 )
      #t)

(test (< 10651773591371/984771132841 1.081649758092772603273242802490196379734E1 22691355773217/2095909383391
	 1.082649668092772603273242802490196379733E1 11269199657045/1040794570824 1.08274965909277260327324280249019637973E1 ) #t)
(test (< 11320859/1046629 1.081649758092772603273242802490196379734E1 10021556/926421 1.081749668092772603273242802490196379733E1 
	 12893515/1191902 1.08175965909277260327324280249019637973E1 ) #t)
(test (< 11320859/1046629 1.081649659092772603273242802490196379732E1 6398591/591558 1.081650658192772603273242802490196379729E1 
	 14562686/1346339 1.081650758102772603273242802490196379731E1 ) #t)
(test (< 11320859/1046629 1.081649658102772603273242802490196379729E1 8517115/787419 1.081649668093772603273242802490196379735E1 
	 9667298/893755 1.081649669092872603273242802490196379734E1 ) #t)
(test (< 1109328651/102558961 1.08164965809278260327324280249019637973E1 1412995811/130633408 1.081649658102773603273242802490196379729E1 
	 753823853/69692053 1.081649658103772703273242802490196379731E1 ) #t)

(if with-bignums
    (begin
      (test (< 12345678901234567890 12345678901234567891) #t)
      (test (< -9223372036854775808 -9223372036854775809) #f)
      (test (< -9223372036854775809 -9223372036854775808) #t)
      (test (< 9223372036854775808 9223372036854775807) #f)
      (test (< 9223372036854775808 1e19) #t)
      (test (< 9223372036854775807 85070591730234615865843651857942052865/9223372036854775807) #t)
      (test (< 1.000e19 1267650600228229401496703205376 1e20) #f)

      (test (< 4272943/1360120 21053343141/6701487259 3587785776203/1142027682075 2646693125139304345/842468587426513207) #t)
      (test (< 4272943/1360120 21053343141/6701487259 3587785776203/1142027682075) #t)
      (test (< 4272943/1360120 21053343141/6701487259 3587785776203/1142027682075 355/113) #t)
      (test (< 21053343141/6701487259 3587785776203/1142027682075 355/113) #t)
      (test (< 4272943/1360120 21053343141/6701487259 3587785776203/1142027682075) #t)
      (test (< 21053343141/6701487259 3587785776203/1142027682075) #t)

      (test (< 886731088897/627013566048 1534756075495/1085236428449 244625906708/172976637487 1462171251759/1033911207374 
	       1743861030874/1233095960377 954593412651/674999475361 902779846866/638361751637 2968095823096/2098760683721 
	       1684058273173/1190809024873 2947786590277/2084399887474 )
	    #t)
      (test (< 1023286908188737/723573111879672 1763020673688684/1246643873737343 1430528867885681/1011536663165079 
	       2711447141769903/1917282660774379 575142878279173/406687429382352 935610884438753/661576800938585 
	       2339755998541282/1654457332890441 1443730843578617/1020871869702614 478219565475493/338152297643805 2026075188260327/1432651504812687 )
	    #t)

      (test (< 1267650600228229401496703205376) 'error)
      (test (< 1.0 1267650600228229401496703205376+i) 'error)
      ))
