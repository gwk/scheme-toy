;;; integer-length
(num-test (integer-length 0) 0)
(num-test (integer-length 1) 1)
(num-test (integer-length 2) 2)
(num-test (integer-length 3) 2)
(num-test (integer-length 4) 3)
(num-test (integer-length 7) 3)
(num-test (integer-length 8) 4)
(num-test (integer-length 21) 5)
(num-test (integer-length 215) 8)
(num-test (integer-length 12341234) 24)

(num-test (integer-length -1) 0)
(num-test (integer-length -2) 1)
(num-test (integer-length -3) 2)
(num-test (integer-length -4) 2)
(num-test (integer-length -7) 3)
(num-test (integer-length -8) 3)
(num-test (integer-length -9) 4)
(num-test (integer-length -21) 5)
(num-test (integer-length -215) 8)
(num-test (integer-length -12341234) 24)

(num-test (integer-length 127) 7)
(num-test (integer-length 128) 8)
(num-test (integer-length 129) 8)
(num-test (integer-length -127) 7)
(num-test (integer-length -128) 7)
(num-test (integer-length -129) 8)
(num-test (integer-length most-positive-fixnum) 63)
(num-test (integer-length most-negative-fixnum) 63)
(num-test (integer-length -9223372036854775808) 63)
(num-test (integer-length 9223372036854775807) 63)

(test (integer-length) 'error)
(test (integer-length 1 2) 'error)
(test (integer-length 1/2) 'error)
(test (integer-length 1.2) 'error)
(test (integer-length 1+2i) 'error)
(test (integer-length 1/0) 'error)
(test (integer-length (log 0)) 'error)

(if with-bignums
    (begin
      (test (integer-length (bignum "100000000000000000000000000000000000")) (ceiling (log (bignum "100000000000000000000000000000000000") 2)))
      (num-test (integer-length (+ (expt 2 48) (expt 2 46))) 49)
      (num-test (integer-length (ash 1 64)) 65)
      (num-test (integer-length 9223372036854775808) 64)
      (num-test (integer-length (* 4 most-positive-fixnum)) 65)
      (num-test (integer-length (* most-positive-fixnum most-positive-fixnum)) 126)
      (test (integer-length 0+92233720368547758081.0i) 'error)
      (test (integer-length 92233720368547758081.0) 'error)
      ))

(for-each
 (lambda (arg)
   (test (integer-length arg) 'error))
 (list "hi" '() (integer->char 65) #f #t '(1 2) _ht_ 'a-symbol (cons 1 2) (make-vector 3) abs 
       #<eof> '(1 2 3) #\newline (lambda (a) (+ a 1)) #<unspecified> #<undefined>))
