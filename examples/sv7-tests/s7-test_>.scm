(test (> 0 1 1) #f)
(test (> 0 1 1.0) #f)
(test (> 0 1 1/1) #f)
(test (> 0 1 123.4) #f)
(test (> 0 1 1234) #f)
(test (> 0 1 1234/11) #f)
(test (> 0 1) #f)
(test (> 0 1.0 1) #f)
(test (> 0 1.0 1.0) #f)
(test (> 0 1.0 1/1) #f)
(test (> 0 1.0 123.4) #f)
(test (> 0 1.0 1234) #f)
(test (> 0 1.0 1234/11) #f)
(test (> 0 1.0) #f)
(test (> 0 123.4) #f)
(test (> 0 1234) #f)
(test (> 0 1234/11) #f)
(test (> 0.0 1 1.0) #f)
(test (> 0.0 1 1/1) #f)
(test (> 0.0 1 123.4) #f)
(test (> 0.0 1 1234) #f)
(test (> 0.0 1 1234/11) #f)
(test (> 0.0 1) #f)
(test (> 0.0 1.0 1) #f)
(test (> 0.0 1.0 1.0) #f)
(test (> 0.0 1.0 1/1) #f)
(test (> 0.0 1.0 123.4) #f)
(test (> 0.0 1.0 1234) #f)
(test (> 0.0 1.0 1234/11) #f)
(test (> 0.0 1.0) #f)
(test (> 0.0 123.4 1) #f)
(test (> 0.0 123.4 1.0) #f)
(test (> 0.0 123.4 1/1) #f)
(test (> 0.0 123.4 123.4) #f)
(test (> 0.0 123.4 1234) #f)
(test (> 0.0 123.4 1234/11) #f)
(test (> 0.0 123.4) #f)
(test (> 0.0 1234 1) #f)
(test (> 0.0 1234 1.0) #f)
(test (> 0.0 1234 1/1) #f)
(test (> 0.0 1234 123.4) #f)
(test (> 0.0 1234 1234) #f)
(test (> 0.0 1234 1234/11) #f)
(test (> 0.0 1234) #f)
(test (> 0.0 1234/11 1) #f)
(test (> 0.0 1234/11 1.0) #f)
(test (> 0.0 1234/11 1/1) #f)
(test (> 0.0 1234/11 123.4) #f)
(test (> 0.0 1234/11 1234) #f)
(test (> 0.0 1234/11 1234/11) #f)
(test (> 0.0 1234/11) #f)
(test (> 1 1 1) #f)
(test (> 1 1 1.0) #f)
(test (> 1 1 1/1) #f)
(test (> 1 1 123.4) #f)
(test (> 1 1 1234) #f)
(test (> 1 1 1234/11) #f)
(test (> 1 1) #f)
(test (> 1 1.0 1) #f)
(test (> 1 1.0 1.0) #f)
(test (> 1 1.0 1/1) #f)
(test (> 1 1.0 123.4) #f)
(test (> 1 1.0 1234) #f)
(test (> 1 1.0 1234/11) #f)
(test (> 1 1.0) #f)
(test (> 1 123.4) #f)
(test (> 1 1234) #f)
(test (> 1 1234/11) #f)
(test (> 1.0 1 1) #f)
(test (> 1.0 1 1.0) #f)
(test (> 1.0 1 1/1) #f)
(test (> 1.0 1 123.4) #f)
(test (> 1.0 1 1234) #f)
(test (> 1.0 1 1234/11) #f)
(test (> 1.0 1) #f)
(test (> 1.0 1.0 1) #f)
(test (> 1.0 1.0 1.0) #f)
(test (> 1.0 1.0 1/1) #f)
(test (> 1.0 1.0 123.4) #f)
(test (> 1.0 1.0 1234) #f)
(test (> 1.0 1.0 1234/11) #f)
(test (> 1.0 1.0) #f)
(test (> 1.0 123.4 1) #f)
(test (> 1.0 123.4 1.0) #f)
(test (> 1.0 123.4 1/1) #f)
(test (> 1.0 123.4 123.4) #f)
(test (> 1.0 123.4 1234) #f)
(test (> 1.0 123.4 1234/11) #f)
(test (> 1.0 123.4) #f)
(test (> 1.0 1234 1) #f)
(test (> 1.0 1234 1.0) #f)
(test (> 1.0 1234 1/1) #f)
(test (> 1.0 1234 123.4) #f)
(test (> 1.0 1234 1234) #f)
(test (> 1.0 1234 1234/11) #f)
(test (> 1.0 1234) #f)
(test (> 1.0 1234/11 1) #f)
(test (> 1.0 1234/11 1.0) #f)
(test (> 1.0 1234/11 1/1) #f)
(test (> 1.0 1234/11 123.4) #f)
(test (> 1.0 1234/11 1234) #f)
(test (> 1.0 1234/11 1234/11) #f)
(test (> 1.0 1234/11) #f)
(test (> 123.4 1 1) #f)
(test (> 123.4 1 1.0) #f)
(test (> 123.4 1 1/1) #f)
(test (> 123.4 1 123.4) #f)
(test (> 123.4 1 1234) #f)
(test (> 123.4 1 1234/11) #f)
(test (> 123.4 1) #t)
(test (> 123.4 1.0 1) #f)
(test (> 123.4 1.0 1.0) #f)
(test (> 123.4 1.0 1/1) #f)
(test (> 123.4 1.0 123.4) #f)
(test (> 123.4 1.0 1234) #f)
(test (> 123.4 1.0 1234/11) #f)
(test (> 123.4 1.0) #t)
(test (> 123.4 123.4 1) #f)
(test (> 123.4 123.4 1.0) #f)
(test (> 123.4 123.4 1/1) #f)
(test (> 123.4 123.4 123.4) #f)
(test (> 123.4 123.4 1234) #f)
(test (> 123.4 123.4 1234/11) #f)
(test (> 123.4 123.4) #f)
(test (> 123.4 1234 1) #f)
(test (> 123.4 1234 1.0) #f)
(test (> 123.4 1234 1/1) #f)
(test (> 123.4 1234 123.4) #f)
(test (> 123.4 1234 1234) #f)
(test (> 123.4 1234 1234/11) #f)
(test (> 123.4 1234) #f)
(test (> 123.4 1234/11 1) #t)
(test (> 123.4 1234/11 1.0) #t)
(test (> 123.4 1234/11 1/1) #t)
(test (> 123.4 1234/11 123.4) #f)
(test (> 123.4 1234/11 1234) #f)
(test (> 123.4 1234/11 1234/11) #f)
(test (> 123.4 1234/11) #t)
(test (> 1234 1) #t)
(test (> 1234 1.0) #t)
(test (> 1234 1/1) #t)
(test (> 1234 123.4) #t)
(test (> 1234 1234) #f)
(test (> 1234 1234/11) #t)
(test (> 1234/11 1) #t)
(test (> 1234/11 1.0) #t)
(test (> 1234/11 1/1) #t)
(test (> 1234/11 123.4) #f)
(test (> 1234/11 1234) #f)
(test (> 1234/11 1234/11) #f)

(test (> 1 0+i) 'error)
(test (> 1 0-i) 'error)
(test (> 1 2 #\a) 'error)
(test (> 1+i 0+i) 'error)
(test (> 1+i 0-i) 'error)
(test (> nan.0 1+i) 'error)
(test (> nan.0 1 1+i) 'error)
(test (> 1 nan.0 1+i) 'error)
(test (> inf.0 1+i) 'error)
(test (> inf.0 nan.0 0-i 1) 'error)
(test (> 2 1+0/2i) #t)
(test (> 2 1+0i) #t)
(test (> 2 1-0i) #t)
(test (> 2 2 1) #f)
(test (> 3 -6246) #t )
(test (> 9 9 -2424) #f )
(test (> quote if) 'error)

(test (> 0) 'error)
(test (> 0.0 0.0) #f)
(test (> 0.0) 'error)
(test (>) 'error)
(test (> 0.0+0.00000001i) 'error)
(test (> 0/1) 'error)
(test (> 1 2 #\a) 'error)
(test (> 1 2 1.0+1.0i) 'error)
(test (> 1.0) 'error)
(test (> 1.0+1.0i) 'error)
(test (> 10/3) 'error)
(test (> 1234000000.0+2.71828182845905i) 'error)
(test (> 2) 'error)
(test (> 2.71828182845905+3.14159265358979i) 'error)
(test (> 3 3.0 3 3.0+1.0i) 'error)
(test (> 4 3 1 2 0) #f)
(test (> 4 3 2 1 0) #t)
(test (> 4 3 3 2 0) #f)
(test (> 4 3) #t)
(test (> 8 7 6 5 4) #t)

(test (> -10/3147483647 -40/12345678901) #t)
(test (> -101/3147483647 40/12345678901) #f)
(test (> -11/3147483647 -40/12345678901) #f)
(test (> 1/9223372036854775807 1/9223372036854775806) #f)
(test (> 10/3147483647 40/12345678901) #f)
(test (> 1047483646/11111111111111 1234567890213/12345678901123123) #f)
(test (> 11/3147483647 40/12345678901) #t)
(test (> 1282469252763/12824692526603504 1234567890213/12345678901123123) #f)
(test (> 1282469252765/12824692526603504 1234567890213/12345678901123123) #t)
(test (> 2/3 3147483547123/4) #f)
(test (> 2/3147483547 3147483547/3) #f)
(test (> 2147483646/11111111111111 1234567890213/12345678901123123) #t)
(test (> 3/147483647 40/3) #f)
(test (> 3/3147483647 -40/12345678901) #t)
(test (> 3/3147483647 40/12345678901) #f)
(test (> 3/3147483647 40/3) #f)
(test (> 3147483547/2 3/3147483547) #t)
(test (> 3147483547/2 3147483547/3) #t)
(test (> 3147483646/11 12345678901/40) #f)
(test (> 3147483646/11 1234567890213/12345678901123123) #t)
(test (> 3147483646/11 40/12345678901) #t)
(test (> 3147483646/11111111111111 1234567890213/12345678901123123) #t)
(test (> 3147483646/111111111111111 1234567890213/12345678901123123) #f)
(test (> -1.797693134862315699999999999999999999998E308 -9223372036854775808) #f)
(test (> -9223372036854775808 -9223372036854775808) #f)
(test (> -9223372036854775808 5.551115123125783999999999999999999999984E-17) #f)
(test (> -9223372036854775808 9223372036854775807 -9223372036854775808) #f)
(test (> 1.110223024625156799999999999999999999997E-16 -9223372036854775808) #t)
(test (> 1.110223024625156799999999999999999999997E-16 5.551115123125783999999999999999999999984E-17 5.42101086242752217060000000000000000001E-20) #t)
(test (> 5.551115123125783999999999999999999999984E-17 1.110223024625156799999999999999999999997E-16) #f)
(test (> 9223372036854775807 -9223372036854775808) #t)
(test (> 9223372036854775807 9223372036854775807) #f)
(test (> 0 most-negative-fixnum) #t)
(test (> 0 most-positive-fixnum) #f)
(test (> 1e18 most-positive-fixnum) #f)
(test (> 9007199254740992.0 9007199254740991.0) #t)
(test (> most-negative-fixnum (real-part (log 0.0))) #t)
(test (> most-negative-fixnum 0) #f)
(test (> most-negative-fixnum most-positive-fixnum) #f)
(test (> most-positive-fixnum (- (real-part (log 0.0)))) #f)
(test (> most-positive-fixnum 0) #t)
(test (> most-positive-fixnum most-negative-fixnum) #t)
(test (> most-positive-fixnum most-negative-fixnum) #t)
(num-test (> 1/123400000000 .000000000001) #t)
; these can go either way I guess -- 1/0 might be NaN?
;(test (< most-positive-fixnum 1/0) #t)
;(test (> most-positive-fixnum 1/0) #f)
(test (> 10.000000000 9.99999999999999) #t)

(test (> -1/9223372036854775807 -9223372036854775807) #t)
(test (> 1 -1/9223372036854775807 -9223372036854775807) #t)
(test (> 1 1/9223372036 9223372036 1.0) #f)
(test (> 1 1/9223372036 9223372036) #f)
(test (> 1 1/922337203685 922337203685 1.0) #f)
(test (> 1 1/922337203685 922337203685) #f)
(test (> 1.0 1/9223372036 9223372036 1) #f)
(test (> 1.0 1/9223372036 9223372036) #f)
(test (> 1.0 1/922337203685 922337203685 1) #f)
(test (> 1.0 1/922337203685 922337203685) #f)
(test (> 1/9223372036 9223372036 1) #f)
(test (> 1/9223372036 9223372036 1.0) #f)
(test (> 1/9223372036 9223372036) #f)
(test (> 1/922337203685 922337203685 1) #f)
(test (> 1/922337203685 922337203685 1.0) #f)
(test (> 1/922337203685 922337203685) #f)
(test (> 9223372036 1/9223372036) #t)
(test (> 922337203685 1/922337203685) #t)
(test (> 9223372036854775807 1/9223372036854775807 -1) #t)
(test (> 9223372036854775807 1/9223372036854775807) #t)
(test (> 1.0 9223372036854775806/9223372036854775807) #t)
(test (> 9223372036854775807/9223372036854775806 1.0 9223372036854775806/9223372036854775807) #t)
(test (> 9223372036854775807/9223372036854775806 1.0) #t)

(test (> (* 10400200/16483927 1.0) (* 10781274/17087915 1.0)) #t)
(test (> (* 10400200/16483927 1.0) 10781274/17087915) #t)
(test (> (* 10781274/17087915 1.0) (* 53715833/85137581 1.0)) #f)
(test (> (* 10781274/17087915 1.0) 53715833/85137581) #f)
(test (> (* 12/19 1.0) (* 53/84 1.0)) #t)
(test (> (* 12/19 1.0) 53/84) #t)
(test (> (* 12941/20511 1.0) (* 15601/24727 1.0)) #f)
(test (> (* 12941/20511 1.0) 15601/24727) #f)
(test (> (* 15601/24727 1.0) (* 79335/125743 1.0)) #f)
(test (> (* 15601/24727 1.0) 79335/125743) #f)

(test (> (* 171928773/272500658 1.0) (* 397573379/630138897 1.0)) #f)
(test (> (* 171928773/272500658 1.0) 397573379/630138897) #f)

(test (> (* 190537/301994 1.0) (* 7161071/11350029 1.0)) #f)
(test (> (* 190537/301994 1.0) 7161071/11350029) #f)
(test (> (* 2/3 1.0) (* 5/8 1.0)) #t)
(test (> (* 2/3 1.0) 5/8) #t)
(test (> (* 253/401 1.0) (* 665/1054 1.0)) #f)
(test (> (* 253/401 1.0) 665/1054) #f)
(test (> (* 397573379/630138897 1.0) (* 4201378396/6659027209 1.0)) #f)
(test (> (* 397573379/630138897 1.0) 4201378396/6659027209) #f)
(test (> (* 5/8 1.0) (* 12/19 1.0)) #f)
(test (> (* 5/8 1.0) 12/19) #f)
(test (> (* 53/84 1.0) (* 253/401 1.0)) #t)
(test (> (* 53/84 1.0) 253/401) #t)
(test (> (abs (- .1 .2)) .3) #f)
(test (> (abs (- .1 .2)) .03) #t)

;;; (if with-bignums (test (> (* 53715833/85137581 1.0) (* 171928773/272500658 1.0)) #t)) -- more bits
;;; (if with-bignums (test (> (* 53715833/85137581 1.0) 171928773/272500658) #t))
(test (> 53715833/85137581 171928773/272500658) #t)

(test (> (* 665/1054 1.0) (* 12941/20511 1.0)) #t)
(test (> (* 665/1054 1.0) 12941/20511) #t)
(test (> (* 7161071/11350029 1.0) (* 10400200/16483927 1.0)) #t)
(test (> (* 7161071/11350029 1.0) 10400200/16483927) #t)
(test (> (* 79335/125743 1.0) (* 190537/301994 1.0)) #f)
(test (> (* 79335/125743 1.0) 190537/301994) #f)
(test (> 10400200/16483927 10781274/17087915) #t)
(test (> 10781274/17087915 53715833/85137581) #f)
(test (> 12/19 53/84) #t)
(test (> 12941/20511 15601/24727) #f)
(test (> 15601/24727 79335/125743) #f)
(test (> 171928773/272500658 397573379/630138897) #f)
(test (> 190537/301994 7161071/11350029) #f)
(test (> 2/3 5/8) #t)
(test (> 253/401 665/1054) #f)
(test (> 397573379/630138897 4201378396/6659027209) #f)
(test (> 4201378396/6659027209 6189245291/9809721694) #t)
(test (> 5/8 12/19) #f)
(test (> 53/84 253/401) #t)
(test (> 53715833/85137581 171928773/272500658) #t)
(test (> 665/1054 12941/20511) #t)
(test (> 7161071/11350029 10400200/16483927) #t)
(test (> 79335/125743 190537/301994) #f)

(if with-bignums
    (begin
      (test (> (* 4201378396/6659027209 1.0) (* 6189245291/9809721694 1.0)) #t)
      (test (> (* 4201378396/6659027209 1.0) 6189245291/9809721694) #t)
      (test (> 10.000000000 9.999999999999999) #t)
      (test (> 12345678901234567890 12345678901234567891) #f)
      (test (> 9007199254740993.0 9007199254740992.0) #t)
      (test (> 1267650600228229401496703205376) 'error)

      (test (> 355/113 3587785776203/1142027682075 21053343141/6701487259) #t)
      (test (> 3587785776203/1142027682075 21053343141/6701487259 4272943/1360120) #t)
      (test (> 22/7 2646693125139304345/842468587426513207 21053343141/6701487259) #t)
      (test (> 2646693125139304345/842468587426513207 21053343141/6701487259 4272943/1360120) #t)
      (test (> 2646693125139304345/842468587426513207 3587785776203/1142027682075 21053343141/6701487259 4272943/1360120) #t)
      (test (> 3587785776203/1142027682075 21053343141/6701487259 4272943/1360120) #t)
      (test (> 2646693125139304345/842468587426513207 21053343141/6701487259 4272943/1360120) #t)
      (test (> 2646693125139304345/842468587426513207 3587785776203/1142027682075 21053343141/6701487259) #t)
      (test (> 3587785776203/1142027682075 21053343141/6701487259) #t)
      (test (> 2646693125139304345/842468587426513207 21053343141/6701487259) #t)
      ))

(for-each
 (lambda (arg)
   (test (> arg nan.0) 'error)
   (test (> nan.0 arg) 'error)
   (test (> arg inf.0) 'error)
   (test (> inf.0 arg) 'error)
   (test (> 0 1 arg) 'error)
   (test (> 1 arg) 'error)
   (test (> 1/2 arg) 'error)
   (test (> 1.0 arg) 'error)
   (test (> 1+i arg) 'error)
   (test (> arg 1) 'error))
 (list "hi" '() (integer->char 65) #f #t '(1 2) _ht_ 'a-symbol (cons 1 2) (make-vector 3) abs 
       #<eof> '(1 2 3) #\newline (lambda (a) (+ a 1)) #<unspecified> #<undefined>))
