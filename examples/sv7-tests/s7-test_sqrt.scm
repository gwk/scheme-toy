(num-test (sqrt 0) 0)
(num-test (sqrt 1) 1)
(num-test (sqrt -1) 0.0+1.0i)
(num-test (sqrt 2) 1.41421356237310)
(num-test (sqrt -2) 0.0+1.41421356237310i)
(num-test (sqrt 3) 1.73205080756888)
(num-test (sqrt -3) 0.0+1.73205080756888i)
(num-test (sqrt 10) 3.16227766016838)
(num-test (sqrt -10) 0.0+3.16227766016838i)
(num-test (sqrt 1234) 35.12833614050059)
(num-test (sqrt -1234) 0.0+35.12833614050059i)
(num-test (sqrt 1234000000) 35128.33614050059259)
(num-test (sqrt -1234000000) 0.0+35128.33614050059259i)
(num-test (sqrt 500029) 707.12728698587216)
(num-test (sqrt -500029) 0.0+707.12728698587216i)
(num-test (sqrt 362880) 602.39521910453436)
(num-test (sqrt -362880) 0.0+602.39521910453436i)
(num-test (sqrt 0/1) 0)
(num-test (sqrt 0/2) 0)
(num-test (sqrt 0/3) 0)
(num-test (sqrt 0/10) 0)
(num-test (sqrt 0/1234) 0)
(num-test (sqrt 0/1234000000) 0)
(num-test (sqrt 0/500029) 0)
(num-test (sqrt 0/362880) 0)
(num-test (sqrt 1/1) 1)
(num-test (sqrt -1/1) 0.0+1.0i)
(num-test (sqrt 1/2) 0.70710678118655)
(num-test (sqrt -1/2) 0.0+0.70710678118655i)
(num-test (sqrt 1/3) 0.57735026918963)
(num-test (sqrt -1/3) 0.0+0.57735026918963i)
(num-test (sqrt 1/10) 0.31622776601684)
(num-test (sqrt -1/10) 0.0+0.31622776601684i)
(num-test (sqrt 1/1234) 0.02846704711548)
(num-test (sqrt -1/1234) 0.0+0.02846704711548i)
(num-test (sqrt 1/1234000000) 0.00002846704712)
(num-test (sqrt -1/1234000000) 0.0+0.00002846704712i)
(num-test (sqrt 1/500029) 0.00141417255196)
(num-test (sqrt -1/500029) 0.0+0.00141417255196i)
(num-test (sqrt 1/362880) 0.00166003973519)
(num-test (sqrt -1/362880) 0.0+0.00166003973519i)
(num-test (sqrt 2/1) 1.41421356237310)
(num-test (sqrt -2/1) 0.0+1.41421356237310i)
(num-test (sqrt 2/2) 1)
(num-test (sqrt -2/2) 0.0+1.0i)
(num-test (sqrt 2/3) 0.81649658092773)
(num-test (sqrt -2/3) 0.0+0.81649658092773i)
(num-test (sqrt 2/10) 0.44721359549996)
(num-test (sqrt -2/10) 0.0+0.44721359549996i)
(num-test (sqrt 2/1234) 0.04025848411142)
(num-test (sqrt -2/1234) 0.0+0.04025848411142i)
(num-test (sqrt 2/1234000000) 0.00004025848411)
(num-test (sqrt -2/1234000000) 0.0+0.00004025848411i)
(num-test (sqrt 2/500029) 0.00199994200252)
(num-test (sqrt -2/500029) 0.0+0.00199994200252i)
(num-test (sqrt 2/362880) 0.00234765070758)
(num-test (sqrt -2/362880) 0.0+0.00234765070758i)
(num-test (sqrt 3/1) 1.73205080756888)
(num-test (sqrt -3/1) 0.0+1.73205080756888i)
(num-test (sqrt 3/2) 1.22474487139159)
(num-test (sqrt -3/2) 0.0+1.22474487139159i)
(num-test (sqrt 3/3) 1)
(num-test (sqrt -3/3) 0.0+1.0i)
(num-test (sqrt 3/10) 0.54772255750517)
(num-test (sqrt -3/10) 0.0+0.54772255750517i)
(num-test (sqrt 3/1234) 0.04930637194547)
(num-test (sqrt -3/1234) 0.0+0.04930637194547i)
(num-test (sqrt 3/1234000000) 0.00004930637195)
(num-test (sqrt -3/1234000000) 0.0+0.00004930637195i)
(num-test (sqrt 3/500029) 0.00244941871067)
(num-test (sqrt -3/500029) 0.0+0.00244941871067i)
(num-test (sqrt 3/362880) 0.00287527316393)
(num-test (sqrt -3/362880) 0.0+0.00287527316393i)
(num-test (sqrt 10/1) 3.16227766016838)
(num-test (sqrt -10/1) 0.0+3.16227766016838i)
(num-test (sqrt 10/2) 2.23606797749979)
(num-test (sqrt -10/2) 0.0+2.23606797749979i)
(num-test (sqrt 10/3) 1.82574185835055)
(num-test (sqrt -10/3) 0.0+1.82574185835055i)
(num-test (sqrt 10/10) 1)
(num-test (sqrt -10/10) 0.0+1.0i)
(num-test (sqrt 10/1234) 0.09002070714424)
(num-test (sqrt -10/1234) 0.0+0.09002070714424i)
(num-test (sqrt 10/1234000000) 0.00009002070714)
(num-test (sqrt -10/1234000000) 0.0+0.00009002070714i)
(num-test (sqrt 10/500029) 0.00447200626870)
(num-test (sqrt -10/500029) 0.0+0.00447200626870i)
(num-test (sqrt 10/362880) 0.00524950656957)
(num-test (sqrt -10/362880) 0.0+0.00524950656957i)
(num-test (sqrt 1234/1) 35.12833614050059)
(num-test (sqrt -1234/1) 0.0+35.12833614050059i)
(num-test (sqrt 1234/2) 24.83948469674844)
(num-test (sqrt -1234/2) 0.0+24.83948469674844i)
(num-test (sqrt 1234/3) 20.28135432690167)
(num-test (sqrt -1234/3) 0.0+20.28135432690167i)
(num-test (sqrt 1234/10) 11.10855526159905)
(num-test (sqrt -1234/10) 0.0+11.10855526159905i)
(num-test (sqrt 1234/1234) 1)
(num-test (sqrt -1234/1234) 0.0+1.0i)
(num-test (sqrt 1234/1234000000) 0.001)
(num-test (sqrt -1234/1234000000) 0.0+0.001i)
(num-test (sqrt 1234/500029) 0.04967752876605)
(num-test (sqrt -1234/500029) 0.0+0.04967752876605i)
(num-test (sqrt 1234/362880) 0.05831443382422)
(num-test (sqrt -1234/362880) 0.0+0.05831443382422i)
(num-test (sqrt 1234000000/1) 35128.33614050059259)
(num-test (sqrt -1234000000/1) 0.0+35128.33614050059259i)
(num-test (sqrt 1234000000/2) 24839.48469674844091)
(num-test (sqrt -1234000000/2) 0.0+24839.48469674844091i)
(num-test (sqrt 1234000000/3) 20281.35432690167727)
(num-test (sqrt -1234000000/3) 0.0+20281.35432690167727i)
(num-test (sqrt 1234000000/10) 11108.55526159905276)
(num-test (sqrt -1234000000/10) 0.0+11108.55526159905276i)
(num-test (sqrt 1234000000/1234) 1000)
(num-test (sqrt -1234000000/1234) 0.0+1000.0i)
(num-test (sqrt 1234000000/1234000000) 1)
(num-test (sqrt -1234000000/1234000000) 0.0+1.0i)
(num-test (sqrt 1234000000/500029) 49.67752876605147)
(num-test (sqrt -1234000000/500029) 0.0+49.67752876605147i)
(num-test (sqrt 1234000000/362880) 58.31443382422451)
(num-test (sqrt -1234000000/362880) 0.0+58.31443382422451i)
(num-test (sqrt 500029/1) 707.12728698587216)
(num-test (sqrt -500029/1) 0.0+707.12728698587216i)
(num-test (sqrt 500029/2) 500.01449978975609)
(num-test (sqrt -500029/2) 0.0+500.01449978975609i)
(num-test (sqrt 500029/3) 408.26012949262304)
(num-test (sqrt -500029/3) 0.0+408.26012949262304i)
(num-test (sqrt 500029/10) 223.61328225308978)
(num-test (sqrt -500029/10) 0.0+223.61328225308978i)
(num-test (sqrt 500029/1234) 20.12982579526738)
(num-test (sqrt -500029/1234) 0.0+20.12982579526738i)
(num-test (sqrt 500029/1234000000) 0.02012982579527)
(num-test (sqrt -500029/1234000000) 0.0+0.02012982579527i)
(num-test (sqrt 500029/500029) 1)
(num-test (sqrt -500029/500029) 0.0+1.0i)
(num-test (sqrt 500029/362880) 1.17385939423129)
(num-test (sqrt -500029/362880) 0.0+1.17385939423129i)
(num-test (sqrt 362880/1) 602.39521910453436)
(num-test (sqrt -362880/1) 0.0+602.39521910453436i)
(num-test (sqrt 362880/2) 425.95774438317238)
(num-test (sqrt -362880/2) 0.0+425.95774438317238i)
(num-test (sqrt 362880/3) 347.79304190854651)
(num-test (sqrt -362880/3) 0.0+347.79304190854651i)
(num-test (sqrt 362880/10) 190.49409439665052)
(num-test (sqrt -362880/10) 0.0+190.49409439665052i)
(num-test (sqrt 362880/1234) 17.14841308438784)
(num-test (sqrt -362880/1234) 0.0+17.14841308438784i)
(num-test (sqrt 362880/1234000000) 0.01714841308439)
(num-test (sqrt -362880/1234000000) 0.0+0.01714841308439i)
(num-test (sqrt 362880/500029) 0.85189078429181)
(num-test (sqrt -362880/500029) 0.0+0.85189078429181i)
(num-test (sqrt 362880/362880) 1)
(num-test (sqrt -362880/362880) 0.0+1.0i)
(num-test (sqrt 0.0) 0.0)
(num-test (sqrt 0.00000001) 0.00010000000000)
(num-test (sqrt -0.00000001) 0.0+0.00010000000000i)
(num-test (sqrt 1.0) 1.0)
(num-test (sqrt -1.0) 0.0+1.0i)
(num-test (sqrt pi) 1.77245385090552)
(num-test (sqrt -3.14159265358979) 0.0+1.77245385090552i)
(num-test (sqrt 2.71828182845905) 1.64872127070013)
(num-test (sqrt -2.71828182845905) 0.0+1.64872127070013i)
(num-test (sqrt 1234.0) 35.12833614050059)
(num-test (sqrt -1234.0) 0.0+35.12833614050059i)
(num-test (sqrt 1234000000.0) 35128.33614050059259)
(num-test (sqrt -1234000000.0) 0.0+35128.33614050059259i)
(num-test (sqrt 0.0+0.0i) 0.0)
(num-test (sqrt -0.0+0.0i) 0.0)
(num-test (sqrt 0.0-0.0i) 0.0)
(num-test (sqrt -0.0-0.0i) 0.0)
(num-test (sqrt 0.0+0.00000001i) 0.00007071067812+0.00007071067812i)
(num-test (sqrt -0.0+0.00000001i) 0.00007071067812+0.00007071067812i)
(num-test (sqrt 0.0-0.00000001i) 0.00007071067812-0.00007071067812i)
(num-test (sqrt -0.0-0.00000001i) 0.00007071067812-0.00007071067812i)
(num-test (sqrt 0.0+1.0i) 0.70710678118655+0.70710678118655i)
(num-test (sqrt -0.0+1.0i) 0.70710678118655+0.70710678118655i)
(num-test (sqrt 0.0-1.0i) 0.70710678118655-0.70710678118655i)
(num-test (sqrt -0.0-1.0i) 0.70710678118655-0.70710678118655i)
(num-test (sqrt 0.0+3.14159265358979i) 1.25331413731550+1.25331413731550i)
(num-test (sqrt -0.0+3.14159265358979i) 1.25331413731550+1.25331413731550i)
(num-test (sqrt 0.0-3.14159265358979i) 1.25331413731550-1.25331413731550i)
(num-test (sqrt -0.0-3.14159265358979i) 1.25331413731550-1.25331413731550i)
(num-test (sqrt 0.0+2.71828182845905i) 1.16582199079856+1.16582199079856i)
(num-test (sqrt -0.0+2.71828182845905i) 1.16582199079856+1.16582199079856i)
(num-test (sqrt 0.0-2.71828182845905i) 1.16582199079856-1.16582199079856i)
(num-test (sqrt -0.0-2.71828182845905i) 1.16582199079856-1.16582199079856i)
(num-test (sqrt 0.0+1234.0i) 24.83948469674844+24.83948469674844i)
(num-test (sqrt -0.0+1234.0i) 24.83948469674844+24.83948469674844i)
(num-test (sqrt 0.0-1234.0i) 24.83948469674844-24.83948469674844i)
(num-test (sqrt -0.0-1234.0i) 24.83948469674844-24.83948469674844i)
(num-test (sqrt 0.0+1234000000.0i) 24839.48469674844091+24839.48469674844091i)
(num-test (sqrt -0.0+1234000000.0i) 24839.48469674844091+24839.48469674844091i)
(num-test (sqrt 0.0-1234000000.0i) 24839.48469674844091-24839.48469674844091i)
(num-test (sqrt -0.0-1234000000.0i) 24839.48469674844091-24839.48469674844091i)
(num-test (sqrt 0.00000001+0.0i) 0.00010000000000)
(num-test (sqrt -0.00000001+0.0i) 0.0+0.00010000000000i)
(num-test (sqrt 0.00000001-0.0i) 0.00010000000000)
(num-test (sqrt -0.00000001-0.0i) 0.0+0.00010000000000i)
(num-test (sqrt 0.00000001+0.00000001i) 0.00010986841135+0.00004550898606i)
(num-test (sqrt -0.00000001+0.00000001i) 0.00004550898606+0.00010986841135i)
(num-test (sqrt 0.00000001-0.00000001i) 0.00010986841135-0.00004550898606i)
(num-test (sqrt -0.00000001-0.00000001i) 0.00004550898606-0.00010986841135i)
(num-test (sqrt 0.00000001+1.0i) 0.70710678472208+0.70710677765101i)
(num-test (sqrt -0.00000001+1.0i) 0.70710677765101+0.70710678472208i)
(num-test (sqrt 0.00000001-1.0i) 0.70710678472208-0.70710677765101i)
(num-test (sqrt -0.00000001-1.0i) 0.70710677765101-0.70710678472208i)
(num-test (sqrt 0.00000001+3.14159265358979i) 1.25331413931021+1.25331413532079i)
(num-test (sqrt -0.00000001+3.14159265358979i) 1.25331413532079+1.25331413931021i)
(num-test (sqrt 0.00000001-3.14159265358979i) 1.25331413931021-1.25331413532079i)
(num-test (sqrt -0.00000001-3.14159265358979i) 1.25331413532079-1.25331413931021i)
(num-test (sqrt 0.00000001+2.71828182845905i) 1.16582199294297+1.16582198865415i)
(num-test (sqrt -0.00000001+2.71828182845905i) 1.16582198865415+1.16582199294297i)
(num-test (sqrt 0.00000001-2.71828182845905i) 1.16582199294297-1.16582198865415i)
(num-test (sqrt -0.00000001-2.71828182845905i) 1.16582198865415-1.16582199294297i)
(num-test (sqrt 0.00000001+1234.0i) 24.83948469684909+24.83948469664779i)
(num-test (sqrt -0.00000001+1234.0i) 24.83948469664779+24.83948469684909i)
(num-test (sqrt 0.00000001-1234.0i) 24.83948469684909-24.83948469664779i)
(num-test (sqrt -0.00000001-1234.0i) 24.83948469664779-24.83948469684909i)
(num-test (sqrt 0.00000001+1234000000.0i) 24839.48469674844091+24839.48469674844091i)
(num-test (sqrt -0.00000001+1234000000.0i) 24839.48469674844091+24839.48469674844091i)
(num-test (sqrt 0.00000001-1234000000.0i) 24839.48469674844091-24839.48469674844091i)
(num-test (sqrt -0.00000001-1234000000.0i) 24839.48469674844091-24839.48469674844091i)
(num-test (sqrt 1.0+0.0i) 1.0)
(num-test (sqrt -0.0) 0.0)
(num-test (sqrt 0.0) 0.0)
(num-test (sqrt -1.0+0.0i) 0.0+1.0i)
(num-test (sqrt 1.0-0.0i) 1.0)
(num-test (sqrt -1.0-0.0i) 0.0+1.0i)
(num-test (sqrt 1.0+0.00000001i) 1.0+0.00000000500000i)
(num-test (sqrt -1.0+0.00000001i) 0.00000000500000+1.0i)
(num-test (sqrt 1.0-0.00000001i) 1.0-0.00000000500000i)
(num-test (sqrt -1.0-0.00000001i) 0.00000000500000-1.0i)
(num-test (sqrt 1.0+1.0i) 1.09868411346781+0.45508986056223i)
(num-test (sqrt -1.0+1.0i) 0.45508986056223+1.09868411346781i)
(num-test (sqrt 1.0-1.0i) 1.09868411346781-0.45508986056223i)
(num-test (sqrt -1.0-1.0i) 0.45508986056223-1.09868411346781i)
(num-test (sqrt 1.0+3.14159265358979i) 1.46576060621706+1.07165953303174i)
(num-test (sqrt -1.0+3.14159265358979i) 1.07165953303174+1.46576060621706i)
(num-test (sqrt 1.0-3.14159265358979i) 1.46576060621706-1.07165953303174i)
(num-test (sqrt -1.0-3.14159265358979i) 1.07165953303174-1.46576060621706i)
(num-test (sqrt 1.0+2.71828182845905i) 1.39577697566445+0.97375220964833i)
(num-test (sqrt -1.0+2.71828182845905i) 0.97375220964833+1.39577697566445i)
(num-test (sqrt 1.0-2.71828182845905i) 1.39577697566445-0.97375220964833i)
(num-test (sqrt -1.0-2.71828182845905i) 0.97375220964833-1.39577697566445i)
(num-test (sqrt 1.0+1234.0i) 24.84955135597340+24.82942211557006i)
(num-test (sqrt -1.0+1234.0i) 24.82942211557006+24.84955135597340i)
(num-test (sqrt 1.0-1234.0i) 24.84955135597340-24.82942211557006i)
(num-test (sqrt -1.0-1234.0i) 24.82942211557006-24.84955135597340i)
(num-test (sqrt 1.0+1234000000.0i) 24839.48470681306208+24839.48468668381975i)
(num-test (sqrt -1.0+1234000000.0i) 24839.48468668381975+24839.48470681306208i)
(num-test (sqrt 1.0-1234000000.0i) 24839.48470681306208-24839.48468668381975i)
(num-test (sqrt -1.0-1234000000.0i) 24839.48468668381975-24839.48470681306208i)
(num-test (sqrt 3.14159265358979+0.0i) 1.77245385090552)
(num-test (sqrt -3.14159265358979+0.0i) 0.0+1.77245385090552i)
(num-test (sqrt 3.14159265358979-0.0i) 1.77245385090552)
(num-test (sqrt -3.14159265358979-0.0i) 0.0+1.77245385090552i)
(num-test (sqrt 3.14159265358979+0.00000001i) 1.77245385090552+0.00000000282095i)
(num-test (sqrt -3.14159265358979+0.00000001i) 0.00000000282095+1.77245385090552i)
(num-test (sqrt 3.14159265358979-0.00000001i) 1.77245385090552-0.00000000282095i)
(num-test (sqrt -3.14159265358979-0.00000001i) 0.00000000282095-1.77245385090552i)
(num-test (sqrt 3.14159265358979+1.0i) 1.79422698718214+0.27867154132224i)
(num-test (sqrt -3.14159265358979+1.0i) 0.27867154132224+1.79422698718214i)
(num-test (sqrt 3.14159265358979-1.0i) 1.79422698718214-0.27867154132224i)
(num-test (sqrt -3.14159265358979-1.0i) 0.27867154132224-1.79422698718214i)
(num-test (sqrt 3.14159265358979+3.14159265358979i) 1.94736688784473+0.80662577586157i)
(num-test (sqrt -3.14159265358979+3.14159265358979i) 0.80662577586157+1.94736688784473i)
(num-test (sqrt 3.14159265358979-3.14159265358979i) 1.94736688784473-0.80662577586157i)
(num-test (sqrt -3.14159265358979-3.14159265358979i) 0.80662577586157-1.94736688784473i)
(num-test (sqrt 3.14159265358979+2.71828182845905i) 1.90996689184696+0.71160443672153i)
(num-test (sqrt -3.14159265358979+2.71828182845905i) 0.71160443672153+1.90996689184696i)
(num-test (sqrt 3.14159265358979-2.71828182845905i) 1.90996689184696-0.71160443672153i)
(num-test (sqrt -3.14159265358979-2.71828182845905i) 0.71160443672153-1.90996689184696i)
(num-test (sqrt 3.14159265358979+1234.0i) 24.87112373493049+24.80788590719961i)
(num-test (sqrt -3.14159265358979+1234.0i) 24.80788590719961+24.87112373493049i)
(num-test (sqrt 3.14159265358979-1234.0i) 24.87112373493049-24.80788590719961i)
(num-test (sqrt -3.14159265358979-1234.0i) 24.80788590719961-24.87112373493049i)
(num-test (sqrt 3.14159265358979+1234000000.0i) 24839.48472836738074+24839.48466512950108i)
(num-test (sqrt -3.14159265358979+1234000000.0i) 24839.48466512950108+24839.48472836738074i)
(num-test (sqrt 3.14159265358979-1234000000.0i) 24839.48472836738074-24839.48466512950108i)
(num-test (sqrt -3.14159265358979-1234000000.0i) 24839.48466512950108-24839.48472836738074i)
(num-test (sqrt 2.71828182845905+0.0i) 1.64872127070013)
(num-test (sqrt -2.71828182845905+0.0i) 0.0+1.64872127070013i)
(num-test (sqrt 2.71828182845905-0.0i) 1.64872127070013)
(num-test (sqrt -2.71828182845905-0.0i) 0.0+1.64872127070013i)
(num-test (sqrt 2.71828182845905+0.00000001i) 1.64872127070013+0.00000000303265i)
(num-test (sqrt -2.71828182845905+0.00000001i) 0.00000000303265+1.64872127070013i)
(num-test (sqrt 2.71828182845905-0.00000001i) 1.64872127070013-0.00000000303265i)
(num-test (sqrt -2.71828182845905-0.00000001i) 0.00000000303265-1.64872127070013i)
(num-test (sqrt 2.71828182845905+1.0i) 1.67551015515410+0.29841657387867i)
(num-test (sqrt -2.71828182845905+1.0i) 0.29841657387867+1.67551015515410i)
(num-test (sqrt 2.71828182845905-1.0i) 1.67551015515410-0.29841657387867i)
(num-test (sqrt -2.71828182845905-1.0i) 0.29841657387867-1.67551015515410i)
(num-test (sqrt 2.71828182845905+3.14159265358979i) 1.85373086379501+0.84737021833856i)
(num-test (sqrt -2.71828182845905+3.14159265358979i) 0.84737021833856+1.85373086379501i)
(num-test (sqrt 2.71828182845905-3.14159265358979i) 1.85373086379501-0.84737021833856i)
(num-test (sqrt -2.71828182845905-3.14159265358979i) 0.84737021833856-1.85373086379501i)
(num-test (sqrt 2.71828182845905+2.71828182845905i) 1.81142386765469+0.75031633318890i)
(num-test (sqrt -2.71828182845905+2.71828182845905i) 0.75031633318890+1.81142386765469i)
(num-test (sqrt 2.71828182845905-2.71828182845905i) 1.81142386765469-0.75031633318890i)
(num-test (sqrt -2.71828182845905-2.71828182845905i) 0.75031633318890-1.81142386765469i)
(num-test (sqrt 2.71828182845905+1234.0i) 24.86685822304219+24.81214130333015i)
(num-test (sqrt -2.71828182845905+1234.0i) 24.81214130333015+24.86685822304219i)
(num-test (sqrt 2.71828182845905-1234.0i) 24.86685822304219-24.81214130333015i)
(num-test (sqrt -2.71828182845905-1234.0i) 24.81214130333015-24.86685822304219i)
(num-test (sqrt 2.71828182845905+1234000000.0i) 24839.48472410691829+24839.48466938996353i)
(num-test (sqrt -2.71828182845905+1234000000.0i) 24839.48466938996353+24839.48472410691829i)
(num-test (sqrt 2.71828182845905-1234000000.0i) 24839.48472410691829-24839.48466938996353i)
(num-test (sqrt -2.71828182845905-1234000000.0i) 24839.48466938996353-24839.48472410691829i)
(num-test (sqrt 1234.0+0.0i) 35.12833614050059)
(num-test (sqrt -1234.0+0.0i) 0.0+35.12833614050059i)
(num-test (sqrt 1234.0-0.0i) 35.12833614050059)
(num-test (sqrt -1234.0-0.0i) 0.0+35.12833614050059i)
(num-test (sqrt 1234.0+0.00000001i) 35.12833614050059+0.00000000014234i)
(num-test (sqrt -1234.0+0.00000001i) 0.00000000014234+35.12833614050059i)
(num-test (sqrt 1234.0-0.00000001i) 35.12833614050059-0.00000000014234i)
(num-test (sqrt -1234.0-0.00000001i) 0.00000000014234-35.12833614050059i)
(num-test (sqrt 1234.0+1.0i) 35.12833902411499+0.01423352238934i)
(num-test (sqrt -1234.0+1.0i) 0.01423352238934+35.12833902411499i)
(num-test (sqrt 1234.0-1.0i) 35.12833902411499-0.01423352238934i)
(num-test (sqrt -1234.0-1.0i) 0.01423352238934-35.12833902411499i)
(num-test (sqrt 1234.0+3.14159265358979i) 35.12836460058208+0.04471589681601i)
(num-test (sqrt -1234.0+3.14159265358979i) 0.04471589681601+35.12836460058208i)
(num-test (sqrt 1234.0-3.14159265358979i) 35.12836460058208-0.04471589681601i)
(num-test (sqrt -1234.0-3.14159265358979i) 0.04471589681601-35.12836460058208i)
(num-test (sqrt 1234.0+2.71828182845905i) 35.12835744766116+0.03869070497402i)
(num-test (sqrt -1234.0+2.71828182845905i) 0.03869070497402+35.12835744766116i)
(num-test (sqrt 1234.0-2.71828182845905i) 35.12835744766116-0.03869070497402i)
(num-test (sqrt -1234.0-2.71828182845905i) 0.03869070497402-35.12835744766116i)
(num-test (sqrt 1234.0+1234.0i) 38.59494485012512+15.98654959596347i)
(num-test (sqrt -1234.0+1234.0i) 15.98654959596347+38.59494485012512i)
(num-test (sqrt 1234.0-1234.0i) 38.59494485012512-15.98654959596347i)
(num-test (sqrt -1234.0-1234.0i) 15.98654959596347-38.59494485012512i)
(num-test (sqrt 1234.0+1234000000.0i) 24839.49711649389428+24839.47227700919757i)
(num-test (sqrt -1234.0+1234000000.0i) 24839.47227700919757+24839.49711649389428i)
(num-test (sqrt 1234.0-1234000000.0i) 24839.49711649389428-24839.47227700919757i)
(num-test (sqrt -1234.0-1234000000.0i) 24839.47227700919757-24839.49711649389428i)
(num-test (sqrt 1234000000.0+0.0i) 35128.33614050059259)
(num-test (sqrt -1234000000.0+0.0i) 0.0+35128.33614050059259i)
(num-test (sqrt 1234000000.0-0.0i) 35128.33614050059259)
(num-test (sqrt -1234000000.0-0.0i) 0.0+35128.33614050059259i)
(num-test (sqrt 1234000000.0+0.00000001i) 35128.33614050059259+0.00000000000014i)
(num-test (sqrt -1234000000.0+0.00000001i) 0.00000000000014+35128.33614050059259i)
(num-test (sqrt 1234000000.0-0.00000001i) 35128.33614050059259-0.00000000000014i)
(num-test (sqrt -1234000000.0-0.00000001i) 0.00000000000014-35128.33614050059259i)
(num-test (sqrt 1234000000.0+1.0i) 35128.33614050059259+0.00001423352356i)
(num-test (sqrt -1234000000.0+1.0i) 0.00001423352356+35128.33614050059259i)
(num-test (sqrt 1234000000.0-1.0i) 35128.33614050059259-0.00001423352356i)
(num-test (sqrt -1234000000.0-1.0i) 0.00001423352356-35128.33614050059259i)
(num-test (sqrt 1234000000.0+3.14159265358979i) 35128.33614050059259+0.00004471593304i)
(num-test (sqrt -1234000000.0+3.14159265358979i) 0.00004471593304+35128.33614050059259i)
(num-test (sqrt 1234000000.0-3.14159265358979i) 35128.33614050059259-0.00004471593304i)
(num-test (sqrt -1234000000.0-3.14159265358979i) 0.00004471593304-35128.33614050059259i)
(num-test (sqrt 1234000000.0+2.71828182845905i) 35128.33614050059259+0.00003869072844i)
(num-test (sqrt -1234000000.0+2.71828182845905i) 0.00003869072844+35128.33614050059259i)
(num-test (sqrt 1234000000.0-2.71828182845905i) 35128.33614050059259-0.00003869072844i)
(num-test (sqrt -1234000000.0-2.71828182845905i) 0.00003869072844-35128.33614050059259i)
(num-test (sqrt 1234000000.0+1234.0i) 35128.33614050497999+0.01756416807025i)
(num-test (sqrt -1234000000.0+1234.0i) 0.01756416807025+35128.33614050497999i)
(num-test (sqrt 1234000000.0-1234.0i) 35128.33614050497999-0.01756416807025i)
(num-test (sqrt -1234000000.0-1234.0i) 0.01756416807025-35128.33614050497999i)
(num-test (sqrt 1234000000.0+1234000000.0i) 38594.94485012512450+15986.54959596346634i)
(num-test (sqrt -1234000000.0+1234000000.0i) 15986.54959596346634+38594.94485012512450i)
(num-test (sqrt 1234000000.0-1234000000.0i) 38594.94485012512450-15986.54959596346634i)
(num-test (sqrt -1234000000.0-1234000000.0i) 15986.54959596346634-38594.94485012512450i)
(num-test (sqrt 2.2250739e-308) 1.4916681e-154)
(num-test (sqrt 1.7976931e+308) 1.3407808e+154)
(num-test (sqrt 0.0e+00+0.0e+00i) 0e0+0.0i)
(num-test (sqrt 0.0e+00+1.19209289550781250e-07i) 2.44140625e-4+2.44140625e-4i)
(num-test (sqrt 0.0e+00-1.19209289550781250e-07i) 2.44140625e-4-2.44140625e-4i)
(num-test (sqrt 0.0e+00+5.0e-01i) 5e-1+5e-1i)
(num-test (sqrt 0.0e+00-5.0e-01i) 5e-1-5e-1i)
(num-test (sqrt 0.0e+00+1.0e+00i) 7.0710678118654752440e-1+7.0710678118654752440e-1i)
(num-test (sqrt 0.0e+00-1.0e+00i) 7.0710678118654752440e-1-7.0710678118654752440e-1i)
(num-test (sqrt 0.0e+00+2.0e+00i) 1+1i)
(num-test (sqrt 0.0e+00-2.0e+00i) 1-1i)
(num-test (sqrt 0.0e+00+8.3886080e+06i) 2048+2048i)
(num-test (sqrt 0.0e+00-8.3886080e+06i) 2048-2048i)
(num-test (sqrt 1.19209289550781250e-07+0.0e+00i) 3.4526698300124390840e-4+0.0i)
(num-test (sqrt -1.19209289550781250e-07+0.0e+00i) 0+3.4526698300124390840e-4i)
(num-test (sqrt 1.19209289550781250e-07+1.19209289550781250e-07i) 3.7933934912842707699e-4+1.5712750315077700799e-4i)
(num-test (sqrt 1.19209289550781250e-07-1.19209289550781250e-07i) 3.7933934912842707699e-4-1.5712750315077700799e-4i)
(num-test (sqrt -1.19209289550781250e-07+1.19209289550781250e-07i) 1.5712750315077700799e-4+3.7933934912842707699e-4i)
(num-test (sqrt -1.19209289550781250e-07-1.19209289550781250e-07i) 1.5712750315077700799e-4-3.7933934912842707699e-4i)
(num-test (sqrt 1.19209289550781250e-07+5.0e-01i) 5.0000005960464832810e-1+4.9999994039535877732e-1i)
(num-test (sqrt 1.19209289550781250e-07-5.0e-01i) 5.0000005960464832810e-1-4.9999994039535877732e-1i)
(num-test (sqrt -1.19209289550781250e-07+5.0e-01i) 4.9999994039535877732e-1+5.0000005960464832810e-1i)
(num-test (sqrt -1.19209289550781250e-07-5.0e-01i) 4.9999994039535877732e-1-5.0000005960464832810e-1i)
(num-test (sqrt 1.19209289550781250e-07+1.0e+00i) 7.0710682333339729137e-1+7.0710673903970026958e-1i)
(num-test (sqrt 1.19209289550781250e-07-1.0e+00i) 7.0710682333339729137e-1-7.0710673903970026958e-1i)
(num-test (sqrt -1.19209289550781250e-07+1.0e+00i) 7.0710673903970026958e-1+7.0710682333339729137e-1i)
(num-test (sqrt -1.19209289550781250e-07-1.0e+00i) 7.0710673903970026958e-1-7.0710682333339729137e-1i)
(num-test (sqrt 1.19209289550781250e-07+2.0e+00i) 1.0000000298023228318e0+9.9999997019767805639e-1i)
(num-test (sqrt 1.19209289550781250e-07-2.0e+00i) 1.0000000298023228318e0-9.9999997019767805639e-1i)
(num-test (sqrt -1.19209289550781250e-07+2.0e+00i) 9.9999997019767805639e-1+1.0000000298023228318e0i)
(num-test (sqrt -1.19209289550781250e-07-2.0e+00i) 9.9999997019767805639e-1-1.0000000298023228318e0i)
(num-test (sqrt 1.19209289550781250e-07+8.3886080e+06i) 2.0480000000000145519e3+2.0479999999999854481e3i)
(num-test (sqrt 1.19209289550781250e-07-8.3886080e+06i) 2.0480000000000145519e3-2.0479999999999854481e3i)
(num-test (sqrt -1.19209289550781250e-07+8.3886080e+06i) 2.0479999999999854481e3+2.0480000000000145519e3i)
(num-test (sqrt -1.19209289550781250e-07-8.3886080e+06i) 2.0479999999999854481e3-2.0480000000000145519e3i)
(num-test (sqrt 5.0e-01+0.0e+00i) 7.0710678118654752440e-1+0.0i)
(num-test (sqrt -5.0e-01+0.0e+00i) 0+7.0710678118654752440e-1i)
(num-test (sqrt 5.0e-01+1.19209289550781250e-07i) 7.0710678118655254870e-1+8.4293697021787464631e-8i)
(num-test (sqrt 5.0e-01-1.19209289550781250e-07i) 7.0710678118655254870e-1-8.4293697021787464631e-8i)
(num-test (sqrt -5.0e-01+1.19209289550781250e-07i) 8.4293697021787464631e-8+7.0710678118655254870e-1i)
(num-test (sqrt -5.0e-01-1.19209289550781250e-07i) 8.4293697021787464631e-8-7.0710678118655254870e-1i)
(num-test (sqrt 5.0e-01+5.0e-01i) 7.7688698701501865367e-1+3.2179712645279131237e-1i)
(num-test (sqrt 5.0e-01-5.0e-01i) 7.7688698701501865367e-1-3.2179712645279131237e-1i)
(num-test (sqrt -5.0e-01+5.0e-01i) 3.2179712645279131237e-1+7.7688698701501865367e-1i)
(num-test (sqrt -5.0e-01-5.0e-01i) 3.2179712645279131237e-1-7.7688698701501865367e-1i)
(num-test (sqrt 5.0e-01+1.0e+00i) 8.9945371997393363613e-1+5.5589297025142117199e-1i)
(num-test (sqrt 5.0e-01-1.0e+00i) 8.9945371997393363613e-1-5.5589297025142117199e-1i)
(num-test (sqrt -5.0e-01+1.0e+00i) 5.5589297025142117199e-1+8.9945371997393363613e-1i)
(num-test (sqrt -5.0e-01-1.0e+00i) 5.5589297025142117199e-1-8.9945371997393363613e-1i)
(num-test (sqrt 5.0e-01+2.0e+00i) 1.1317139242778694103e0+8.8361553087551326576e-1i)
(num-test (sqrt 5.0e-01-2.0e+00i) 1.1317139242778694103e0-8.8361553087551326576e-1i)
(num-test (sqrt -5.0e-01+2.0e+00i) 8.8361553087551326576e-1+1.1317139242778694103e0i)
(num-test (sqrt -5.0e-01-2.0e+00i) 8.8361553087551326576e-1-1.1317139242778694103e0i)
(num-test (sqrt 5.0e-01+8.3886080e+06i) 2.0480000610351571595e3+2.0479999389648446595e3i)
(num-test (sqrt 5.0e-01-8.3886080e+06i) 2.0480000610351571595e3-2.0479999389648446595e3i)
(num-test (sqrt -5.0e-01+8.3886080e+06i) 2.0479999389648446595e3+2.0480000610351571595e3i)
(num-test (sqrt -5.0e-01-8.3886080e+06i) 2.0479999389648446595e3-2.0480000610351571595e3i)
(num-test (sqrt 1.0e+00+0.0e+00i) 1e0+0.0i)
(num-test (sqrt -1.0e+00+0.0e+00i) 0+1i)
(num-test (sqrt 1.0e+00+1.19209289550781250e-07i) 1.0000000000000017764e0+5.9604644775390519121e-8i)
(num-test (sqrt 1.0e+00-1.19209289550781250e-07i) 1.0000000000000017764e0-5.9604644775390519121e-8i)
(num-test (sqrt -1.0e+00+1.19209289550781250e-07i) 5.9604644775390519121e-8+1.0000000000000017764e0i)
(num-test (sqrt -1.0e+00-1.19209289550781250e-07i) 5.9604644775390519121e-8-1.0000000000000017764e0i)
(num-test (sqrt 1.0e+00+5.0e-01i) 1.0290855136357461252e0+2.4293413587832283909e-1i)
(num-test (sqrt 1.0e+00-5.0e-01i) 1.0290855136357461252e0-2.4293413587832283909e-1i)
(num-test (sqrt -1.0e+00+5.0e-01i) 2.4293413587832283909e-1+1.0290855136357461252e0i)
(num-test (sqrt -1.0e+00-5.0e-01i) 2.4293413587832283909e-1-1.0290855136357461252e0i)
(num-test (sqrt 1.0e+00+1.0e+00i) 1.0986841134678099660e0+4.5508986056222734130e-1i)
(num-test (sqrt 1.0e+00-1.0e+00i) 1.0986841134678099660e0-4.5508986056222734130e-1i)
(num-test (sqrt -1.0e+00+1.0e+00i) 4.5508986056222734130e-1+1.0986841134678099660e0i)
(num-test (sqrt -1.0e+00-1.0e+00i) 4.5508986056222734130e-1-1.0986841134678099660e0i)
(num-test (sqrt 1.0e+00+2.0e+00i) 1.2720196495140689643e0+7.8615137775742328607e-1i)
(num-test (sqrt 1.0e+00-2.0e+00i) 1.2720196495140689643e0-7.8615137775742328607e-1i)
(num-test (sqrt -1.0e+00+2.0e+00i) 7.8615137775742328607e-1+1.2720196495140689643e0i)
(num-test (sqrt -1.0e+00-2.0e+00i) 7.8615137775742328607e-1-1.2720196495140689643e0i)
(num-test (sqrt 1.0e+00+8.3886080e+06i) 2.0480001220703161380e3+2.0479998779296911380e3i)
(num-test (sqrt 1.0e+00-8.3886080e+06i) 2.0480001220703161380e3-2.0479998779296911380e3i)
(num-test (sqrt -1.0e+00+8.3886080e+06i) 2.0479998779296911380e3+2.0480001220703161380e3i)
(num-test (sqrt -1.0e+00-8.3886080e+06i) 2.0479998779296911380e3-2.0480001220703161380e3i)
(num-test (sqrt 2.0e+00+0.0e+00i) 1.4142135623730950488e0+0.0i)
(num-test (sqrt -2.0e+00+0.0e+00i) 0+1.4142135623730950488e0i)
(num-test (sqrt 2.0e+00+1.19209289550781250e-07i) 1.4142135623730956768e0+4.2146848510894013070e-8i)
(num-test (sqrt 2.0e+00-1.19209289550781250e-07i) 1.4142135623730956768e0-4.2146848510894013070e-8i)
(num-test (sqrt -2.0e+00+1.19209289550781250e-07i) 4.2146848510894013070e-8+1.4142135623730956768e0i)
(num-test (sqrt -2.0e+00-1.19209289550781250e-07i) 4.2146848510894013070e-8-1.4142135623730956768e0i)
(num-test (sqrt 2.0e+00+5.0e-01i) 1.4250531240639470060e0+1.7543205637629383228e-1i)
(num-test (sqrt 2.0e+00-5.0e-01i) 1.4250531240639470060e0-1.7543205637629383228e-1i)
(num-test (sqrt -2.0e+00+5.0e-01i) 1.7543205637629383228e-1+1.4250531240639470060e0i)
(num-test (sqrt -2.0e+00-5.0e-01i) 1.7543205637629383228e-1-1.4250531240639470060e0i)
(num-test (sqrt 2.0e+00+1.0e+00i) 1.4553466902253548081e0+3.4356074972251246414e-1i)
(num-test (sqrt 2.0e+00-1.0e+00i) 1.4553466902253548081e0-3.4356074972251246414e-1i)
(num-test (sqrt -2.0e+00+1.0e+00i) 3.4356074972251246414e-1+1.4553466902253548081e0i)
(num-test (sqrt -2.0e+00-1.0e+00i) 3.4356074972251246414e-1-1.4553466902253548081e0i)
(num-test (sqrt 2.0e+00+2.0e+00i) 1.5537739740300373073e0+6.4359425290558262474e-1i)
(num-test (sqrt 2.0e+00-2.0e+00i) 1.5537739740300373073e0-6.4359425290558262474e-1i)
(num-test (sqrt -2.0e+00+2.0e+00i) 6.4359425290558262474e-1+1.5537739740300373073e0i)
(num-test (sqrt -2.0e+00-2.0e+00i) 6.4359425290558262474e-1-1.5537739740300373073e0i)
(num-test (sqrt 2.0e+00+8.3886080e+06i) 2.0480002441406395519e3+2.0479997558593895519e3i)
(num-test (sqrt 2.0e+00-8.3886080e+06i) 2.0480002441406395519e3-2.0479997558593895519e3i)
(num-test (sqrt -2.0e+00+8.3886080e+06i) 2.0479997558593895519e3+2.0480002441406395519e3i)
(num-test (sqrt -2.0e+00-8.3886080e+06i) 2.0479997558593895519e3-2.0480002441406395519e3i)
(num-test (sqrt 8.3886080e+06+0.0e+00i) 2.8963093757400986599e3+0.0i)
(num-test (sqrt -8.3886080e+06+0.0e+00i) 0+2.8963093757400986599e3i)
(num-test (sqrt 8.3886080e+06+1.19209289550781250e-07i) 2.8963093757400986599e3+2.0579515874459976458e-11i)
(num-test (sqrt 8.3886080e+06-1.19209289550781250e-07i) 2.8963093757400986599e3-2.0579515874459976458e-11i)
(num-test (sqrt -8.3886080e+06+1.19209289550781250e-07i) 2.0579515874459976458e-11+2.8963093757400986599e3i)
(num-test (sqrt -8.3886080e+06-1.19209289550781250e-07i) 2.0579515874459976458e-11-2.8963093757400986599e3i)
(num-test (sqrt 8.3886080e+06+5.0e-01i) 2.8963093757400999462e3+8.6316745750310938767e-5i)
(num-test (sqrt 8.3886080e+06-5.0e-01i) 2.8963093757400999462e3-8.6316745750310938767e-5i)
(num-test (sqrt -8.3886080e+06+5.0e-01i) 8.6316745750310938767e-5+2.8963093757400999462e3i)
(num-test (sqrt -8.3886080e+06-5.0e-01i) 8.6316745750310938767e-5-2.8963093757400999462e3i)
(num-test (sqrt 8.3886080e+06+1.0e+00i) 2.8963093757401038048e3+1.7263349150062164754e-4i)
(num-test (sqrt 8.3886080e+06-1.0e+00i) 2.8963093757401038048e3-1.7263349150062164754e-4i)
(num-test (sqrt -8.3886080e+06+1.0e+00i) 1.7263349150062164754e-4+2.8963093757401038048e3i)
(num-test (sqrt -8.3886080e+06-1.0e+00i) 1.7263349150062164754e-4-2.8963093757401038048e3i)
(num-test (sqrt 8.3886080e+06+2.0e+00i) 2.8963093757401192395e3+3.4526698300124145513e-4i)
(num-test (sqrt 8.3886080e+06-2.0e+00i) 2.8963093757401192395e3-3.4526698300124145513e-4i)
(num-test (sqrt -8.3886080e+06+2.0e+00i) 3.4526698300124145513e-4+2.8963093757401192395e3i)
(num-test (sqrt -8.3886080e+06-2.0e+00i) 3.4526698300124145513e-4-2.8963093757401192395e3i)
(num-test (sqrt 8.3886080e+06+8.3886080e+06i) 3.1821290988135164054e3+1.3180810299506332155e3i)
(num-test (sqrt 8.3886080e+06-8.3886080e+06i) 3.1821290988135164054e3-1.3180810299506332155e3i)
(num-test (sqrt -8.3886080e+06+8.3886080e+06i) 1.3180810299506332155e3+3.1821290988135164054e3i)
(num-test (sqrt -8.3886080e+06-8.3886080e+06i) 1.3180810299506332155e3-3.1821290988135164054e3i)
(num-test (sqrt -1.0e+01) 0+3.1622776601683793320e0i)
(num-test (sqrt -2.0e+00) 0+1.4142135623730950488e0i)
(num-test (sqrt -1.0e+00) 0+1i)
(num-test (sqrt -7.50e-01) 0+8.6602540378443864676e-1i)
(num-test (sqrt -5.0e-01) 0+7.0710678118654752440e-1i)
(num-test (sqrt -1.250e-01) 0+3.5355339059327376220e-1i)
(num-test (sqrt -3.45266983001243932001e-04) 0+1.8581361171917517303e-2i)
(num-test (sqrt -1.19209289550781250e-07) 0+3.4526698300124390840e-4i)
(num-test (sqrt 0.0e+00) 0e0+0.0i)
(num-test (sqrt 1.19209289550781250e-07) 3.4526698300124390840e-4+0.0i)
(num-test (sqrt 3.45266983001243932001e-04) 1.8581361171917517303e-2+0.0i)
(num-test (sqrt 1.250e-01) 3.5355339059327376220e-1+0.0i)
(num-test (sqrt 5.0e-01) 7.0710678118654752440e-1+0.0i)
(num-test (sqrt 7.50e-01) 8.6602540378443864676e-1+0.0i)
(num-test (sqrt 1.0e+00) 1e0+0.0i)
(num-test (sqrt 2.0e+00) 1.4142135623730950488e0+0.0i)
(num-test (sqrt 1.0e+01) 3.1622776601683793320e0+0.0i)
(num-test (sqrt 9) 3)
(num-test (sqrt -9.0) 0.0+3.0i)
(num-test (sqrt (sqrt (sqrt 256))) 2)
(num-test (sqrt (sqrt (sqrt 1/256))) 1/2)
(num-test (sqrt 0.1-111i) 7.4531887486175-7.4464771887462i)
(num-test (sqrt -2.225073858507201399999999999999999999996E-308) 0.0+1.49166814624004135432626585974344862306E-154i)
(num-test (sqrt -9223372036854775808) 0.0+3.037000499976049692451388530026308346744E9i)
(num-test (sqrt 1.110223024625156799999999999999999999997E-16) 1.053671212772350917851343014434652692451E-8)
(num-test (sqrt 9223372036854775807) 3.037000499976049692286752403030628535068E9)

(num-test (sqrt (* 64686/26264 64686/26264)) 32343/13132)
(num-test (sqrt (* 64812/61611 64812/61611)) 1964/1867)
(num-test (sqrt (* 38868/48261 38868/48261)) 12956/16087)
(num-test (sqrt (* 39537/63628 39537/63628)) 39537/63628)
(num-test (sqrt (* 1238/47077 1238/47077)) 1238/47077)
(num-test (sqrt (* 51490/46936 51490/46936)) 25745/23468)
(num-test (sqrt (* 35778/34583 35778/34583)) 35778/34583)
(num-test (sqrt (* 19920/16774 19920/16774)) 9960/8387)
(num-test (sqrt (* 29100/37656 29100/37656)) 2425/3138)
(num-test (sqrt (* 64906/58229 64906/58229)) 64906/58229)
(num-test (sqrt 144) 12)
(num-test (sqrt 9000000000000000000) 3000000000)
;; but unfortunately in non-gmp, 9400000000000000000 -> -9046744073709551616

(if (integer? (sqrt 4))
    (begin
      (for-each
       (lambda (n sqn)
	 (if (positive? n) ; in case 32 bit int
	     (let ((val (sqrt n)))
	       (if (or (not (integer? val))
		       (not (eqv? sqn val)))
		   (format #t ";(sqrt ~A) expected ~A but got ~A~%" n sqn val)))))
       (list 9 491401 19439281 1248844921 235565593201)
       (list 3 701 4409 35339 485351))
      
      (for-each
       (lambda (n)
	 (if (positive? n)
	     (let ((val (sqrt n)))
	       (if (or (integer? val)
		       (> (abs (- (* val val) n)) .001))
		   (format #t ";(sqrt ~A) expected ~A but got ~A~%" n (sqrt (* 1.0 n)) val)))))
       (list 10 491400 19439282 1248844920 235565593200))
      
      (test (eqv? (expt 2 3) 8) #t)
					;(test (eqv? (log 8 2) 3) #t) ; optimization in C (-O2) changes this
      (num-test (log 8 2) 3)
      (num-test (log 1/8 2) -3)
      (test (eqv? (expt 701 2) 491401) #t)
      (test (eqv? (log 491401 701) 2) #t)
      ))

(let ((err 0.0)
      (mx 0.0))
  (do ((i 0 (+ i 1))
       (x -10.0 (+ x .1)))
      ((= i 200))
    (let ((y (magnitude (- x (* (sqrt x) (sqrt x))))))
      (if (> y err) (begin (set! mx x) (set! err y)))))
  (if (> err 1e-14)
      (format #t ";(sqr (sqrt ~A)) error: ~A~%" mx err)))

(let ((err 0.0)
      (mx 0.0))
  (do ((i 0 (+ i 1))
       (x -10.0+i (+ x .1+i)))
      ((= i 200))
    (let ((y (magnitude (- x (* (sqrt x) (sqrt x))))))
      (if (> y err) (begin (set! mx x) (set! err y)))))
  (if (> err 1e-12)
      (format #t ";(sqr (sqrt ~A)) error: ~A~%" mx err)))

(num-test (* (/ 4 (sqrt 522)) 
	     (log (* (expt (/ (+ 5 (sqrt 29)) (sqrt 2)) 3) 
		     (+ (* 5 (sqrt 29)) (* 11 (sqrt 6))) 
		     (expt (+ (sqrt (/ (+ 9 (* 3 (sqrt 6))) 4))
			      (sqrt (/ (+ 5 (* 3 (sqrt 6))) 4))) 6)))) ;31 digits
	  pi)

(num-test (let* ((N 3502)
		 (D (* 1/2 (+ 1071 (* 184 (sqrt 34)))))
		 (E (* 1/2 (+ 1553 (* 266 (sqrt 34)))))
		 (F (+ 429 (* 304 (sqrt 2))))
		 (G (* 1/2 (+ 627 (* 442 (sqrt 2)))))
		 (d1 (+ D (sqrt (- (* D D) 1))))
		 (e1 (+ E (sqrt (- (* E E) 1))))
		 (f1 (+ F (sqrt (- (* F F) 1))))
		 (g1 (+ G (sqrt (- (* G G) 1))))
		 (defg (* 2 d1 e1 f1 g1)))
	    (* (/ (sqrt N)) (- (log (expt defg -6)))))
	  pi)

(num-test (let* ((N 2737)
		 (D (* 1/2 (+ 621 (* 49 (sqrt 161)))))
		 (E (* 1/4 (+ 321 (* 25 (sqrt 161)))))
		 (F (* 1/4 (+ 393 (* 31 (sqrt 161)))))
		 (G (* 1/4 (+ 2529 (* 199 (sqrt 161)))))
		 (d (+ D (sqrt (- (* D D) 1))))
		 (e (+ E (sqrt (- (* E E) 1))))
		 (f (+ F (sqrt (- (* F F) 1))))
		 (g (+ G (sqrt (- (* G G) 1))))
		 (defg (* 2 d e f g)))
	    (* (/ (sqrt N)) (- (log (abs (* -1 (expt defg -6)))))))
	  pi) ; Newman and Shanks "On a Sequence Arising in Series for pi"

(num-test (let* ((an (sqrt 2)) ; Borwein and Borwein "AGM Mean and Fast Computation"
		 (bn 0)
		 (pn (+ 2 (sqrt 2))))
	    (do ((i 0 (+ i 1)))
		((= i 4) pn)
	      (let* ((sqa (sqrt an))
		     (an1 (* 1/2 (+ sqa (/ 1.0 sqa))))
		     (bn1 (* sqa (/ (+ bn 1) (+ bn an))))
		     (pn1 (* pn bn1 (/ (+ an1 1) (+ bn1 1)))))
		(set! pn pn1)
		(set! bn bn1)
		(set! an an1))))
	  pi)

(if with-bignums
    (begin
      (num-test (sqrt 340282366920938463463374607431768211456) 18446744073709551616)
      (num-test (sqrt 32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230656) 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
      (num-test (sqrt 1208925819614629174706176/717897987691852588770249) 1099511627776/847288609443)
      (num-test (sqrt (/ (* 1.0 (expt 2 80)) (expt 3 50))) 1.297682531692252029863335918836296060669E0)
      (num-test (sqrt -340282366920938463463374607431768211456) 0.0+1.8446744073709551616E19i)
      (num-test (sqrt 0+340282366920938463463374607431768211456i) 1.304381782533278221234957180625250836888E19+1.304381782533278221234957180625250836888E19i)
      ))

(test (sqrt) 'error)
(test (sqrt "hi") 'error)
(test (sqrt 1.0+23.0i 1.0+23.0i) 'error)

(for-each
 (lambda (arg)
   (test (sqrt arg) 'error))
 (list "hi" '() (integer->char 65) #f #t '(1 2) _ht_ 'a-symbol (cons 1 2) (make-vector 3) abs 
       #<eof> '(1 2 3) #\newline (lambda (a) (+ a 1)) #<unspecified> #<undefined>))

(num-test (sqrt 1/1073741824) 1/32768)
(num-test (sqrt 1/274877906944) 1/524288)
(num-test (sqrt 9223372030926249001) 3037000499)
(num-test (sqrt 1/274877906944) 1/524288)
(num-test (sqrt 1/1099511627776) 1/1048576)
(num-test (sqrt 1/4398046511104) (sqrt (/ (expt 2 42))))
(num-test (sqrt 1/4611686018427387904) 1/2147483648)
(num-test (sqrt 1/1152921504606846976) 1/1073741824)
(num-test (sqrt 1/9223372030926249001) 1/3037000499)
(num-test (sqrt 0+i) (/ 1+i (sqrt 2)))
(num-test (+ 0-i(sqrt 00)) 0-i)
(num-test (sqrt (* 1.2345e-127 1.2345e-127)) 1.2345e-127)
(num-test (sqrt (* 1.2345e-27 1.2345e-27)) 1.2345e-27)
(num-test (sqrt 13) (do ((i 1 (+ i 1)) (prod 1.0 (* prod (tan (/ (* i pi) 13))))) ((= i 7) prod)))
(num-test (* 768 (sqrt (- 2 (sqrt (+ 2 (sqrt (+ 2 (sqrt (+ 2 (sqrt (+ 2 (sqrt (+ 2 (sqrt (+ 2 (sqrt (+ 2 (sqrt (+ 2 1))))))))))))))))))) 3.1415904632368)

(for-each
 (lambda (num-and-val)
   (let ((num (car num-and-val)) (val (cadr num-and-val))) (num-test-1 'sqrt num (sqrt num) val)))
 (vector (list 0 0) (list 1 1) (list 2 1.4142135623731) (list 3 1.7320508075689) (list -1 0+1i) 
	 (list -2 0+1.4142135623731i) (list -3 0+1.7320508075689i) (list 9223372036854775807 3037000499.976) 
	 (list -9223372036854775808 0+3037000499.976i) (list 1/2 0.70710678118655) (list 1/3 0.57735026918963) 
	 (list -1/2 0+0.70710678118655i) (list -1/3 0+0.57735026918963i) (list 1/9223372036854775807 3.2927225399136e-10) 
	 (list 0.0 0.0) (list 1.0 1.0) (list 2.0 1.4142135623731) (list -2.0 0+1.4142135623731i) 
	 (list 1.000000000000000000000000000000000000002E-309 3.162277660168379331998893544432718533725E-155) 
	 (list 1e+16 100000000.0) (list 0+1i 0.70710678118655+0.70710678118655i) (list 0+2i 1+1i) 
	 (list 0-1i 0.70710678118655-0.70710678118655i) (list 1+1i 1.0986841134678+0.45508986056223i) 
	 (list 1-1i 1.0986841134678-0.45508986056223i) (list -1+1i 0.45508986056223+1.0986841134678i) 
	 (list -1-1i 0.45508986056223-1.0986841134678i) (list 0.1+0.1i 0.34743442276012+0.14391204994251i) 
	 (list 1e+16+1e+16i 109868411.34678+45508986.056223i) (list 1e-16+1e-16i 1.0986841134678e-08+4.5508986056223e-09i) 
	 ))
  
(let ((sqrts (list
	      1.00000000000000000000000000000000000000000000000000000000000000000000
	      1.41421356237309504880168872420969807856967187537694807317667973799073
	      1.73205080756887729352744634150587236694280525381038062805580697945193
	      2.00000000000000000000000000000000000000000000000000000000000000000000
	      2.23606797749978969640917366873127623544061835961152572427089724541052
	      2.44948974278317809819728407470589139196594748065667012843269256725096
	      2.64575131106459059050161575363926042571025918308245018036833445920106
	      2.82842712474619009760337744841939615713934375075389614635335947598146
	      3.00000000000000000000000000000000000000000000000000000000000000000000
	      3.16227766016837933199889354443271853371955513932521682685750485279259
	      3.31662479035539984911493273667068668392708854558935359705868214611648
	      3.46410161513775458705489268301174473388561050762076125611161395890386
	      3.60555127546398929311922126747049594625129657384524621271045305622716
	      3.74165738677394138558374873231654930175601980777872694630374546732003
	      3.87298334620741688517926539978239961083292170529159082658757376611348
	      4.00000000000000000000000000000000000000000000000000000000000000000000
	      4.12310562561766054982140985597407702514719922537362043439863357309495
	      4.24264068711928514640506617262909423570901562613084421953003921397219
	      4.35889894354067355223698198385961565913700392523244493689034413815955
	      4.47213595499957939281834733746255247088123671922305144854179449082104
	      4.58257569495584000658804719372800848898445657676797190260724212390686
	      4.69041575982342955456563011354446628058822835341173715360570189101702
	      4.79583152331271954159743806416269391999670704190412934648530911444825
	      4.89897948556635619639456814941178278393189496131334025686538513450192
	      5.00000000000000000000000000000000000000000000000000000000000000000000
	      5.09901951359278483002822410902278198956377094609959640758497080442593
	      5.19615242270663188058233902451761710082841576143114188416742093835579
	      5.29150262212918118100323150727852085142051836616490036073666891840213
	      5.38516480713450403125071049154032955629512016164478883768038867001664
	      5.47722557505166113456969782800802133952744694997983254226894449732493
	      5.56776436283002192211947129891854952047639337757041430396843258560358
	      5.65685424949238019520675489683879231427868750150779229270671895196292
	      5.74456264653802865985061146821892931822026445798279236769987747056590
	      5.83095189484530047087415287754558307652139833488597195445000674486781
	      5.91607978309961604256732829156161704841550123079434032287971966914282
	      6.00000000000000000000000000000000000000000000000000000000000000000000
	      6.08276253029821968899968424520206706208497009478641118641915304648633
	      6.16441400296897645025019238145424422523562402344457454487457207245839
	      6.24499799839839820584689312093979446107295997799165630845297193060961
	      6.32455532033675866399778708886543706743911027865043365371500970558518)))
  (let ((mxerr 0.0))
    (do ((i 1 (+ i 1)))
	((> i 40))
      (let ((err (abs (- (sqrt i) (list-ref sqrts (- i 1))))))
	(if (> err mxerr)
	    (set! mxerr err))))
    (if (> mxerr 1e-12) (format #t "sqrt err: ~A~%" mxerr))))

(if with-bignums
    (begin
      (num-test (/ (sqrt (* 1.2345e-170 1.2345e-170))) 8.100445524503847216161209708816501953798E169)
      (num-test (sqrt (expt 2 32)) 65536)
      (num-test (sqrt -1.797693134862315699999999999999999999998E308) 0.0+1.34078079299425963249160560140156653105E154i)
      (num-test (exp (* pi (sqrt (bignum "163")))) 2.625374126407687439999999999992500725895E17)
      ))

(if with-bignums
    (let ((old-prec (bignum-precision)))
      (set! (bignum-precision) 500)
      (let ((sqrts (list ; table[Sqrt[k/10], {k, 0, 30}]
		    0.00000000000000000000000000000000000000000000000000000000000000000000e0
		    0.31622776601683793319988935444327185337195551393252168268575048527925
		    0.44721359549995793928183473374625524708812367192230514485417944908210
		    0.54772255750516611345696978280080213395274469499798325422689444973249
		    0.63245553203367586639977870888654370674391102786504336537150097055851
		    0.70710678118654752440084436210484903928483593768847403658833986899536
		    0.77459666924148337703585307995647992216658434105831816531751475322269
		    0.83666002653407554797817202578518748939281536929867219981119154308041
		    0.89442719099991587856366946749251049417624734384461028970835889816420
		    0.94868329805051379959966806332981556011586654179756504805725145583777
		    1.00000000000000000000000000000000000000000000000000000000000000000000
		    1.04880884817015154699145351367993759847527185768150398487575576358000
		    1.09544511501033222691393956560160426790548938999596650845378889946498
		    1.14017542509913797913604902556675447907600531091641037529746941724956
		    1.18321595661992320851346565831232340968310024615886806457594393382856
		    1.22474487139158904909864203735294569598297374032833506421634628362548
		    1.26491106406735173279955741777308741348782205573008673074300194111703
		    1.30384048104052974291659431148583688330561875578201309179007936989676
		    1.34164078649987381784550420123876574126437101576691543456253834724631
		    1.37840487520902217679559125529341754271981635583990014790642120179806
		    1.41421356237309504880168872420969807856967187537694807317667973799073
		    1.44913767461894385737186641571697717231401328747589730886959248071181
		    1.48323969741913258974227948816014261219598086381950031974652465286876
		    1.51657508881031011085136508725641431090992842790349245064524200355844
		    1.54919333848296675407170615991295984433316868211663633063502950644539
		    1.58113883008418966599944677221635926685977756966260841342875242639629
		    1.61245154965970993047332264606075422622687926112171467758731847785277
		    1.64316767251549834037090934840240640185823408499394976268068334919747
		    1.67332005306815109595634405157037497878563073859734439962238308616083
		    1.70293863659264011661333218238773227063897151909784216273026969624657
		    1.73205080756887729352744634150587236694280525381038062805580697945193)))
	(do ((i 0 (+ i 1)))
	    ((= i 30))
	  (let ((val (sqrt (/ i (bignum "10")))))
	    (if (> (magnitude (- val (list-ref sqrts i))) 1e-36)
		(format #t ";(sqrt ~A) -> ~A ~A~%[~A]~%" (/ i 10) val (list-ref sqrts i) (magnitude (- val (list-ref sqrts i))))))))
      (set! (bignum-precision) old-prec)))
